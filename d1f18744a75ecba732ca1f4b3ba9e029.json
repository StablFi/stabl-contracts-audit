{
	"id": "d1f18744a75ecba732ca1f4b3ba9e029",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/token/OUSD.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title OUSD Token Contract\r\n * @dev ERC20 compatible contract for OUSD\r\n * @dev Implements an elastic supply\r\n * @author Origin Protocol Inc\r\n */\r\nimport { SafeMath } from \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport { Initializable } from \"../utils/Initializable.sol\";\r\nimport { InitializableERC20Detailed } from \"../utils/InitializableERC20Detailed.sol\";\r\nimport { StableMath } from \"../utils/StableMath.sol\";\r\nimport { Governable } from \"../governance/Governable.sol\";\r\n\r\n/**\r\n * NOTE that this is an ERC20 token but the invariant that the sum of\r\n * balanceOf(x) for all x is not >= totalSupply(). This is a consequence of the\r\n * rebasing design. Any integrations with OUSD should be aware.\r\n */\r\n\r\ncontract OUSD is Initializable, InitializableERC20Detailed, Governable {\r\n    using SafeMath for uint256;\r\n    using StableMath for uint256;\r\n\r\n    event TotalSupplyUpdatedHighres(\r\n        uint256 totalSupply,\r\n        uint256 rebasingCredits,\r\n        uint256 rebasingCreditsPerToken\r\n    );\r\n\r\n    enum RebaseOptions {\r\n        NotSet,\r\n        OptOut,\r\n        OptIn\r\n    }\r\n\r\n    uint256 private constant MAX_SUPPLY = ~uint128(0); // (2^128) - 1\r\n    uint256 public _totalSupply;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    address public vaultAddress = address(0);\r\n    mapping(address => uint256) private _creditBalances;\r\n    uint256 private _rebasingCredits;\r\n    uint256 private _rebasingCreditsPerToken;\r\n    // Frozen address/credits are non rebasing (value is held in contracts which\r\n    // do not receive yield unless they explicitly opt in)\r\n    uint256 public nonRebasingSupply;\r\n    mapping(address => uint256) public nonRebasingCreditsPerToken;\r\n    mapping(address => RebaseOptions) public rebaseState;\r\n    mapping(address => uint256) public isUpgraded;\r\n\r\n    uint256 private constant RESOLUTION_INCREASE = 1e9;\r\n\r\n    function initialize(\r\n        string calldata _nameArg,\r\n        string calldata _symbolArg,\r\n        address _vaultAddress\r\n    ) external onlyGovernor initializer {\r\n        InitializableERC20Detailed._initialize(_nameArg, _symbolArg, 18);\r\n        _rebasingCreditsPerToken = 1e18;\r\n        vaultAddress = _vaultAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifies that the caller is the Vault contract\r\n     */\r\n    modifier onlyVault() {\r\n        require(vaultAddress == msg.sender, \"Caller is not the Vault\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return The total supply of OUSD.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @return Low resolution rebasingCreditsPerToken\r\n     */\r\n    function rebasingCreditsPerToken() public view returns (uint256) {\r\n        return _rebasingCreditsPerToken / RESOLUTION_INCREASE;\r\n    }\r\n\r\n    /**\r\n     * @return Low resolution total number of rebasing credits\r\n     */\r\n    function rebasingCredits() public view returns (uint256) {\r\n        return _rebasingCredits / RESOLUTION_INCREASE;\r\n    }\r\n\r\n    /**\r\n     * @return High resolution rebasingCreditsPerToken\r\n     */\r\n    function rebasingCreditsPerTokenHighres() public view returns (uint256) {\r\n        return _rebasingCreditsPerToken;\r\n    }\r\n\r\n    /**\r\n     * @return High resolution total number of rebasing credits\r\n     */\r\n    function rebasingCreditsHighres() public view returns (uint256) {\r\n        return _rebasingCredits;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the balance of the specified address.\r\n     * @param _account Address to query the balance of.\r\n     * @return A uint256 representing the amount of base units owned by the\r\n     *         specified address.\r\n     */\r\n    function balanceOf(address _account)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        if (_creditBalances[_account] == 0) return 0;\r\n        return\r\n            _creditBalances[_account].divPrecisely(_creditsPerToken(_account));\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the credits balance of the specified address.\r\n     * @dev Backwards compatible with old low res credits per token.\r\n     * @param _account The address to query the balance of.\r\n     * @return (uint256, uint256) Credit balance and credits per token of the\r\n     *         address\r\n     */\r\n    function creditsBalanceOf(address _account)\r\n        public\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        uint256 cpt = _creditsPerToken(_account);\r\n        if (cpt == 1e27) {\r\n            // For a period before the resolution upgrade, we created all new\r\n            // contract accounts at high resolution. Since they are not changing\r\n            // as a result of this upgrade, we will return their true values\r\n            return (_creditBalances[_account], cpt);\r\n        } else {\r\n            return (\r\n                _creditBalances[_account] / RESOLUTION_INCREASE,\r\n                cpt / RESOLUTION_INCREASE\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the credits balance of the specified address.\r\n     * @param _account The address to query the balance of.\r\n     * @return (uint256, uint256, bool) Credit balance, credits per token of the\r\n     *         address, and isUpgraded\r\n     */\r\n    function creditsBalanceOfHighres(address _account)\r\n        public\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            bool\r\n        )\r\n    {\r\n        return (\r\n            _creditBalances[_account],\r\n            _creditsPerToken(_account),\r\n            isUpgraded[_account] == 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer tokens to a specified address.\r\n     * @param _to the address to transfer to.\r\n     * @param _value the amount to be transferred.\r\n     * @return true on success.\r\n     */\r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        require(_to != address(0), \"Transfer to zero address\");\r\n        require(\r\n            _value <= balanceOf(msg.sender),\r\n            \"Transfer greater than balance\"\r\n        );\r\n\r\n        _executeTransfer(msg.sender, _to, _value);\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer tokens from one address to another.\r\n     * @param _from The address you want to send tokens from.\r\n     * @param _to The address you want to transfer to.\r\n     * @param _value The amount of tokens to be transferred.\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public override returns (bool) {\r\n        require(_to != address(0), \"Transfer to zero address\");\r\n        require(_value <= balanceOf(_from), \"Transfer greater than balance\");\r\n\r\n        _allowances[_from][msg.sender] = _allowances[_from][msg.sender].sub(\r\n            _value\r\n        );\r\n\r\n        _executeTransfer(_from, _to, _value);\r\n\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Update the count of non rebasing credits in response to a transfer\r\n     * @param _from The address you want to send tokens from.\r\n     * @param _to The address you want to transfer to.\r\n     * @param _value Amount of OUSD to transfer\r\n     */\r\n    function _executeTransfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) internal {\r\n        bool isNonRebasingTo = _isNonRebasingAccount(_to);\r\n        bool isNonRebasingFrom = _isNonRebasingAccount(_from);\r\n\r\n        // Credits deducted and credited might be different due to the\r\n        // differing creditsPerToken used by each account\r\n        uint256 creditsCredited = _value.mulTruncate(_creditsPerToken(_to));\r\n        uint256 creditsDeducted = _value.mulTruncate(_creditsPerToken(_from));\r\n\r\n        _creditBalances[_from] = _creditBalances[_from].sub(\r\n            creditsDeducted,\r\n            \"Transfer amount exceeds balance\"\r\n        );\r\n        _creditBalances[_to] = _creditBalances[_to].add(creditsCredited);\r\n\r\n        if (isNonRebasingTo && !isNonRebasingFrom) {\r\n            // Transfer to non-rebasing account from rebasing account, credits\r\n            // are removed from the non rebasing tally\r\n            nonRebasingSupply = nonRebasingSupply.add(_value);\r\n            // Update rebasingCredits by subtracting the deducted amount\r\n            _rebasingCredits = _rebasingCredits.sub(creditsDeducted);\r\n        } else if (!isNonRebasingTo && isNonRebasingFrom) {\r\n            // Transfer to rebasing account from non-rebasing account\r\n            // Decreasing non-rebasing credits by the amount that was sent\r\n            nonRebasingSupply = nonRebasingSupply.sub(_value);\r\n            // Update rebasingCredits by adding the credited amount\r\n            _rebasingCredits = _rebasingCredits.add(creditsCredited);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Function to check the amount of tokens that _owner has allowed to\r\n     *      `_spender`.\r\n     * @param _owner The address which owns the funds.\r\n     * @param _spender The address which will spend the funds.\r\n     * @return The number of tokens still available for the _spender.\r\n     */\r\n    function allowance(address _owner, address _spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev Approve the passed address to spend the specified amount of tokens\r\n     *      on behalf of msg.sender. This method is included for ERC20\r\n     *      compatibility. `increaseAllowance` and `decreaseAllowance` should be\r\n     *      used instead.\r\n     *\r\n     *      Changing an allowance with this method brings the risk that someone\r\n     *      may transfer both the old and the new allowance - if they are both\r\n     *      greater than zero - if a transfer transaction is mined before the\r\n     *      later approve() call is mined.\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _value The amount of tokens to be spent.\r\n     */\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        _allowances[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the amount of tokens that an owner has allowed to\r\n     *      `_spender`.\r\n     *      This method should be used instead of approve() to avoid the double\r\n     *      approval vulnerability described above.\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _addedValue The amount of tokens to increase the allowance by.\r\n     */\r\n    function increaseAllowance(address _spender, uint256 _addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        _allowances[msg.sender][_spender] = _allowances[msg.sender][_spender]\r\n            .add(_addedValue);\r\n        emit Approval(msg.sender, _spender, _allowances[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the amount of tokens that an owner has allowed to\r\n            `_spender`.\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _subtractedValue The amount of tokens to decrease the allowance\r\n     *        by.\r\n     */\r\n    function decreaseAllowance(address _spender, uint256 _subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        uint256 oldValue = _allowances[msg.sender][_spender];\r\n        if (_subtractedValue >= oldValue) {\r\n            _allowances[msg.sender][_spender] = 0;\r\n        } else {\r\n            _allowances[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, _allowances[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens, increasing totalSupply.\r\n     */\r\n    function mint(address _account, uint256 _amount) external onlyVault {\r\n        _mint(_account, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `_amount` tokens and assigns them to `_account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address _account, uint256 _amount) internal nonReentrant {\r\n        require(_account != address(0), \"Mint to the zero address\");\r\n\r\n        bool isNonRebasingAccount = _isNonRebasingAccount(_account);\r\n\r\n        uint256 creditAmount = _amount.mulTruncate(_creditsPerToken(_account));\r\n        _creditBalances[_account] = _creditBalances[_account].add(creditAmount);\r\n\r\n        // If the account is non rebasing and doesn't have a set creditsPerToken\r\n        // then set it i.e. this is a mint from a fresh contract\r\n        if (isNonRebasingAccount) {\r\n            nonRebasingSupply = nonRebasingSupply.add(_amount);\r\n        } else {\r\n            _rebasingCredits = _rebasingCredits.add(creditAmount);\r\n        }\r\n\r\n        _totalSupply = _totalSupply.add(_amount);\r\n\r\n        require(_totalSupply < MAX_SUPPLY, \"Max supply\");\r\n\r\n        emit Transfer(address(0), _account, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Burns tokens, decreasing totalSupply.\r\n     */\r\n    function burn(address account, uint256 amount) external onlyVault {\r\n        _burn(account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `_amount` tokens from `_account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `_account` cannot be the zero address.\r\n     * - `_account` must have at least `_amount` tokens.\r\n     */\r\n    function _burn(address _account, uint256 _amount) internal nonReentrant {\r\n        require(_account != address(0), \"Burn from the zero address\");\r\n        if (_amount == 0) {\r\n            return;\r\n        }\r\n\r\n        bool isNonRebasingAccount = _isNonRebasingAccount(_account);\r\n        uint256 creditAmount = _amount.mulTruncate(_creditsPerToken(_account));\r\n        uint256 currentCredits = _creditBalances[_account];\r\n\r\n        // Remove the credits, burning rounding errors\r\n        if (\r\n            currentCredits == creditAmount || currentCredits - 1 == creditAmount\r\n        ) {\r\n            // Handle dust from rounding\r\n            _creditBalances[_account] = 0;\r\n        } else if (currentCredits > creditAmount) {\r\n            _creditBalances[_account] = _creditBalances[_account].sub(\r\n                creditAmount\r\n            );\r\n        } else {\r\n            revert(\"Remove exceeds balance\");\r\n        }\r\n\r\n        // Remove from the credit tallies and non-rebasing supply\r\n        if (isNonRebasingAccount) {\r\n            nonRebasingSupply = nonRebasingSupply.sub(_amount);\r\n        } else {\r\n            _rebasingCredits = _rebasingCredits.sub(creditAmount);\r\n        }\r\n\r\n        _totalSupply = _totalSupply.sub(_amount);\r\n\r\n        emit Transfer(_account, address(0), _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Get the credits per token for an account. Returns a fixed amount\r\n     *      if the account is non-rebasing.\r\n     * @param _account Address of the account.\r\n     */\r\n    function _creditsPerToken(address _account)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        if (nonRebasingCreditsPerToken[_account] != 0) {\r\n            return nonRebasingCreditsPerToken[_account];\r\n        } else {\r\n            return _rebasingCreditsPerToken;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Is an account using rebasing accounting or non-rebasing accounting?\r\n     *      Also, ensure contracts are non-rebasing if they have not opted in.\r\n     * @param _account Address of the account.\r\n     */\r\n    function _isNonRebasingAccount(address _account) internal returns (bool) {\r\n        bool isContract = Address.isContract(_account);\r\n        if (isContract && rebaseState[_account] == RebaseOptions.NotSet) {\r\n            _ensureRebasingMigration(_account);\r\n        }\r\n        return nonRebasingCreditsPerToken[_account] > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Ensures internal account for rebasing and non-rebasing credits and\r\n     *      supply is updated following deployment of frozen yield change.\r\n     */\r\n    function _ensureRebasingMigration(address _account) internal {\r\n        if (nonRebasingCreditsPerToken[_account] == 0) {\r\n            if (_creditBalances[_account] == 0) {\r\n                // Since there is no existing balance, we can directly set to\r\n                // high resolution, and do not have to do any other bookkeeping\r\n                nonRebasingCreditsPerToken[_account] = 1e27;\r\n            } else {\r\n                // Migrate an existing account:\r\n\r\n                // Set fixed credits per token for this account\r\n                nonRebasingCreditsPerToken[_account] = _rebasingCreditsPerToken;\r\n                // Update non rebasing supply\r\n                nonRebasingSupply = nonRebasingSupply.add(balanceOf(_account));\r\n                // Update credit tallies\r\n                _rebasingCredits = _rebasingCredits.sub(\r\n                    _creditBalances[_account]\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Add a contract address to the non-rebasing exception list. The\r\n     * address's balance will be part of rebases and the account will be exposed\r\n     * to upside and downside.\r\n     */\r\n    function rebaseOptIn() public nonReentrant {\r\n        require(_isNonRebasingAccount(msg.sender), \"Account has not opted out\");\r\n\r\n        // Convert balance into the same amount at the current exchange rate\r\n        uint256 newCreditBalance = _creditBalances[msg.sender]\r\n            .mul(_rebasingCreditsPerToken)\r\n            .div(_creditsPerToken(msg.sender));\r\n\r\n        // Decreasing non rebasing supply\r\n        nonRebasingSupply = nonRebasingSupply.sub(balanceOf(msg.sender));\r\n\r\n        _creditBalances[msg.sender] = newCreditBalance;\r\n\r\n        // Increase rebasing credits, totalSupply remains unchanged so no\r\n        // adjustment necessary\r\n        _rebasingCredits = _rebasingCredits.add(_creditBalances[msg.sender]);\r\n\r\n        rebaseState[msg.sender] = RebaseOptions.OptIn;\r\n\r\n        // Delete any fixed credits per token\r\n        delete nonRebasingCreditsPerToken[msg.sender];\r\n    }\r\n\r\n    /**\r\n     * @dev Explicitly mark that an address is non-rebasing.\r\n     */\r\n    function rebaseOptOut() public nonReentrant {\r\n        require(!_isNonRebasingAccount(msg.sender), \"Account has not opted in\");\r\n\r\n        // Increase non rebasing supply\r\n        nonRebasingSupply = nonRebasingSupply.add(balanceOf(msg.sender));\r\n        // Set fixed credits per token\r\n        nonRebasingCreditsPerToken[msg.sender] = _rebasingCreditsPerToken;\r\n\r\n        // Decrease rebasing credits, total supply remains unchanged so no\r\n        // adjustment necessary\r\n        _rebasingCredits = _rebasingCredits.sub(_creditBalances[msg.sender]);\r\n\r\n        // Mark explicitly opted out of rebasing\r\n        rebaseState[msg.sender] = RebaseOptions.OptOut;\r\n    }\r\n\r\n    /**\r\n     * @dev Modify the supply without minting new tokens. This uses a change in\r\n     *      the exchange rate between \"credits\" and OUSD tokens to change balances.\r\n     * @param _newTotalSupply New total supply of OUSD.\r\n     */\r\n    function changeSupply(uint256 _newTotalSupply)\r\n        external\r\n        onlyVault\r\n        nonReentrant\r\n    {\r\n        require(_totalSupply > 0, \"Cannot increase 0 supply\");\r\n\r\n        if (_totalSupply == _newTotalSupply) {\r\n            emit TotalSupplyUpdatedHighres(\r\n                _totalSupply,\r\n                _rebasingCredits,\r\n                _rebasingCreditsPerToken\r\n            );\r\n            return;\r\n        }\r\n\r\n        _totalSupply = _newTotalSupply > MAX_SUPPLY\r\n            ? MAX_SUPPLY\r\n            : _newTotalSupply;\r\n\r\n        _rebasingCreditsPerToken = _rebasingCredits.divPrecisely(\r\n            _totalSupply.sub(nonRebasingSupply)\r\n        );\r\n\r\n        require(_rebasingCreditsPerToken > 0, \"Invalid change in supply\");\r\n\r\n        _totalSupply = _rebasingCredits\r\n            .divPrecisely(_rebasingCreditsPerToken)\r\n            .add(nonRebasingSupply);\r\n\r\n        emit TotalSupplyUpdatedHighres(\r\n            _totalSupply,\r\n            _rebasingCredits,\r\n            _rebasingCreditsPerToken\r\n        );\r\n    }\r\n}\r\n"
			},
			"contracts/contracts/governance/Governable.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title OUSD Governable Contract\r\n * @dev Copy of the openzeppelin Ownable.sol contract with nomenclature change\r\n *      from owner to governor and renounce methods removed. Does not use\r\n *      Context.sol like Ownable.sol does for simplification.\r\n * @author Origin Protocol Inc\r\n */\r\ncontract Governable {\r\n    // Storage position of the owner and pendingOwner of the contract\r\n    // keccak256(\"OUSD.governor\");\r\n    bytes32 private constant governorPosition =\r\n        0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a;\r\n\r\n    // keccak256(\"OUSD.pending.governor\");\r\n    bytes32 private constant pendingGovernorPosition =\r\n        0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db;\r\n\r\n    // keccak256(\"OUSD.reentry.status\");\r\n    bytes32 private constant reentryStatusPosition =\r\n        0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535;\r\n\r\n    // See OpenZeppelin ReentrancyGuard implementation\r\n    uint256 constant _NOT_ENTERED = 1;\r\n    uint256 constant _ENTERED = 2;\r\n\r\n    event PendingGovernorshipTransfer(\r\n        address indexed previousGovernor,\r\n        address indexed newGovernor\r\n    );\r\n\r\n    event GovernorshipTransferred(\r\n        address indexed previousGovernor,\r\n        address indexed newGovernor\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial Governor.\r\n     */\r\n    constructor() {\r\n        _setGovernor(msg.sender);\r\n        emit GovernorshipTransferred(address(0), _governor());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current Governor.\r\n     */\r\n    function governor() public view returns (address) {\r\n        return _governor();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current Governor.\r\n     */\r\n    function _governor() internal view returns (address governorOut) {\r\n        bytes32 position = governorPosition;\r\n        assembly {\r\n            governorOut := sload(position)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the pending Governor.\r\n     */\r\n    function _pendingGovernor()\r\n        internal\r\n        view\r\n        returns (address pendingGovernor)\r\n    {\r\n        bytes32 position = pendingGovernorPosition;\r\n        assembly {\r\n            pendingGovernor := sload(position)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the Governor.\r\n     */\r\n    modifier onlyGovernor() {\r\n        require(isGovernor(), \"Caller is not the Governor\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current Governor.\r\n     */\r\n    function isGovernor() public view returns (bool) {\r\n        return msg.sender == _governor();\r\n    }\r\n\r\n    function _setGovernor(address newGovernor) internal {\r\n        bytes32 position = governorPosition;\r\n        assembly {\r\n            sstore(position, newGovernor)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        bytes32 position = reentryStatusPosition;\r\n        uint256 _reentry_status;\r\n        assembly {\r\n            _reentry_status := sload(position)\r\n        }\r\n\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_reentry_status != _ENTERED, \"Reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        assembly {\r\n            sstore(position, _ENTERED)\r\n        }\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        assembly {\r\n            sstore(position, _NOT_ENTERED)\r\n        }\r\n    }\r\n\r\n    function _setPendingGovernor(address newGovernor) internal {\r\n        bytes32 position = pendingGovernorPosition;\r\n        assembly {\r\n            sstore(position, newGovernor)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers Governance of the contract to a new account (`newGovernor`).\r\n     * Can only be called by the current Governor. Must be claimed for this to complete\r\n     * @param _newGovernor Address of the new Governor\r\n     */\r\n    function transferGovernance(address _newGovernor) external onlyGovernor {\r\n        _setPendingGovernor(_newGovernor);\r\n        emit PendingGovernorshipTransfer(_governor(), _newGovernor);\r\n    }\r\n\r\n    /**\r\n     * @dev Claim Governance of the contract to a new account (`newGovernor`).\r\n     * Can only be called by the new Governor.\r\n     */\r\n    function claimGovernance() external {\r\n        require(\r\n            msg.sender == _pendingGovernor(),\r\n            \"Only the pending Governor can complete the claim\"\r\n        );\r\n        _changeGovernor(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Change Governance of the contract to a new account (`newGovernor`).\r\n     * @param _newGovernor Address of the new Governor\r\n     */\r\n    function _changeGovernor(address _newGovernor) internal {\r\n        require(_newGovernor != address(0), \"New Governor is address(0)\");\r\n        emit GovernorshipTransferred(_governor(), _newGovernor);\r\n        _setGovernor(_newGovernor);\r\n    }\r\n}\r\n"
			},
			"contracts/contracts/utils/StableMath.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport { SafeMath } from \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n// Based on StableMath from Stability Labs Pty. Ltd.\r\n// https://github.com/mstable/mStable-contracts/blob/master/contracts/shared/StableMath.sol\r\n\r\nlibrary StableMath {\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * @dev Scaling unit for use in specific calculations,\r\n     * where 1 * 10**18, or 1e18 represents a unit '1'\r\n     */\r\n    uint256 private constant FULL_SCALE = 1e18;\r\n\r\n    /***************************************\r\n                    Helpers\r\n    ****************************************/\r\n\r\n    /**\r\n     * @dev Adjust the scale of an integer\r\n     * @param to Decimals to scale to\r\n     * @param from Decimals to scale from\r\n     */\r\n    function scaleBy(\r\n        uint256 x,\r\n        uint256 to,\r\n        uint256 from\r\n    ) internal pure returns (uint256) {\r\n        if (to > from) {\r\n            x = x.mul(10**(to - from));\r\n        } else if (to < from) {\r\n            x = x.div(10**(from - to));\r\n        }\r\n        return x;\r\n    }\r\n\r\n    /***************************************\r\n               Precise Arithmetic\r\n    ****************************************/\r\n\r\n    /**\r\n     * @dev Multiplies two precise units, and then truncates by the full scale\r\n     * @param x Left hand input to multiplication\r\n     * @param y Right hand input to multiplication\r\n     * @return Result after multiplying the two inputs and then dividing by the shared\r\n     *         scale unit\r\n     */\r\n    function mulTruncate(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return mulTruncateScale(x, y, FULL_SCALE);\r\n    }\r\n\r\n    /**\r\n     * @dev Multiplies two precise units, and then truncates by the given scale. For example,\r\n     * when calculating 90% of 10e18, (10e18 * 9e17) / 1e18 = (9e36) / 1e18 = 9e18\r\n     * @param x Left hand input to multiplication\r\n     * @param y Right hand input to multiplication\r\n     * @param scale Scale unit\r\n     * @return Result after multiplying the two inputs and then dividing by the shared\r\n     *         scale unit\r\n     */\r\n    function mulTruncateScale(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 scale\r\n    ) internal pure returns (uint256) {\r\n        // e.g. assume scale = fullScale\r\n        // z = 10e18 * 9e17 = 9e36\r\n        uint256 z = x.mul(y);\r\n        // return 9e36 / 1e18 = 9e18\r\n        return z.div(scale);\r\n    }\r\n\r\n    /**\r\n     * @dev Multiplies two precise units, and then truncates by the full scale, rounding up the result\r\n     * @param x Left hand input to multiplication\r\n     * @param y Right hand input to multiplication\r\n     * @return Result after multiplying the two inputs and then dividing by the shared\r\n     *          scale unit, rounded up to the closest base unit.\r\n     */\r\n    function mulTruncateCeil(uint256 x, uint256 y)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        // e.g. 8e17 * 17268172638 = 138145381104e17\r\n        uint256 scaled = x.mul(y);\r\n        // e.g. 138145381104e17 + 9.99...e17 = 138145381113.99...e17\r\n        uint256 ceil = scaled.add(FULL_SCALE.sub(1));\r\n        // e.g. 13814538111.399...e18 / 1e18 = 13814538111\r\n        return ceil.div(FULL_SCALE);\r\n    }\r\n\r\n    /**\r\n     * @dev Precisely divides two units, by first scaling the left hand operand. Useful\r\n     *      for finding percentage weightings, i.e. 8e18/10e18 = 80% (or 8e17)\r\n     * @param x Left hand input to division\r\n     * @param y Right hand input to division\r\n     * @return Result after multiplying the left operand by the scale, and\r\n     *         executing the division on the right hand input.\r\n     */\r\n    function divPrecisely(uint256 x, uint256 y)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        // e.g. 8e18 * 1e18 = 8e36\r\n        uint256 z = x.mul(FULL_SCALE);\r\n        // e.g. 8e36 / 10e18 = 8e17\r\n        return z.div(y);\r\n    }\r\n}\r\n"
			},
			"contracts/contracts/utils/InitializableERC20Detailed.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/**\r\n * @dev Optional functions from the ERC20 standard.\r\n * Converted from openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\r\n */\r\nabstract contract InitializableERC20Detailed is IERC20 {\r\n    // Storage gap to skip storage from prior to OUSD reset\r\n    uint256[100] private _____gap;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\r\n     * these values are immutable: they can only be set once during\r\n     * construction.\r\n     * @notice To avoid variable shadowing appended `Arg` after arguments name.\r\n     */\r\n    function _initialize(\r\n        string memory nameArg,\r\n        string memory symbolArg,\r\n        uint8 decimalsArg\r\n    ) internal {\r\n        _name = nameArg;\r\n        _symbol = symbolArg;\r\n        _decimals = decimalsArg;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n"
			},
			"contracts/contracts/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Initializable {\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     */\r\n    bool private initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private initializing;\r\n\r\n    /**\r\n     * @dev Modifier to protect an initializer function from being invoked twice.\r\n     */\r\n    modifier initializer() {\r\n        require(\r\n            initializing || !initialized,\r\n            \"Initializable: contract is already initialized\"\r\n        );\r\n\r\n        bool isTopLevelCall = !initializing;\r\n        if (isTopLevelCall) {\r\n            initializing = true;\r\n            initialized = true;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            initializing = false;\r\n        }\r\n    }\r\n\r\n    uint256[50] private ______gap;\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT GT DUP16 0xF9 0x4F 0xC 0x4D 0xED SLOAD NOT 0xE ORIGIN EXTCODECOPY 0xB0 0xCD 0xB6 SIGNEXTEND POP 0xEF PUSH23 0x36EEDA79A43612DDE54315764736F6C63430008070033 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT GT DUP16 0xF9 0x4F 0xC 0x4D 0xED SLOAD NOT 0xE ORIGIN EXTCODECOPY 0xB0 0xCD 0xB6 SIGNEXTEND POP 0xEF PUSH23 0x36EEDA79A43612DDE54315764736F6C63430008070033 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff118ff94f0c4ded54190e323cb0cdb60b50ef76036eeda79a43612dde54315764736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/governance/Governable.sol": {
				"Governable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "GovernorshipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "PendingGovernorshipTransfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isGovernor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "transferGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Origin Protocol Inc",
						"details": "Copy of the openzeppelin Ownable.sol contract with nomenclature change      from owner to governor and renounce methods removed. Does not use      Context.sol like Ownable.sol does for simplification.",
						"kind": "dev",
						"methods": {
							"claimGovernance()": {
								"details": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor."
							},
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial Governor."
							},
							"governor()": {
								"details": "Returns the address of the current Governor."
							},
							"isGovernor()": {
								"details": "Returns true if the caller is the current Governor."
							},
							"transferGovernance(address)": {
								"details": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete",
								"params": {
									"_newGovernor": "Address of the new Governor"
								}
							}
						},
						"title": "OUSD Governable Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/governance/Governable.sol\":361:5471  contract Governable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/governance/Governable.sol\":1469:1590  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\n  tag_4\n    /* \"contracts/contracts/governance/Governable.sol\":1507:1517  msg.sender */\n  caller\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n  sstore\n    /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n  jump\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\ntag_4:\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n  sload\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  0x00\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  dup3\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  log3\n    /* \"contracts/contracts/governance/Governable.sol\":361:5471  contract Governable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\nsub_0: assembly {\n        /* \"contracts/contracts/governance/Governable.sol\":361:5471  contract Governable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c340a24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5d36b190\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc7af3352\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd38bfff4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":678:692   */\n      swap1\n      iszero\n        /* \"#utility.yul\":671:693   */\n      iszero\n        /* \"#utility.yul\":653:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      tag_9\n        /* \"#utility.yul\":513:700   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_6:\n      tag_11\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_8:\n        /* \"contracts/contracts/governance/Governable.sol\":1715:1722  address */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n      tag_22\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n    tag_22:\n        /* \"contracts/contracts/governance/Governable.sol\":1735:1753  return _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_12:\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":2338:2353  sload(position) */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4918  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      tag_27\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1617:1619   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1599:1620   */\n      mstore\n        /* \"#utility.yul\":1656:1658   */\n      0x30\n        /* \"#utility.yul\":1636:1654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1629:1659   */\n      mstore\n        /* \"#utility.yul\":1695:1729   */\n      0x4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f\n        /* \"#utility.yul\":1675:1693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1668:1730   */\n      mstore\n      shl(0x80, 0x6d706c6574652074686520636c61696d)\n        /* \"#utility.yul\":1746:1764   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1739:1785   */\n      mstore\n        /* \"#utility.yul\":1802:1821   */\n      0x84\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      tag_30\n        /* \"contracts/contracts/governance/Governable.sol\":5043:5053  msg.sender */\n      caller\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5042  _changeGovernor */\n      tag_31\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      jump\t// in\n    tag_30:\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_14:\n        /* \"contracts/contracts/governance/Governable.sol\":2707:2711  bool */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n      tag_33\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2741  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":2724:2756  return msg.sender == _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_20:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_35\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_14\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_35:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":889:910   */\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1a\n        /* \"#utility.yul\":926:944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1013   */\n      0x43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000\n        /* \"#utility.yul\":965:983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":958:1014   */\n      mstore\n        /* \"#utility.yul\":1031:1049   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_28\n        /* \"#utility.yul\":705:1055   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n    tag_36:\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n      tag_40\n        /* \"contracts/contracts/governance/Governable.sol\":4594:4606  _newGovernor */\n      dup2\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":4189:4218  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":4042:4236  function _setPendingGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n    tag_40:\n        /* \"contracts/contracts/governance/Governable.sol\":4664:4676  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n      tag_42\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n      0xa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5300:5326  _newGovernor != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1262:1264   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1244:1265   */\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x1a\n        /* \"#utility.yul\":1281:1299   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1274:1304   */\n      mstore\n        /* \"#utility.yul\":1340:1368   */\n      0x4e657720476f7665726e6f722069732061646472657373283029000000000000\n        /* \"#utility.yul\":1320:1338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1313:1369   */\n      mstore\n        /* \"#utility.yul\":1386:1404   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_28\n        /* \"#utility.yul\":1060:1410   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n    tag_46:\n        /* \"contracts/contracts/governance/Governable.sol\":5410:5422  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n      tag_49\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n      0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n      tag_50\n        /* \"contracts/contracts/governance/Governable.sol\":5447:5459  _newGovernor */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n    tag_50:\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_19:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_56:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_57:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\n    auxdata: 0xa2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_governor_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100273360008051602061043f83398151915255565b60008051602061043f833981519152546040516001600160a01b03909116906000907fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a908290a36103c28061007d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c340a24146100515780635d36b19014610076578063c7af335214610080578063d38bfff414610098575b600080fd5b6100596100ab565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100c8565b005b610088610173565b604051901515815260200161006d565b61007e6100a636600461033c565b6101a4565b60006100c360008051602061036d8339815191525490565b905090565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b0316146101685760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084015b60405180910390fd5b61017133610278565b565b600061018b60008051602061036d8339815191525490565b6001600160a01b0316336001600160a01b031614905090565b6101ac610173565b6101f85760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604482015260640161015f565b610220817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b031661024060008051602061036d8339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166102ce5760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f722069732061646472657373283029000000000000604482015260640161015f565b806001600160a01b03166102ee60008051602061036d8339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a36103398160008051602061036d83398151915255565b50565b60006020828403121561034e57600080fd5b81356001600160a01b038116811461036557600080fd5b939250505056fe7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c634300080700337bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x3C2 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC340A24 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH2 0x7E PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171 CALLER PUSH2 0x278 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x173 JUMP JUMPDEST PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x220 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x240 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x339 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH28 0xEA13895FA79D2831E0A9E28EDEDE30099005A50D652D8957CF8A607E 0xE6 0xCA 0x4A LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 GT SGT 0xD9 PUSH26 0xFEDADE869DB399BB142BBADAB96CE22EA1649C528B3E74F46736 PUSH31 0x64736F6C634300080700337BEA13895FA79D2831E0A9E28EDEDE30099005A5 0xD PUSH6 0x2D8957CF8A60 PUSH31 0xE6CA4A00000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "361:5110:3:-:0;;;1469:121;;;;;;;;;-1:-1:-1;1494:24:3;1507:10;-1:-1:-1;;;;;;;;;;;2905:29:3;2772:180;1494:24;-1:-1:-1;;;;;;;;;;;2006:15:3;1534:48;;-1:-1:-1;;;;;1534:48:3;;;;1566:1;;1534:48;;1566:1;;1534:48;361:5110;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_changeGovernor_900": {
									"entryPoint": 632,
									"id": 900,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_governor_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pendingGovernor_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPendingGovernor_835": {
									"entryPoint": null,
									"id": 835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimGovernance_873": {
									"entryPoint": 200,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@governor_743": {
									"entryPoint": 171,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isGovernor_791": {
									"entryPoint": 371,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferGovernance_854": {
									"entryPoint": 420,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1829:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:8"
															},
															"nodeType": "YulIf",
															"src": "94:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:8"
															},
															"nodeType": "YulIf",
															"src": "200:70:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:8",
														"type": ""
													}
												],
												"src": "14:286:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:8",
														"type": ""
													}
												],
												"src": "305:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "630:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "618:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "678:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "671:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "577:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "588:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "599:4:8",
														"type": ""
													}
												],
												"src": "513:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:176:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "896:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:8"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742074686520476f7665726e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "985:28:8",
																		"type": "",
																		"value": "Caller is not the Governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1023:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1023:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "856:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "870:4:8",
														"type": ""
													}
												],
												"src": "705:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1234:176:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1285:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1281:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:18:8"
																	},
																	{
																		"hexValue": "4e657720476f7665726e6f722069732061646472657373283029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1340:28:8",
																		"type": "",
																		"value": "New Governor is address(0)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1378:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1390:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1378:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1211:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1225:4:8",
														"type": ""
													}
												],
												"src": "1060:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:238:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:8",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1629:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1690:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1675:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:18:8"
																	},
																	{
																		"hexValue": "4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1695:34:8",
																		"type": "",
																		"value": "Only the pending Governor can co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1750:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1761:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:18:8"
																	},
																	{
																		"hexValue": "6d706c6574652074686520636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1766:18:8",
																		"type": "",
																		"value": "mplete the claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1794:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1580:4:8",
														"type": ""
													}
												],
												"src": "1415:412:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not the Governor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"New Governor is address(0)\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Only the pending Governor can co\")\n        mstore(add(headStart, 96), \"mplete the claim\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c340a24146100515780635d36b19014610076578063c7af335214610080578063d38bfff414610098575b600080fd5b6100596100ab565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100c8565b005b610088610173565b604051901515815260200161006d565b61007e6100a636600461033c565b6101a4565b60006100c360008051602061036d8339815191525490565b905090565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b0316146101685760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084015b60405180910390fd5b61017133610278565b565b600061018b60008051602061036d8339815191525490565b6001600160a01b0316336001600160a01b031614905090565b6101ac610173565b6101f85760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604482015260640161015f565b610220817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b031661024060008051602061036d8339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166102ce5760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f722069732061646472657373283029000000000000604482015260640161015f565b806001600160a01b03166102ee60008051602061036d8339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a36103398160008051602061036d83398151915255565b50565b60006020828403121561034e57600080fd5b81356001600160a01b038116811461036557600080fd5b939250505056fe7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC340A24 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH2 0x7E PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171 CALLER PUSH2 0x278 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x173 JUMP JUMPDEST PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x220 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x240 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x339 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH28 0xEA13895FA79D2831E0A9E28EDEDE30099005A50D652D8957CF8A607E 0xE6 0xCA 0x4A LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 GT SGT 0xD9 PUSH26 0xFEDADE869DB399BB142BBADAB96CE22EA1649C528B3E74F46736 PUSH31 0x64736F6C634300080700330000000000000000000000000000000000000000 ",
							"sourceMap": "361:5110:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:87;;;:::i;:::-;;;-1:-1:-1;;;;;469:32:8;;;451:51;;439:2;424:18;1674:87:3;;;;;;;;4839:223;;;:::i;:::-;;2664:100;;;:::i;:::-;;;678:14:8;;671:22;653:41;;641:2;626:18;2664:100:3;513:187:8;4491:194:3;;;;;;:::i;:::-;;:::i;1674:87::-;1715:7;1742:11;-1:-1:-1;;;;;;;;;;;2006:15:3;;1845:194;1742:11;1735:18;;1674:87;:::o;4839:223::-;727:66;2338:15;-1:-1:-1;;;;;4908:32:3;:10;-1:-1:-1;;;;;4908:32:3;;4886:130;;;;-1:-1:-1;;;4886:130:3;;1617:2:8;4886:130:3;;;1599:21:8;1656:2;1636:18;;;1629:30;1695:34;1675:18;;;1668:62;-1:-1:-1;;;1746:18:8;;;1739:46;1802:19;;4886:130:3;;;;;;;;;5027:27;5043:10;5027:15;:27::i;:::-;4839:223::o;2664:100::-;2707:4;2745:11;-1:-1:-1;;;;;;;;;;;2006:15:3;;1845:194;2745:11;-1:-1:-1;;;;;2731:25:3;:10;-1:-1:-1;;;;;2731:25:3;;2724:32;;2664:100;:::o;4491:194::-;2510:12;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:3;;907:2:8;2502:51:3;;;889:21:8;946:2;926:18;;;919:30;985:28;965:18;;;958:56;1031:18;;2502:51:3;705:350:8;2502:51:3;4574:33:::1;4594:12;727:66:::0;4189:29;4042:194;4574:33:::1;4664:12;-1:-1:-1::0;;;;;4623:54:3::1;4651:11;-1:-1:-1::0;;;;;;;;;;;2006:15:3;;1845:194;4651:11:::1;-1:-1:-1::0;;;;;4623:54:3::1;;;;;;;;;;;4491:194:::0;:::o;5225:243::-;-1:-1:-1;;;;;5300:26:3;;5292:65;;;;-1:-1:-1;;;5292:65:3;;1262:2:8;5292:65:3;;;1244:21:8;1301:2;1281:18;;;1274:30;1340:28;1320:18;;;1313:56;1386:18;;5292:65:3;1060:350:8;5292:65:3;5410:12;-1:-1:-1;;;;;5373:50:3;5397:11;-1:-1:-1;;;;;;;;;;;2006:15:3;;1845:194;5397:11;-1:-1:-1;;;;;5373:50:3;;;;;;;;;;;5434:26;5447:12;-1:-1:-1;;;;;;;;;;;2905:29:3;2772:180;5434:26;5225:243;:::o;14:286:8:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:8;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "192400",
								"executionCost": "26075",
								"totalCost": "218475"
							},
							"external": {
								"claimGovernance()": "28233",
								"governor()": "infinite",
								"isGovernor()": "infinite",
								"transferGovernance(address)": "infinite"
							},
							"internal": {
								"_changeGovernor(address)": "infinite",
								"_governor()": "infinite",
								"_pendingGovernor()": "infinite",
								"_setGovernor(address)": "infinite",
								"_setPendingGovernor(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1507,
									"end": 1517,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2905,
									"end": 2934,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2772,
									"end": 2952,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2021,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 3,
									"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c63430008070033",
									".code": [
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "C340A24"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "5D36B190"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "C7AF3352"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "D38BFFF4"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 678,
											"end": 692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 678,
											"end": 692,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 653,
											"end": 694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 653,
											"end": 694,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 513,
											"end": 700,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 2338,
											"end": 2353,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4918,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1729,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D706C6574652074686520636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1785,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2741,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 8,
											"value": "43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 1014,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 705,
											"end": 1055,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 4189,
											"end": 4218,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4236,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "A39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1264,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1304,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1368,
											"name": "PUSH",
											"source": 8,
											"value": "4E657720476F7665726E6F722069732061646472657373283029000000000000"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1369,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1060,
											"end": 1410,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2934,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2952,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									],
									".data": {
										"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
									}
								},
								"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
							}
						},
						"methodIdentifiers": {
							"claimGovernance()": "5d36b190",
							"governor()": "0c340a24",
							"isGovernor()": "c7af3352",
							"transferGovernance(address)": "d38bfff4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorshipTransfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origin Protocol Inc\",\"details\":\"Copy of the openzeppelin Ownable.sol contract with nomenclature change      from owner to governor and renounce methods removed. Does not use      Context.sol like Ownable.sol does for simplification.\",\"kind\":\"dev\",\"methods\":{\"claimGovernance()\":{\"details\":\"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.\"},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial Governor.\"},\"governor()\":{\"details\":\"Returns the address of the current Governor.\"},\"isGovernor()\":{\"details\":\"Returns true if the caller is the current Governor.\"},\"transferGovernance(address)\":{\"details\":\"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete\",\"params\":{\"_newGovernor\":\"Address of the new Governor\"}}},\"title\":\"OUSD Governable Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/governance/Governable.sol\":\"Governable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/governance/Governable.sol\":{\"keccak256\":\"0xe5e82e9c9b2611b9cc82e2a047cb7fed850133eecc5a070ee61093c348bcc976\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://752df48fe4a3578b2a08f7518a261eb340bc7940ecb3d24929d7c2af1ed24c91\",\"dweb:/ipfs/QmbHseRzFZqTuoKzavEgWSZveBMPT5hjgcZP2xWUUgaTTU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/OUSD.sol": {
				"OUSD": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "GovernorshipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "PendingGovernorshipTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebasingCredits",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rebasingCreditsPerToken",
									"type": "uint256"
								}
							],
							"name": "TotalSupplyUpdatedHighres",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTotalSupply",
									"type": "uint256"
								}
							],
							"name": "changeSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "creditsBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "creditsBalanceOfHighres",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nameArg",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbolArg",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_vaultAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isGovernor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isUpgraded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonRebasingCreditsPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonRebasingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseOptIn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebaseOptOut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rebaseState",
							"outputs": [
								{
									"internalType": "enum OUSD.RebaseOptions",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebasingCredits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebasingCreditsHighres",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebasingCreditsPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebasingCreditsPerTokenHighres",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "transferGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that _owner has allowed to      `_spender`.",
								"params": {
									"_owner": "The address which owns the funds.",
									"_spender": "The address which will spend the funds."
								},
								"returns": {
									"_0": "The number of tokens still available for the _spender."
								}
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens      on behalf of msg.sender. This method is included for ERC20      compatibility. `increaseAllowance` and `decreaseAllowance` should be      used instead.      Changing an allowance with this method brings the risk that someone      may transfer both the old and the new allowance - if they are both      greater than zero - if a transfer transaction is mined before the      later approve() call is mined.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_account": "Address to query the balance of."
								},
								"returns": {
									"_0": "A uint256 representing the amount of base units owned by the         specified address."
								}
							},
							"burn(address,uint256)": {
								"details": "Burns tokens, decreasing totalSupply."
							},
							"changeSupply(uint256)": {
								"details": "Modify the supply without minting new tokens. This uses a change in      the exchange rate between \"credits\" and OUSD tokens to change balances.",
								"params": {
									"_newTotalSupply": "New total supply of OUSD."
								}
							},
							"claimGovernance()": {
								"details": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor."
							},
							"creditsBalanceOf(address)": {
								"details": "Gets the credits balance of the specified address.Backwards compatible with old low res credits per token.",
								"params": {
									"_account": "The address to query the balance of."
								},
								"returns": {
									"_0": "(uint256, uint256) Credit balance and credits per token of the         address"
								}
							},
							"creditsBalanceOfHighres(address)": {
								"details": "Gets the credits balance of the specified address.",
								"params": {
									"_account": "The address to query the balance of."
								},
								"returns": {
									"_0": "(uint256, uint256, bool) Credit balance, credits per token of the         address, and isUpgraded"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Decrease the amount of tokens that an owner has allowed to `_spender`.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_subtractedValue": "The amount of tokens to decrease the allowance        by."
								}
							},
							"governor()": {
								"details": "Returns the address of the current Governor."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Increase the amount of tokens that an owner has allowed to      `_spender`.      This method should be used instead of approve() to avoid the double      approval vulnerability described above.",
								"params": {
									"_addedValue": "The amount of tokens to increase the allowance by.",
									"_spender": "The address which will spend the funds."
								}
							},
							"isGovernor()": {
								"details": "Returns true if the caller is the current Governor."
							},
							"mint(address,uint256)": {
								"details": "Mints new tokens, increasing totalSupply."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"rebaseOptIn()": {
								"details": "Add a contract address to the non-rebasing exception list. The address's balance will be part of rebases and the account will be exposed to upside and downside."
							},
							"rebaseOptOut()": {
								"details": "Explicitly mark that an address is non-rebasing."
							},
							"rebasingCredits()": {
								"returns": {
									"_0": "Low resolution total number of rebasing credits"
								}
							},
							"rebasingCreditsHighres()": {
								"returns": {
									"_0": "High resolution total number of rebasing credits"
								}
							},
							"rebasingCreditsPerToken()": {
								"returns": {
									"_0": "Low resolution rebasingCreditsPerToken"
								}
							},
							"rebasingCreditsPerTokenHighres()": {
								"returns": {
									"_0": "High resolution rebasingCreditsPerToken"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"returns": {
									"_0": "The total supply of OUSD."
								}
							},
							"transfer(address,uint256)": {
								"details": "Transfer tokens to a specified address.",
								"params": {
									"_to": "the address to transfer to.",
									"_value": "the amount to be transferred."
								},
								"returns": {
									"_0": "true on success."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another.",
								"params": {
									"_from": "The address you want to send tokens from.",
									"_to": "The address you want to transfer to.",
									"_value": "The amount of tokens to be transferred."
								}
							},
							"transferGovernance(address)": {
								"details": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete",
								"params": {
									"_newGovernor": "Address of the new Governor"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/token/OUSD.sol\":863:20530  contract OUSD is Initializable, InitializableERC20Detailed, Governable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/token/OUSD.sol\":1427:1467  address public vaultAddress = address(0) */\n  0x9c\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap1\n  sstore\n    /* \"contracts/contracts/token/OUSD.sol\":863:20530  contract OUSD is Initializable, InitializableERC20Detailed, Governable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\n  tag_4\n    /* \"contracts/contracts/governance/Governable.sol\":1507:1517  msg.sender */\n  caller\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n  sstore\n    /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n  jump\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\ntag_4:\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n  sload\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  0x00\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  dup3\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  log3\n    /* \"contracts/contracts/token/OUSD.sol\":863:20530  contract OUSD is Initializable, InitializableERC20Detailed, Governable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\nsub_0: assembly {\n        /* \"contracts/contracts/token/OUSD.sol\":863:20530  contract OUSD is Initializable, InitializableERC20Detailed, Governable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6691cb3d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe5c4fffe\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xe696393a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf51b0fd4\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf9854bfc\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc2376dff\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc7af3352\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd38bfff4\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x95d89b41\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95ef84b9\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x6691cb3d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7a46a9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7d0d66ff\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x39509351\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x430bf08a\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x430bf08a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x456ee286\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5d36b190\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x609350cd\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39a7919f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x0c340a24\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x0c340a24\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x077f224a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x077f22b7\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1094:1177  function name() public view returns (string memory) {\r... */\n    tag_3:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/token/OUSD.sol\":2039:2368  function initialize(\r... */\n    tag_4:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/contracts/token/OUSD.sol\":3044:3165  function rebasingCredits() public view returns (uint256) {\r... */\n    tag_5:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":9835:9860   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9823:9825   */\n      0x20\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":3044:3165  function rebasingCredits() public view returns (uint256) {\r... */\n      tag_45\n        /* \"#utility.yul\":9689:9866   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":10191:10442  function approve(address _spender, uint256 _value)\r... */\n    tag_6:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":2951:2965   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2944:2966   */\n      iszero\n        /* \"#utility.yul\":2926:2967   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2914:2916   */\n      0x20\n        /* \"#utility.yul\":2899:2917   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":10191:10442  function approve(address _spender, uint256 _value)\r... */\n      tag_45\n        /* \"#utility.yul\":2786:2973   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_7:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2742:2774   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2724:2775   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2712:2714   */\n      0x20\n        /* \"#utility.yul\":2697:2715   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n      tag_45\n        /* \"#utility.yul\":2578:2781   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":2636:2736  function totalSupply() public view override returns (uint256) {\r... */\n    tag_8:\n        /* \"contracts/contracts/token/OUSD.sol\":2716:2728  _totalSupply */\n      sload(0x9a)\n        /* \"contracts/contracts/token/OUSD.sol\":2636:2736  function totalSupply() public view override returns (uint256) {\r... */\n      jump(tag_51)\n        /* \"contracts/contracts/token/OUSD.sol\":6607:7121  function transferFrom(\r... */\n    tag_9:\n      tag_55\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1946:2029  function decimals() public view returns (uint8) {\r... */\n    tag_10:\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":2012:2021  _decimals */\n      sload(0x99)\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1946:2029  function decimals() public view returns (uint8) {\r... */\n      mload(0x40)\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":2012:2021  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":10924:10960   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10912:10914   */\n      0x20\n        /* \"#utility.yul\":10897:10915   */\n      add\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1946:2029  function decimals() public view returns (uint8) {\r... */\n      tag_45\n        /* \"#utility.yul\":10782:10966   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":10841:11174  function increaseAllowance(address _spender, uint256 _addedValue)\r... */\n    tag_11:\n      tag_55\n      tag_78\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":19487:20527  function changeSupply(uint256 _newTotalSupply)\r... */\n    tag_12:\n      tag_47\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":1319:1346  uint256 public _totalSupply */\n    tag_13:\n      tag_51\n      sload(0x9a)\n      dup2\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":12037:12148  function mint(address _account, uint256 _amount) external onlyVault {\r... */\n    tag_14:\n      tag_47\n      tag_89\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":1427:1467  address public vaultAddress = address(0) */\n    tag_15:\n      sload(0x9c)\n      tag_61\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":1867:1919  mapping(address => RebaseOptions) public rebaseState */\n    tag_16:\n      tag_94\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      mstore(0x20, 0xa2)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_94:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_17:\n      tag_47\n      tag_101\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":1799:1860  mapping(address => uint256) public nonRebasingCreditsPerToken */\n    tag_18:\n      tag_51\n      tag_103\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_103:\n      mstore(0x20, 0xa1)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":2817:2954  function rebasingCreditsPerToken() public view returns (uint256) {\r... */\n    tag_19:\n      tag_51\n      tag_107\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":3817:4094  function balanceOf(address _account)\r... */\n    tag_20:\n      tag_51\n      tag_110\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":3247:3369  function rebasingCreditsPerTokenHighres() public view returns (uint256) {\r... */\n    tag_21:\n        /* \"contracts/contracts/token/OUSD.sol\":3337:3361  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":3247:3369  function rebasingCreditsPerTokenHighres() public view returns (uint256) {\r... */\n      jump(tag_51)\n        /* \"contracts/contracts/token/OUSD.sol\":3460:3566  function rebasingCreditsHighres() public view returns (uint256) {\r... */\n    tag_22:\n        /* \"contracts/contracts/token/OUSD.sol\":3542:3558  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":3460:3566  function rebasingCreditsHighres() public view returns (uint256) {\r... */\n      jump(tag_51)\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1296:1383  function symbol() public view returns (string memory) {\r... */\n    tag_23:\n      tag_43\n      tag_120\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":1926:1971  mapping(address => uint256) public isUpgraded */\n    tag_24:\n      tag_51\n      tag_123\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_123:\n      mstore(0x20, 0xa3)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":13423:13530  function burn(address account, uint256 amount) external onlyVault {\r... */\n    tag_25:\n      tag_47\n      tag_127\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":11459:11956  function decreaseAllowance(address _spender, uint256 _subtractedValue)\r... */\n    tag_26:\n      tag_55\n      tag_130\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":5909:6342  function transfer(address _to, uint256 _value)\r... */\n    tag_27:\n      tag_55\n      tag_134\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":18571:19238  function rebaseOptOut() public nonReentrant {\r... */\n    tag_28:\n      tag_47\n      tag_138\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_29:\n      tag_55\n      tag_140\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_30:\n      tag_47\n      tag_143\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":9304:9492  function allowance(address _owner, address _spender)\r... */\n    tag_31:\n      tag_51\n      tag_146\n      calldatasize\n      0x04\n      tag_147\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":9455:9474  _allowances[_owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":9423:9430  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":9455:9474  _allowances[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":9455:9466  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":9455:9474  _allowances[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":9455:9484  _allowances[_owner][_spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":9304:9492  function allowance(address _owner, address _spender)\r... */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":5362:5698  function creditsBalanceOfHighres(address _account)\r... */\n    tag_32:\n      tag_150\n      tag_151\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10320:10345   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":10376:10378   */\n      0x20\n        /* \"#utility.yul\":10361:10379   */\n      dup5\n      add\n        /* \"#utility.yul\":10354:10388   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10431:10445   */\n      iszero\n        /* \"#utility.yul\":10424:10446   */\n      iszero\n        /* \"#utility.yul\":10404:10422   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10397:10447   */\n      mstore\n        /* \"#utility.yul\":10308:10310   */\n      0x60\n        /* \"#utility.yul\":10293:10311   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":5362:5698  function creditsBalanceOfHighres(address _account)\r... */\n      tag_45\n        /* \"#utility.yul\":10124:10453   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":1760:1792  uint256 public nonRebasingSupply */\n    tag_33:\n      tag_51\n      sload(0xa0)\n      dup2\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":17582:18483  function rebaseOptIn() public nonReentrant {\r... */\n    tag_34:\n      tag_47\n      tag_159\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":4418:5089  function creditsBalanceOf(address _account)\r... */\n    tag_35:\n      tag_160\n      tag_161\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10045:10070   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":10101:10103   */\n      0x20\n        /* \"#utility.yul\":10086:10104   */\n      dup4\n      add\n        /* \"#utility.yul\":10079:10113   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10018:10036   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":4418:5089  function creditsBalanceOf(address _account)\r... */\n      tag_45\n        /* \"#utility.yul\":9871:10119   */\n      jump\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1094:1177  function name() public view returns (string memory) {\r... */\n    tag_44:\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1131:1144  string memory */\n      0x60\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1164:1169  _name */\n      0x97\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1157:1169  return _name */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_167\n      jump\t// in\n    tag_168:\n      dup1\n      iszero\n      tag_169\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_170\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_169)\n    tag_170:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_171:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_171\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1094:1177  function name() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":2039:2368  function initialize(\r... */\n    tag_50:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_173\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_140\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5549:5551   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5531:5552   */\n      mstore\n        /* \"#utility.yul\":5588:5590   */\n      0x1a\n        /* \"#utility.yul\":5568:5586   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5561:5591   */\n      mstore\n        /* \"#utility.yul\":5627:5655   */\n      0x43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000\n        /* \"#utility.yul\":5607:5625   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5600:5656   */\n      mstore\n        /* \"#utility.yul\":5673:5691   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/contracts/utils/Initializable.sol\":508:520  initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"contracts/contracts/utils/Initializable.sol\":508:536  initializing || !initialized */\n      tag_178\n      jumpi\n      pop\n        /* \"contracts/contracts/utils/Initializable.sol\":525:536  initialized */\n      and(0xff, sload(0x00))\n        /* \"contracts/contracts/utils/Initializable.sol\":524:536  !initialized */\n      iszero\n        /* \"contracts/contracts/utils/Initializable.sol\":508:536  initializing || !initialized */\n    tag_178:\n        /* \"contracts/contracts/utils/Initializable.sol\":486:610  require(\r... */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6953:6955   */\n      0x20\n        /* \"contracts/contracts/utils/Initializable.sol\":486:610  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6935:6956   */\n      mstore\n        /* \"#utility.yul\":6992:6994   */\n      0x2e\n        /* \"#utility.yul\":6972:6990   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6965:6995   */\n      mstore\n        /* \"#utility.yul\":7031:7065   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":7011:7029   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7004:7066   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":7082:7100   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7075:7119   */\n      mstore\n        /* \"#utility.yul\":7136:7155   */\n      0x84\n      add\n        /* \"contracts/contracts/utils/Initializable.sol\":486:610  require(\r... */\n      tag_175\n        /* \"#utility.yul\":6751:7161   */\n      jump\n        /* \"contracts/contracts/utils/Initializable.sol\":486:610  require(\r... */\n    tag_179:\n        /* \"contracts/contracts/utils/Initializable.sol\":623:642  bool isTopLevelCall */\n      0x00\n        /* \"contracts/contracts/utils/Initializable.sol\":646:658  initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/contracts/utils/Initializable.sol\":645:658  !initializing */\n      iszero\n        /* \"contracts/contracts/utils/Initializable.sol\":669:768  if (isTopLevelCall) {\r... */\n      dup1\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/contracts/utils/Initializable.sol\":704:716  initializing */\n      0x00\n        /* \"contracts/contracts/utils/Initializable.sol\":704:723  initializing = true */\n      dup1\n      sload\n      not(0xffff)\n        /* \"contracts/contracts/utils/Initializable.sol\":738:756  initialized = true */\n      and\n      0x0101\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/Initializable.sol\":669:768  if (isTopLevelCall) {\r... */\n    tag_182:\n        /* \"contracts/contracts/token/OUSD.sol\":2215:2279  InitializableERC20Detailed._initialize(_nameArg, _symbolArg, 18) */\n      tag_184\n        /* \"contracts/contracts/token/OUSD.sol\":2254:2262  _nameArg */\n      dup7\n      dup7\n        /* \"contracts/contracts/token/OUSD.sol\":2215:2279  InitializableERC20Detailed._initialize(_nameArg, _symbolArg, 18) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      dup11\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup9\n      dup2\n      mstore\n      swap3\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":2264:2274  _symbolArg */\n      dup9\n      swap2\n      pop\n      dup8\n      swap1\n      dup2\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":2215:2279  InitializableERC20Detailed._initialize(_nameArg, _symbolArg, 18) */\n      dup5\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":2264:2274  _symbolArg */\n      dup4\n      dup3\n      dup1\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":2215:2279  InitializableERC20Detailed._initialize(_nameArg, _symbolArg, 18) */\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":2276:2278  18 */\n      0x12\n      swap3\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":2215:2253  InitializableERC20Detailed._initialize */\n      tag_185\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":2215:2279  InitializableERC20Detailed._initialize(_nameArg, _symbolArg, 18) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/contracts/token/OUSD.sol\":2317:2321  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/contracts/token/OUSD.sol\":2290:2314  _rebasingCreditsPerToken */\n      0x9f\n        /* \"contracts/contracts/token/OUSD.sol\":2290:2321  _rebasingCreditsPerToken = 1e18 */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":2332:2344  vaultAddress */\n      0x9c\n        /* \"contracts/contracts/token/OUSD.sol\":2332:2360  vaultAddress = _vaultAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/Initializable.sol\":794:861  if (isTopLevelCall) {\r... */\n      dup1\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/contracts/utils/Initializable.sol\":844:849  false */\n      0x00\n        /* \"contracts/contracts/utils/Initializable.sol\":829:849  initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/Initializable.sol\":794:861  if (isTopLevelCall) {\r... */\n    tag_186:\n        /* \"contracts/contracts/utils/Initializable.sol\":475:868  {\r... */\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":2039:2368  function initialize(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":3044:3165  function rebasingCredits() public view returns (uint256) {\r... */\n    tag_52:\n        /* \"contracts/contracts/token/OUSD.sol\":3092:3099  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":2027:2030  1e9 */\n      0x3b9aca00\n        /* \"contracts/contracts/token/OUSD.sol\":3119:3135  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":3119:3157  _rebasingCredits / RESOLUTION_INCREASE */\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"contracts/contracts/token/OUSD.sol\":3112:3157  return _rebasingCredits / RESOLUTION_INCREASE */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":3044:3165  function rebasingCredits() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":10191:10442  function approve(address _spender, uint256 _value)\r... */\n    tag_58:\n        /* \"contracts/contracts/token/OUSD.sol\":10328:10338  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":10294:10298  bool */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":10316:10339  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":10316:10327  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":10316:10339  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":10316:10349  _allowances[msg.sender][_spender] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":10316:10358  _allowances[msg.sender][_spender] = _value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":10374:10412  Approval(msg.sender, _spender, _value) */\n      mload\n        /* \"contracts/contracts/token/OUSD.sol\":10294:10298  bool */\n      swap2\n      swap3\n        /* \"contracts/contracts/token/OUSD.sol\":10316:10349  _allowances[msg.sender][_spender] */\n      swap1\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":10374:10412  Approval(msg.sender, _spender, _value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_191\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":10352:10358  _value */\n      dup7\n        /* \"#utility.yul\":9835:9860   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9823:9825   */\n      0x20\n        /* \"#utility.yul\":9808:9826   */\n      add\n      swap1\n        /* \"#utility.yul\":9689:9866   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":10374:10412  Approval(msg.sender, _spender, _value) */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":10430:10434  true */\n      0x01\n        /* \"contracts/contracts/token/OUSD.sol\":10191:10442  function approve(address _spender, uint256 _value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_62:\n        /* \"contracts/contracts/governance/Governable.sol\":1715:1722  address */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n      tag_188\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":6607:7121  function transferFrom(\r... */\n    tag_71:\n        /* \"contracts/contracts/token/OUSD.sol\":6732:6736  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":6757:6774  _to != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":6749:6803  require(_to != address(0), \"Transfer to zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8768:8770   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":6749:6803  require(_to != address(0), \"Transfer to zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8750:8771   */\n      mstore\n        /* \"#utility.yul\":8807:8809   */\n      0x18\n        /* \"#utility.yul\":8787:8805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8780:8810   */\n      mstore\n      shl(0x40, 0x5472616e7366657220746f207a65726f2061646472657373)\n        /* \"#utility.yul\":8826:8844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8819:8873   */\n      mstore\n        /* \"#utility.yul\":8890:8908   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":6749:6803  require(_to != address(0), \"Transfer to zero address\") */\n      tag_175\n        /* \"#utility.yul\":8566:8914   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":6749:6803  require(_to != address(0), \"Transfer to zero address\") */\n    tag_197:\n        /* \"contracts/contracts/token/OUSD.sol\":6832:6848  balanceOf(_from) */\n      tag_200\n        /* \"contracts/contracts/token/OUSD.sol\":6842:6847  _from */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":6832:6841  balanceOf */\n      tag_111\n        /* \"contracts/contracts/token/OUSD.sol\":6832:6848  balanceOf(_from) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/contracts/token/OUSD.sol\":6822:6828  _value */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":6822:6848  _value <= balanceOf(_from) */\n      gt\n      iszero\n        /* \"contracts/contracts/token/OUSD.sol\":6814:6882  require(_value <= balanceOf(_from), \"Transfer greater than balance\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":6814:6882  require(_value <= balanceOf(_from), \"Transfer greater than balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5173:5194   */\n      mstore\n        /* \"#utility.yul\":5230:5232   */\n      0x1d\n        /* \"#utility.yul\":5210:5228   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5203:5233   */\n      mstore\n        /* \"#utility.yul\":5269:5300   */\n      0x5472616e736665722067726561746572207468616e2062616c616e6365000000\n        /* \"#utility.yul\":5249:5267   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5242:5301   */\n      mstore\n        /* \"#utility.yul\":5318:5336   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":6814:6882  require(_value <= balanceOf(_from), \"Transfer greater than balance\") */\n      tag_175\n        /* \"#utility.yul\":4989:5342   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":6814:6882  require(_value <= balanceOf(_from), \"Transfer greater than balance\") */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6946  _allowances[_from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6939  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6946  _allowances[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":6947:6957  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6958  _allowances[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6994  _allowances[_from][msg.sender].sub(\r... */\n      tag_204\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":6977:6983  _value */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6962  _allowances[_from][msg.sender].sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":6928:6994  _allowances[_from][msg.sender].sub(\r... */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":6895:6913  _allowances[_from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":6895:6906  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":6895:6913  _allowances[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":6914:6924  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":6895:6925  _allowances[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":6895:6994  _allowances[_from][msg.sender] = _allowances[_from][msg.sender].sub(\r... */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":7007:7043  _executeTransfer(_from, _to, _value) */\n      tag_206\n        /* \"contracts/contracts/token/OUSD.sol\":6907:6912  _from */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":7031:7034  _to */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":7036:7042  _value */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":7007:7023  _executeTransfer */\n      tag_207\n        /* \"contracts/contracts/token/OUSD.sol\":7007:7043  _executeTransfer(_from, _to, _value) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/contracts/token/OUSD.sol\":7077:7080  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":7061:7089  Transfer(_from, _to, _value) */\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":7070:7075  _from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":7061:7089  Transfer(_from, _to, _value) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":7082:7088  _value */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":7061:7089  Transfer(_from, _to, _value) */\n      mload(0x40)\n      tag_208\n      swap2\n        /* \"#utility.yul\":9835:9860   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9823:9825   */\n      0x20\n        /* \"#utility.yul\":9808:9826   */\n      add\n      swap1\n        /* \"#utility.yul\":9689:9866   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":7061:7089  Transfer(_from, _to, _value) */\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7109:7113  true */\n      0x01\n        /* \"contracts/contracts/token/OUSD.sol\":6607:7121  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":10841:11174  function increaseAllowance(address _spender, uint256 _addedValue)\r... */\n    tag_79:\n        /* \"contracts/contracts/token/OUSD.sol\":11011:11021  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":10941:10945  bool */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11022  _allowances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11010  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11022  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11032  _allowances[msg.sender][_spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11063  _allowances[msg.sender][_spender]\r... */\n      tag_211\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":11051:11062  _addedValue */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11050  _allowances[msg.sender][_spender]\r... */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":10999:11063  _allowances[msg.sender][_spender]\r... */\n      jump\t// in\n    tag_211:\n        /* \"contracts/contracts/token/OUSD.sol\":10975:10985  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":10963:10986  _allowances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":10963:10974  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":10963:10986  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":10963:10996  _allowances[msg.sender][_spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":10963:11063  _allowances[msg.sender][_spender] = _allowances[msg.sender][_spender]\r... */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":11079:11144  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      mload\n        /* \"#utility.yul\":9835:9860   */\n      swap4\n      dup5\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":10963:10996  _allowances[msg.sender][_spender] */\n      swap1\n      swap3\n        /* \"contracts/contracts/token/OUSD.sol\":11079:11144  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":11079:11144  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      tag_191\n        /* \"#utility.yul\":9689:9866   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":19487:20527  function changeSupply(uint256 _newTotalSupply)\r... */\n    tag_84:\n        /* \"contracts/contracts/token/OUSD.sol\":2494:2506  vaultAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x9c))\n        /* \"contracts/contracts/token/OUSD.sol\":2510:2520  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":2494:2520  vaultAddress == msg.sender */\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":2486:2548  require(vaultAddress == msg.sender, \"Caller is not the Vault\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_217\n      jump\t// in\n    tag_215:\n      0x00\n      dup1\n      mload\n      0x20\n      data_213ec435bf70ecf7a12c7c7c1673cbe2d6484d181dba26b798a55f8abc8e6650\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":3499:3514  sload(position) */\n      dup1\n      sload\n        /* \"contracts/contracts/governance/Governable.sol\":1101:1102  2 */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3617:3644  _reentry_status != _ENTERED */\n      dup2\n      eq\n      iszero\n        /* \"contracts/contracts/governance/Governable.sol\":3609:3663  require(_reentry_status != _ENTERED, \"Reentrant call\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_221\n      jump\t// in\n    tag_219:\n        /* \"contracts/contracts/governance/Governable.sol\":3782:3790  _ENTERED */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3772:3780  position */\n      dup3\n        /* \"contracts/contracts/governance/Governable.sol\":3765:3791  sstore(position, _ENTERED) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":19632:19633  0 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":19617:19629  _totalSupply */\n      sload(0x9a)\n        /* \"contracts/contracts/token/OUSD.sol\":19617:19633  _totalSupply > 0 */\n      gt\n        /* \"contracts/contracts/token/OUSD.sol\":19609:19662  require(_totalSupply > 0, \"Cannot increase 0 supply\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9538:9540   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":19609:19662  require(_totalSupply > 0, \"Cannot increase 0 supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9520:9541   */\n      mstore\n        /* \"#utility.yul\":9577:9579   */\n      0x18\n        /* \"#utility.yul\":9557:9575   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9550:9580   */\n      mstore\n        /* \"#utility.yul\":9616:9642   */\n      0x43616e6e6f7420696e637265617365203020737570706c790000000000000000\n        /* \"#utility.yul\":9596:9614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9589:9643   */\n      mstore\n        /* \"#utility.yul\":9660:9678   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":19609:19662  require(_totalSupply > 0, \"Cannot increase 0 supply\") */\n      tag_175\n        /* \"#utility.yul\":9336:9684   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":19609:19662  require(_totalSupply > 0, \"Cannot increase 0 supply\") */\n    tag_223:\n        /* \"contracts/contracts/token/OUSD.sol\":19695:19710  _newTotalSupply */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":19679:19691  _totalSupply */\n      sload(0x9a)\n        /* \"contracts/contracts/token/OUSD.sol\":19679:19710  _totalSupply == _newTotalSupply */\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":19675:19914  if (_totalSupply == _newTotalSupply) {\r... */\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":19776:19788  _totalSupply */\n      sload(0x9a)\n        /* \"contracts/contracts/token/OUSD.sol\":19807:19823  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":19842:19866  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":19732:19881  TotalSupplyUpdatedHighres(\r... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10660:10685   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":10716:10718   */\n      0x20\n        /* \"#utility.yul\":10701:10719   */\n      dup5\n      add\n        /* \"#utility.yul\":10694:10728   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10744:10762   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10737:10771   */\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":19732:19881  TotalSupplyUpdatedHighres(\r... */\n      mload\n      0x41645eb819d3011b13f97696a8109d14bfcddfaca7d063ec0564d62a3e257235\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10648:10650   */\n      0x60\n        /* \"contracts/contracts/token/OUSD.sol\":19732:19881  TotalSupplyUpdatedHighres(\r... */\n      add\n      swap1\n      log1\n        /* \"contracts/contracts/token/OUSD.sol\":19896:19903  return; */\n      jump(tag_222)\n        /* \"contracts/contracts/token/OUSD.sol\":19675:19914  if (_totalSupply == _newTotalSupply) {\r... */\n    tag_226:\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":19941:19969  _newTotalSupply > MAX_SUPPLY */\n      dup4\n      gt\n        /* \"contracts/contracts/token/OUSD.sol\":19941:20026  _newTotalSupply > MAX_SUPPLY\r... */\n      tag_229\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":20011:20026  _newTotalSupply */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":19941:20026  _newTotalSupply > MAX_SUPPLY\r... */\n      jump(tag_230)\n    tag_229:\n      sub(shl(0x80, 0x01), 0x01)\n    tag_230:\n        /* \"contracts/contracts/token/OUSD.sol\":19926:19938  _totalSupply */\n      0x9a\n        /* \"contracts/contracts/token/OUSD.sol\":19926:20026  _totalSupply = _newTotalSupply > MAX_SUPPLY\r... */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":20127:20144  nonRebasingSupply */\n      sload(0xa0)\n        /* \"contracts/contracts/token/OUSD.sol\":20066:20156  _rebasingCredits.divPrecisely(\r... */\n      tag_231\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":20110:20145  _totalSupply.sub(nonRebasingSupply) */\n      tag_232\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":20110:20126  _totalSupply.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":20110:20145  _totalSupply.sub(nonRebasingSupply) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/contracts/token/OUSD.sol\":20066:20082  _rebasingCredits */\n      sload(0x9e)\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":20066:20095  _rebasingCredits.divPrecisely */\n      tag_233\n        /* \"contracts/contracts/token/OUSD.sol\":20066:20156  _rebasingCredits.divPrecisely(\r... */\n      jump\t// in\n    tag_231:\n        /* \"contracts/contracts/token/OUSD.sol\":20039:20063  _rebasingCreditsPerToken */\n      0x9f\n        /* \"contracts/contracts/token/OUSD.sol\":20039:20156  _rebasingCreditsPerToken = _rebasingCredits.divPrecisely(\r... */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":20169:20234  require(_rebasingCreditsPerToken > 0, \"Invalid change in supply\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4484:4486   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":20169:20234  require(_rebasingCreditsPerToken > 0, \"Invalid change in supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4466:4487   */\n      mstore\n        /* \"#utility.yul\":4523:4525   */\n      0x18\n        /* \"#utility.yul\":4503:4521   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4496:4526   */\n      mstore\n        /* \"#utility.yul\":4562:4588   */\n      0x496e76616c6964206368616e676520696e20737570706c790000000000000000\n        /* \"#utility.yul\":4542:4560   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4535:4589   */\n      mstore\n        /* \"#utility.yul\":4606:4624   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":20169:20234  require(_rebasingCreditsPerToken > 0, \"Invalid change in supply\") */\n      tag_175\n        /* \"#utility.yul\":4282:4630   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":20169:20234  require(_rebasingCreditsPerToken > 0, \"Invalid change in supply\") */\n    tag_234:\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20368  _rebasingCredits\r... */\n      tag_237\n        /* \"contracts/contracts/token/OUSD.sol\":20350:20367  nonRebasingSupply */\n      sload(0xa0)\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20331  _rebasingCredits\r... */\n      tag_238\n        /* \"contracts/contracts/token/OUSD.sol\":20306:20330  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20278  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20305  _rebasingCredits\r... */\n      tag_233\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20331  _rebasingCredits\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20349  _rebasingCredits\r... */\n      swap1\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":20262:20368  _rebasingCredits\r... */\n      jump\t// in\n    tag_237:\n        /* \"contracts/contracts/token/OUSD.sol\":20247:20259  _totalSupply */\n      0x9a\n        /* \"contracts/contracts/token/OUSD.sol\":20247:20368  _totalSupply = _rebasingCredits\r... */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":20453:20469  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":20484:20508  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":20386:20519  TotalSupplyUpdatedHighres(\r... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10660:10685   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":10716:10718   */\n      0x20\n        /* \"#utility.yul\":10701:10719   */\n      dup5\n      add\n        /* \"#utility.yul\":10694:10728   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10744:10762   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10737:10771   */\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":20386:20519  TotalSupplyUpdatedHighres(\r... */\n      mload\n      0x41645eb819d3011b13f97696a8109d14bfcddfaca7d063ec0564d62a3e257235\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10648:10650   */\n      0x60\n        /* \"contracts/contracts/token/OUSD.sol\":20386:20519  TotalSupplyUpdatedHighres(\r... */\n      add\n      swap1\n      log1\n        /* \"contracts/contracts/governance/Governable.sol\":3814:3815  _ */\n    tag_222:\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":4003:4015  _NOT_ENTERED */\n      0x01\n        /* \"contracts/contracts/governance/Governable.sol\":3986:4016  sstore(position, _NOT_ENTERED) */\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":19487:20527  function changeSupply(uint256 _newTotalSupply)\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":12037:12148  function mint(address _account, uint256 _amount) external onlyVault {\r... */\n    tag_90:\n        /* \"contracts/contracts/token/OUSD.sol\":2494:2506  vaultAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x9c))\n        /* \"contracts/contracts/token/OUSD.sol\":2510:2520  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":2494:2520  vaultAddress == msg.sender */\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":2486:2548  require(vaultAddress == msg.sender, \"Caller is not the Vault\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_217\n      jump\t// in\n    tag_241:\n        /* \"contracts/contracts/token/OUSD.sol\":12116:12140  _mint(_account, _amount) */\n      tag_244\n        /* \"contracts/contracts/token/OUSD.sol\":12122:12130  _account */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":12132:12139  _amount */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":12116:12121  _mint */\n      tag_245\n        /* \"contracts/contracts/token/OUSD.sol\":12116:12140  _mint(_account, _amount) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/contracts/token/OUSD.sol\":12037:12148  function mint(address _account, uint256 _amount) external onlyVault {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_101:\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":2338:2353  sload(position) */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4918  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9121:9123   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9103:9124   */\n      mstore\n        /* \"#utility.yul\":9160:9162   */\n      0x30\n        /* \"#utility.yul\":9140:9158   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9133:9163   */\n      mstore\n        /* \"#utility.yul\":9199:9233   */\n      0x4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f\n        /* \"#utility.yul\":9179:9197   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9172:9234   */\n      mstore\n      shl(0x80, 0x6d706c6574652074686520636c61696d)\n        /* \"#utility.yul\":9250:9268   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9243:9289   */\n      mstore\n        /* \"#utility.yul\":9306:9325   */\n      0x84\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      tag_175\n        /* \"#utility.yul\":8919:9331   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n    tag_249:\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      tag_252\n        /* \"contracts/contracts/governance/Governable.sol\":5043:5053  msg.sender */\n      caller\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5042  _changeGovernor */\n      tag_253\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":2817:2954  function rebasingCreditsPerToken() public view returns (uint256) {\r... */\n    tag_107:\n        /* \"contracts/contracts/token/OUSD.sol\":2873:2880  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":2027:2030  1e9 */\n      0x3b9aca00\n        /* \"contracts/contracts/token/OUSD.sol\":2900:2924  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":2900:2946  _rebasingCreditsPerToken / RESOLUTION_INCREASE */\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":3817:4094  function balanceOf(address _account)\r... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":3949:3974  _creditBalances[_account] */\n      dup2\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":3920:3927  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":3949:3974  _creditBalances[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":3949:3964  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":3949:3974  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":3945:3989  if (_creditBalances[_account] == 0) return 0 */\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":3988:3989  0 */\n      0x00\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":3817:4094  function balanceOf(address _account)\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":3945:3989  if (_creditBalances[_account] == 0) return 0 */\n    tag_257:\n        /* \"contracts/contracts/token/OUSD.sol\":4020:4086  _creditBalances[_account].divPrecisely(_creditsPerToken(_account)) */\n      tag_258\n        /* \"contracts/contracts/token/OUSD.sol\":4059:4085  _creditsPerToken(_account) */\n      tag_259\n        /* \"contracts/contracts/token/OUSD.sol\":4076:4084  _account */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":4059:4075  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":4059:4085  _creditsPerToken(_account) */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":4020:4045  _creditBalances[_account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":4020:4035  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":4020:4045  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":4020:4058  _creditBalances[_account].divPrecisely */\n      tag_233\n        /* \"contracts/contracts/token/OUSD.sol\":4020:4086  _creditBalances[_account].divPrecisely(_creditsPerToken(_account)) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/contracts/token/OUSD.sol\":4000:4086  return\r... */\n      swap3\n        /* \"contracts/contracts/token/OUSD.sol\":3817:4094  function balanceOf(address _account)\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1296:1383  function symbol() public view returns (string memory) {\r... */\n    tag_120:\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1335:1348  string memory */\n      0x60\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1368:1375  _symbol */\n      0x98\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":1361:1375  return _symbol */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":13423:13530  function burn(address account, uint256 amount) external onlyVault {\r... */\n    tag_128:\n        /* \"contracts/contracts/token/OUSD.sol\":2494:2506  vaultAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x9c))\n        /* \"contracts/contracts/token/OUSD.sol\":2510:2520  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":2494:2520  vaultAddress == msg.sender */\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":2486:2548  require(vaultAddress == msg.sender, \"Caller is not the Vault\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_217\n      jump\t// in\n    tag_270:\n        /* \"contracts/contracts/token/OUSD.sol\":13500:13522  _burn(account, amount) */\n      tag_244\n        /* \"contracts/contracts/token/OUSD.sol\":13506:13513  account */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":13515:13521  amount */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":13500:13505  _burn */\n      tag_274\n        /* \"contracts/contracts/token/OUSD.sol\":13500:13522  _burn(account, amount) */\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":11459:11956  function decreaseAllowance(address _spender, uint256 _subtractedValue)\r... */\n    tag_131:\n        /* \"contracts/contracts/token/OUSD.sol\":11617:11627  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":11564:11568  bool */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":11605:11628  _allowances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":11605:11616  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":11605:11628  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":11605:11638  _allowances[msg.sender][_spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":11653:11681  _subtractedValue >= oldValue */\n      dup1\n      dup4\n      lt\n        /* \"contracts/contracts/token/OUSD.sol\":11649:11846  if (_subtractedValue >= oldValue) {\r... */\n      tag_276\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":11710:11720  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":11734:11735  0 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":11698:11721  _allowances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":11698:11709  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":11698:11721  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":11698:11731  _allowances[msg.sender][_spender] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":11698:11735  _allowances[msg.sender][_spender] = 0 */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":11649:11846  if (_subtractedValue >= oldValue) {\r... */\n      jump(tag_277)\n    tag_276:\n        /* \"contracts/contracts/token/OUSD.sol\":11804:11834  oldValue.sub(_subtractedValue) */\n      tag_278\n        /* \"contracts/contracts/token/OUSD.sol\":11804:11812  oldValue */\n      dup2\n        /* \"contracts/contracts/token/OUSD.sol\":11817:11833  _subtractedValue */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":11804:11816  oldValue.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":11804:11834  oldValue.sub(_subtractedValue) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/contracts/token/OUSD.sol\":11780:11790  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":11768:11791  _allowances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":11768:11779  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":11768:11791  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":11768:11801  _allowances[msg.sender][_spender] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":11768:11834  _allowances[msg.sender][_spender] = oldValue.sub(_subtractedValue) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":11649:11846  if (_subtractedValue >= oldValue) {\r... */\n    tag_277:\n        /* \"contracts/contracts/token/OUSD.sol\":11870:11880  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":11892:11915  _allowances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":11892:11903  _allowances */\n      0x9b\n        /* \"contracts/contracts/token/OUSD.sol\":11892:11915  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":11861:11926  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      dup10\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":11892:11925  _allowances[msg.sender][_spender] */\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":11861:11926  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      swap1\n      mload\n        /* \"#utility.yul\":9835:9860   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":11861:11926  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      swap2\n      swap3\n        /* \"contracts/contracts/token/OUSD.sol\":11870:11880  msg.sender */\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":11861:11926  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":11861:11926  Approval(msg.sender, _spender, _allowances[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":11944:11948  true */\n      0x01\n      swap4\n        /* \"contracts/contracts/token/OUSD.sol\":11459:11956  function decreaseAllowance(address _spender, uint256 _subtractedValue)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":5909:6342  function transfer(address _to, uint256 _value)\r... */\n    tag_135:\n        /* \"contracts/contracts/token/OUSD.sol\":6008:6012  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":6038:6055  _to != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":6030:6084  require(_to != address(0), \"Transfer to zero address\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8768:8770   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":6030:6084  require(_to != address(0), \"Transfer to zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8750:8771   */\n      mstore\n        /* \"#utility.yul\":8807:8809   */\n      0x18\n        /* \"#utility.yul\":8787:8805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8780:8810   */\n      mstore\n      shl(0x40, 0x5472616e7366657220746f207a65726f2061646472657373)\n        /* \"#utility.yul\":8826:8844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8819:8873   */\n      mstore\n        /* \"#utility.yul\":8890:8908   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":6030:6084  require(_to != address(0), \"Transfer to zero address\") */\n      tag_175\n        /* \"#utility.yul\":8566:8914   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":6030:6084  require(_to != address(0), \"Transfer to zero address\") */\n    tag_281:\n        /* \"contracts/contracts/token/OUSD.sol\":6127:6148  balanceOf(msg.sender) */\n      tag_283\n        /* \"contracts/contracts/token/OUSD.sol\":6137:6147  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":6127:6136  balanceOf */\n      tag_111\n        /* \"contracts/contracts/token/OUSD.sol\":6127:6148  balanceOf(msg.sender) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/contracts/token/OUSD.sol\":6117:6123  _value */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":6117:6148  _value <= balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"contracts/contracts/token/OUSD.sol\":6095:6205  require(\r... */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":6095:6205  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5173:5194   */\n      mstore\n        /* \"#utility.yul\":5230:5232   */\n      0x1d\n        /* \"#utility.yul\":5210:5228   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5203:5233   */\n      mstore\n        /* \"#utility.yul\":5269:5300   */\n      0x5472616e736665722067726561746572207468616e2062616c616e6365000000\n        /* \"#utility.yul\":5249:5267   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5242:5301   */\n      mstore\n        /* \"#utility.yul\":5318:5336   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":6095:6205  require(\r... */\n      tag_175\n        /* \"#utility.yul\":4989:5342   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":6095:6205  require(\r... */\n    tag_284:\n        /* \"contracts/contracts/token/OUSD.sol\":6218:6259  _executeTransfer(msg.sender, _to, _value) */\n      tag_286\n        /* \"contracts/contracts/token/OUSD.sol\":6235:6245  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":6247:6250  _to */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":6252:6258  _value */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":6218:6234  _executeTransfer */\n      tag_207\n        /* \"contracts/contracts/token/OUSD.sol\":6218:6259  _executeTransfer(msg.sender, _to, _value) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/contracts/token/OUSD.sol\":6277:6310  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n        /* \"#utility.yul\":9835:9860   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":6277:6310  Transfer(msg.sender, _to, _value) */\n      dup5\n      and\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":6286:6296  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":6277:6310  Transfer(msg.sender, _to, _value) */\n      swap1\n        /* \"#utility.yul\":9823:9825   */\n      0x20\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":6277:6310  Transfer(msg.sender, _to, _value) */\n      tag_191\n        /* \"#utility.yul\":9689:9866   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":18571:19238  function rebaseOptOut() public nonReentrant {\r... */\n    tag_138:\n      0x00\n      dup1\n      mload\n      0x20\n      data_213ec435bf70ecf7a12c7c7c1673cbe2d6484d181dba26b798a55f8abc8e6650\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":3499:3514  sload(position) */\n      dup1\n      sload\n        /* \"contracts/contracts/governance/Governable.sol\":1101:1102  2 */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3617:3644  _reentry_status != _ENTERED */\n      dup2\n      eq\n      iszero\n        /* \"contracts/contracts/governance/Governable.sol\":3609:3663  require(_reentry_status != _ENTERED, \"Reentrant call\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_221\n      jump\t// in\n    tag_289:\n        /* \"contracts/contracts/governance/Governable.sol\":3782:3790  _ENTERED */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3772:3780  position */\n      dup3\n        /* \"contracts/contracts/governance/Governable.sol\":3765:3791  sstore(position, _ENTERED) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18635:18668  _isNonRebasingAccount(msg.sender) */\n      tag_292\n        /* \"contracts/contracts/token/OUSD.sol\":18657:18667  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":18635:18656  _isNonRebasingAccount */\n      tag_293\n        /* \"contracts/contracts/token/OUSD.sol\":18635:18668  _isNonRebasingAccount(msg.sender) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/contracts/token/OUSD.sol\":18634:18668  !_isNonRebasingAccount(msg.sender) */\n      iszero\n        /* \"contracts/contracts/token/OUSD.sol\":18626:18697  require(!_isNonRebasingAccount(msg.sender), \"Account has not opted in\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7368:7370   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":18626:18697  require(!_isNonRebasingAccount(msg.sender), \"Account has not opted in\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7350:7371   */\n      mstore\n        /* \"#utility.yul\":7407:7409   */\n      0x18\n        /* \"#utility.yul\":7387:7405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7380:7410   */\n      mstore\n        /* \"#utility.yul\":7446:7472   */\n      0x4163636f756e7420686173206e6f74206f7074656420696e0000000000000000\n        /* \"#utility.yul\":7426:7444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7419:7473   */\n      mstore\n        /* \"#utility.yul\":7490:7508   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":18626:18697  require(!_isNonRebasingAccount(msg.sender), \"Account has not opted in\") */\n      tag_175\n        /* \"#utility.yul\":7166:7514   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":18626:18697  require(!_isNonRebasingAccount(msg.sender), \"Account has not opted in\") */\n    tag_294:\n        /* \"contracts/contracts/token/OUSD.sol\":18771:18815  nonRebasingSupply.add(balanceOf(msg.sender)) */\n      tag_297\n        /* \"contracts/contracts/token/OUSD.sol\":18793:18814  balanceOf(msg.sender) */\n      tag_298\n        /* \"contracts/contracts/token/OUSD.sol\":18803:18813  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":18793:18802  balanceOf */\n      tag_111\n        /* \"contracts/contracts/token/OUSD.sol\":18793:18814  balanceOf(msg.sender) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/contracts/token/OUSD.sol\":18771:18788  nonRebasingSupply */\n      sload(0xa0)\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":18771:18792  nonRebasingSupply.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":18771:18815  nonRebasingSupply.add(balanceOf(msg.sender)) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/contracts/token/OUSD.sol\":18751:18768  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":18751:18815  nonRebasingSupply = nonRebasingSupply.add(balanceOf(msg.sender)) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18907:18931  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":18893:18903  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":18866:18904  nonRebasingCreditsPerToken[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":18866:18892  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":18866:18904  nonRebasingCreditsPerToken[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":18866:18931  nonRebasingCreditsPerToken[msg.sender] = _rebasingCreditsPerToken */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":19093:19108  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":19093:19120  _creditBalances[msg.sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":19072:19088  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":19072:19121  _rebasingCredits.sub(_creditBalances[msg.sender]) */\n      tag_299\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":19072:19092  _rebasingCredits.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":19072:19121  _rebasingCredits.sub(_creditBalances[msg.sender]) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/contracts/token/OUSD.sol\":19053:19069  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":19053:19121  _rebasingCredits = _rebasingCredits.sub(_creditBalances[msg.sender]) */\n      sstore\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":19196:19206  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":19184:19207  rebaseState[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":19184:19195  rebaseState */\n      0xa2\n        /* \"contracts/contracts/token/OUSD.sol\":19184:19207  rebaseState[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":19184:19230  rebaseState[msg.sender] = RebaseOptions.OptOut */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":19210:19230  RebaseOptions.OptOut */\n      0x01\n        /* \"contracts/contracts/token/OUSD.sol\":19184:19230  rebaseState[msg.sender] = RebaseOptions.OptOut */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":3986:4016  sstore(position, _NOT_ENTERED) */\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18571:19238  function rebaseOptOut() public nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_140:\n        /* \"contracts/contracts/governance/Governable.sol\":2707:2711  bool */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n      tag_304\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2741  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":2724:2756  return msg.sender == _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_144:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_306\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_140\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5549:5551   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5531:5552   */\n      mstore\n        /* \"#utility.yul\":5588:5590   */\n      0x1a\n        /* \"#utility.yul\":5568:5586   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5561:5591   */\n      mstore\n        /* \"#utility.yul\":5627:5655   */\n      0x43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000\n        /* \"#utility.yul\":5607:5625   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5600:5656   */\n      mstore\n        /* \"#utility.yul\":5673:5691   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_175\n        /* \"#utility.yul\":5347:5697   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n    tag_307:\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n      tag_310\n        /* \"contracts/contracts/governance/Governable.sol\":4594:4606  _newGovernor */\n      dup2\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":4189:4218  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":4042:4236  function _setPendingGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n    tag_310:\n        /* \"contracts/contracts/governance/Governable.sol\":4664:4676  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n      tag_312\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n      0xa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":5362:5698  function creditsBalanceOfHighres(address _account)\r... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":5573:5598  _creditBalances[_account] */\n      dup2\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":5475:5482  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":5573:5598  _creditBalances[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":5573:5588  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":5573:5598  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":5475:5482  uint256 */\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":5613:5639  _creditsPerToken(_account) */\n      tag_315\n        /* \"contracts/contracts/token/OUSD.sol\":5589:5597  _account */\n      dup6\n        /* \"contracts/contracts/token/OUSD.sol\":5613:5629  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":5613:5639  _creditsPerToken(_account) */\n      jump\t// in\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":5654:5674  isUpgraded[_account] */\n      swap6\n      swap1\n      swap6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":5654:5664  isUpgraded */\n      0xa3\n        /* \"contracts/contracts/token/OUSD.sol\":5654:5674  isUpgraded[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":5551:5690  return (\r... */\n      swap1\n      swap6\n        /* \"contracts/contracts/token/OUSD.sol\":5678:5679  1 */\n      0x01\n        /* \"contracts/contracts/token/OUSD.sol\":5654:5679  isUpgraded[_account] == 1 */\n      swap1\n      swap2\n      eq\n      swap4\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":5362:5698  function creditsBalanceOfHighres(address _account)\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":17582:18483  function rebaseOptIn() public nonReentrant {\r... */\n    tag_159:\n      0x00\n      dup1\n      mload\n      0x20\n      data_213ec435bf70ecf7a12c7c7c1673cbe2d6484d181dba26b798a55f8abc8e6650\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":3499:3514  sload(position) */\n      dup1\n      sload\n        /* \"contracts/contracts/governance/Governable.sol\":1101:1102  2 */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3617:3644  _reentry_status != _ENTERED */\n      dup2\n      eq\n      iszero\n        /* \"contracts/contracts/governance/Governable.sol\":3609:3663  require(_reentry_status != _ENTERED, \"Reentrant call\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_221\n      jump\t// in\n    tag_317:\n        /* \"contracts/contracts/governance/Governable.sol\":3782:3790  _ENTERED */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3772:3780  position */\n      dup3\n        /* \"contracts/contracts/governance/Governable.sol\":3765:3791  sstore(position, _ENTERED) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":17644:17677  _isNonRebasingAccount(msg.sender) */\n      tag_320\n        /* \"contracts/contracts/token/OUSD.sol\":17666:17676  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":17644:17665  _isNonRebasingAccount */\n      tag_293\n        /* \"contracts/contracts/token/OUSD.sol\":17644:17677  _isNonRebasingAccount(msg.sender) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/contracts/token/OUSD.sol\":17636:17707  require(_isNonRebasingAccount(msg.sender), \"Account has not opted out\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4837:4839   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":17636:17707  require(_isNonRebasingAccount(msg.sender), \"Account has not opted out\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4819:4840   */\n      mstore\n        /* \"#utility.yul\":4876:4878   */\n      0x19\n        /* \"#utility.yul\":4856:4874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4849:4879   */\n      mstore\n        /* \"#utility.yul\":4915:4942   */\n      0x4163636f756e7420686173206e6f74206f70746564206f757400000000000000\n        /* \"#utility.yul\":4895:4913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4888:4943   */\n      mstore\n        /* \"#utility.yul\":4960:4978   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":17636:17707  require(_isNonRebasingAccount(msg.sender), \"Account has not opted out\") */\n      tag_175\n        /* \"#utility.yul\":4635:4984   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":17636:17707  require(_isNonRebasingAccount(msg.sender), \"Account has not opted out\") */\n    tag_321:\n        /* \"contracts/contracts/token/OUSD.sol\":17798:17822  uint256 newCreditBalance */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17944  _creditBalances[msg.sender]\r... */\n      tag_324\n        /* \"contracts/contracts/token/OUSD.sol\":17915:17943  _creditsPerToken(msg.sender) */\n      tag_325\n        /* \"contracts/contracts/token/OUSD.sol\":17932:17942  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":17915:17931  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":17915:17943  _creditsPerToken(msg.sender) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/contracts/token/OUSD.sol\":17871:17895  _rebasingCreditsPerToken */\n      sload(0x9f)\n        /* \"contracts/contracts/token/OUSD.sol\":17841:17851  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17852  _creditBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17840  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17852  _creditBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17896  _creditBalances[msg.sender]\r... */\n      tag_326\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17870  _creditBalances[msg.sender]\r... */\n      tag_327\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17896  _creditBalances[msg.sender]\r... */\n      jump\t// in\n    tag_326:\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17914  _creditBalances[msg.sender]\r... */\n      swap1\n      tag_328\n        /* \"contracts/contracts/token/OUSD.sol\":17825:17944  _creditBalances[msg.sender]\r... */\n      jump\t// in\n    tag_324:\n        /* \"contracts/contracts/token/OUSD.sol\":17798:17944  uint256 newCreditBalance = _creditBalances[msg.sender]\r... */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":18020:18064  nonRebasingSupply.sub(balanceOf(msg.sender)) */\n      tag_329\n        /* \"contracts/contracts/token/OUSD.sol\":18042:18063  balanceOf(msg.sender) */\n      tag_330\n        /* \"contracts/contracts/token/OUSD.sol\":18052:18062  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":18042:18051  balanceOf */\n      tag_111\n        /* \"contracts/contracts/token/OUSD.sol\":18042:18063  balanceOf(msg.sender) */\n      jump\t// in\n    tag_330:\n        /* \"contracts/contracts/token/OUSD.sol\":18020:18037  nonRebasingSupply */\n      sload(0xa0)\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":18020:18041  nonRebasingSupply.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":18020:18064  nonRebasingSupply.sub(balanceOf(msg.sender)) */\n      jump\t// in\n    tag_329:\n        /* \"contracts/contracts/token/OUSD.sol\":18000:18017  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":18000:18064  nonRebasingSupply = nonRebasingSupply.sub(balanceOf(msg.sender)) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18093:18103  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":18077:18104  _creditBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":18077:18092  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":18077:18104  _creditBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":18077:18123  _creditBalances[msg.sender] = newCreditBalance */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18263:18279  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":18263:18312  _rebasingCredits.add(_creditBalances[msg.sender]) */\n      tag_331\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":18107:18123  newCreditBalance */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":18263:18283  _rebasingCredits.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":18263:18312  _rebasingCredits.add(_creditBalances[msg.sender]) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/contracts/token/OUSD.sol\":18244:18260  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":18244:18312  _rebasingCredits = _rebasingCredits.add(_creditBalances[msg.sender]) */\n      sstore\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":18337:18347  msg.sender */\n      caller\n        /* \"contracts/contracts/token/OUSD.sol\":18325:18348  rebaseState[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":18325:18336  rebaseState */\n      0xa2\n        /* \"contracts/contracts/token/OUSD.sol\":18325:18348  rebaseState[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":18325:18370  rebaseState[msg.sender] = RebaseOptions.OptIn */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":18351:18370  RebaseOptions.OptIn */\n      0x02\n        /* \"contracts/contracts/token/OUSD.sol\":18325:18370  rebaseState[msg.sender] = RebaseOptions.OptIn */\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18437:18463  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":18437:18475  nonRebasingCreditsPerToken[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":18430:18475  delete nonRebasingCreditsPerToken[msg.sender] */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":18325:18370  rebaseState[msg.sender] = RebaseOptions.OptIn */\n      0x01\n        /* \"contracts/contracts/governance/Governable.sol\":3986:4016  sstore(position, _NOT_ENTERED) */\n      swap1\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":17582:18483  function rebaseOptIn() public nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":4418:5089  function creditsBalanceOf(address _account)\r... */\n    tag_162:\n        /* \"contracts/contracts/token/OUSD.sol\":4510:4517  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":4519:4526  uint256 */\n      dup1\n        /* \"contracts/contracts/token/OUSD.sol\":4544:4555  uint256 cpt */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":4558:4584  _creditsPerToken(_account) */\n      tag_335\n        /* \"contracts/contracts/token/OUSD.sol\":4575:4583  _account */\n      dup5\n        /* \"contracts/contracts/token/OUSD.sol\":4558:4574  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":4558:4584  _creditsPerToken(_account) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/contracts/token/OUSD.sol\":4544:4584  uint256 cpt = _creditsPerToken(_account) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":4599:4602  cpt */\n      dup1\n        /* \"contracts/contracts/token/OUSD.sol\":4606:4610  1e27 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/contracts/token/OUSD.sol\":4599:4610  cpt == 1e27 */\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":4595:5082  if (cpt == 1e27) {\r... */\n      iszero\n      tag_336\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":4874:4899  _creditBalances[_account] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":4874:4889  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":4874:4899  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap4\n        /* \"contracts/contracts/token/OUSD.sol\":4418:5089  function creditsBalanceOf(address _account)\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":4595:5082  if (cpt == 1e27) {\r... */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":4964:4989  _creditBalances[_account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":4964:4979  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":4964:4989  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":4964:5011  _creditBalances[_account] / RESOLUTION_INCREASE */\n      tag_338\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":2027:2030  1e9 */\n      0x3b9aca00\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":4964:5011  _creditBalances[_account] / RESOLUTION_INCREASE */\n      tag_189\n      jump\t// in\n    tag_338:\n        /* \"contracts/contracts/token/OUSD.sol\":5030:5055  cpt / RESOLUTION_INCREASE */\n      tag_339\n        /* \"contracts/contracts/token/OUSD.sol\":2027:2030  1e9 */\n      0x3b9aca00\n        /* \"contracts/contracts/token/OUSD.sol\":5030:5033  cpt */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":5030:5055  cpt / RESOLUTION_INCREASE */\n      tag_189\n      jump\t// in\n    tag_339:\n        /* \"contracts/contracts/token/OUSD.sol\":4938:5070  return (\r... */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":4418:5089  function creditsBalanceOf(address _account)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":795:1024  function _initialize(\r... */\n    tag_185:\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":937:952  _name = nameArg */\n      dup3\n      mload\n      tag_341\n      swap1\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":937:942  _name */\n      0x97\n      swap1\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":937:952  _name = nameArg */\n      0x20\n      dup7\n      add\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      pop\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":963:982  _symbol = symbolArg */\n      dup2\n      mload\n      tag_343\n      swap1\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":963:970  _symbol */\n      0x98\n      swap1\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":963:982  _symbol = symbolArg */\n      0x20\n      dup6\n      add\n      swap1\n      tag_342\n      jump\t// in\n    tag_343:\n      pop\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":993:1002  _decimals */\n      0x99\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":993:1016  _decimals = decimalsArg */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/contracts/utils/InitializableERC20Detailed.sol\":795:1024  function _initialize(\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_347\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":7395:8983  function _executeTransfer(\r... */\n    tag_207:\n        /* \"contracts/contracts/token/OUSD.sol\":7519:7539  bool isNonRebasingTo */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":7542:7568  _isNonRebasingAccount(_to) */\n      tag_349\n        /* \"contracts/contracts/token/OUSD.sol\":7564:7567  _to */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":7542:7563  _isNonRebasingAccount */\n      tag_293\n        /* \"contracts/contracts/token/OUSD.sol\":7542:7568  _isNonRebasingAccount(_to) */\n      jump\t// in\n    tag_349:\n        /* \"contracts/contracts/token/OUSD.sol\":7519:7568  bool isNonRebasingTo = _isNonRebasingAccount(_to) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7579:7601  bool isNonRebasingFrom */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":7604:7632  _isNonRebasingAccount(_from) */\n      tag_350\n        /* \"contracts/contracts/token/OUSD.sol\":7626:7631  _from */\n      dup6\n        /* \"contracts/contracts/token/OUSD.sol\":7604:7625  _isNonRebasingAccount */\n      tag_293\n        /* \"contracts/contracts/token/OUSD.sol\":7604:7632  _isNonRebasingAccount(_from) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/contracts/token/OUSD.sol\":7579:7632  bool isNonRebasingFrom = _isNonRebasingAccount(_from) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7776:7799  uint256 creditsCredited */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":7802:7843  _value.mulTruncate(_creditsPerToken(_to)) */\n      tag_351\n        /* \"contracts/contracts/token/OUSD.sol\":7821:7842  _creditsPerToken(_to) */\n      tag_352\n        /* \"contracts/contracts/token/OUSD.sol\":7838:7841  _to */\n      dup7\n        /* \"contracts/contracts/token/OUSD.sol\":7821:7837  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":7821:7842  _creditsPerToken(_to) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/contracts/token/OUSD.sol\":7802:7808  _value */\n      dup6\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":7802:7820  _value.mulTruncate */\n      tag_353\n        /* \"contracts/contracts/token/OUSD.sol\":7802:7843  _value.mulTruncate(_creditsPerToken(_to)) */\n      jump\t// in\n    tag_351:\n        /* \"contracts/contracts/token/OUSD.sol\":7776:7843  uint256 creditsCredited = _value.mulTruncate(_creditsPerToken(_to)) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7854:7877  uint256 creditsDeducted */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":7880:7923  _value.mulTruncate(_creditsPerToken(_from)) */\n      tag_354\n        /* \"contracts/contracts/token/OUSD.sol\":7899:7922  _creditsPerToken(_from) */\n      tag_355\n        /* \"contracts/contracts/token/OUSD.sol\":7916:7921  _from */\n      dup9\n        /* \"contracts/contracts/token/OUSD.sol\":7899:7915  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":7899:7922  _creditsPerToken(_from) */\n      jump\t// in\n    tag_355:\n        /* \"contracts/contracts/token/OUSD.sol\":7880:7886  _value */\n      dup7\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":7880:7898  _value.mulTruncate */\n      tag_353\n        /* \"contracts/contracts/token/OUSD.sol\":7880:7923  _value.mulTruncate(_creditsPerToken(_from)) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/contracts/token/OUSD.sol\":7854:7923  uint256 creditsDeducted = _value.mulTruncate(_creditsPerToken(_from)) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7961:8076  _creditBalances[_from].sub(\r... */\n      tag_356\n        /* \"contracts/contracts/token/OUSD.sol\":8002:8017  creditsDeducted */\n      dup2\n        /* \"contracts/contracts/token/OUSD.sol\":7961:8076  _creditBalances[_from].sub(\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      0x5472616e7366657220616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7961:7976  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":7961:7983  _creditBalances[_from] */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":7977:7982  _from */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":7961:7983  _creditBalances[_from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":7961:7987  _creditBalances[_from].sub */\n      tag_357\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":7961:8076  _creditBalances[_from].sub(\r... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":7936:7958  _creditBalances[_from] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":7936:7951  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":7936:7958  _creditBalances[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":7936:8076  _creditBalances[_from] = _creditBalances[_from].sub(\r... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":8110:8130  _creditBalances[_to] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":8110:8151  _creditBalances[_to].add(creditsCredited) */\n      tag_358\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":8135:8150  creditsCredited */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":8110:8134  _creditBalances[_to].add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":8110:8151  _creditBalances[_to].add(creditsCredited) */\n      jump\t// in\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":8087:8107  _creditBalances[_to] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":8087:8102  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":8087:8107  _creditBalances[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":8087:8151  _creditBalances[_to] = _creditBalances[_to].add(creditsCredited) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":8168:8183  isNonRebasingTo */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":8168:8205  isNonRebasingTo && !isNonRebasingFrom */\n      dup1\n      iszero\n      tag_359\n      jumpi\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":8188:8205  isNonRebasingFrom */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":8187:8205  !isNonRebasingFrom */\n      iszero\n        /* \"contracts/contracts/token/OUSD.sol\":8168:8205  isNonRebasingTo && !isNonRebasingFrom */\n    tag_359:\n        /* \"contracts/contracts/token/OUSD.sol\":8164:8976  if (isNonRebasingTo && !isNonRebasingFrom) {\r... */\n      iszero\n      tag_360\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":8378:8395  nonRebasingSupply */\n      sload(0xa0)\n        /* \"contracts/contracts/token/OUSD.sol\":8378:8407  nonRebasingSupply.add(_value) */\n      tag_361\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":8400:8406  _value */\n      dup7\n        /* \"contracts/contracts/token/OUSD.sol\":8378:8399  nonRebasingSupply.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":8378:8407  nonRebasingSupply.add(_value) */\n      jump\t// in\n    tag_361:\n        /* \"contracts/contracts/token/OUSD.sol\":8358:8375  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":8358:8407  nonRebasingSupply = nonRebasingSupply.add(_value) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":8515:8531  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":8515:8552  _rebasingCredits.sub(creditsDeducted) */\n      tag_362\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":8536:8551  creditsDeducted */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":8515:8535  _rebasingCredits.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":8515:8552  _rebasingCredits.sub(creditsDeducted) */\n      jump\t// in\n    tag_362:\n        /* \"contracts/contracts/token/OUSD.sol\":8496:8512  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":8496:8552  _rebasingCredits = _rebasingCredits.sub(creditsDeducted) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":8164:8976  if (isNonRebasingTo && !isNonRebasingFrom) {\r... */\n      jump(tag_365)\n    tag_360:\n        /* \"contracts/contracts/token/OUSD.sol\":8575:8590  isNonRebasingTo */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":8574:8590  !isNonRebasingTo */\n      iszero\n        /* \"contracts/contracts/token/OUSD.sol\":8574:8611  !isNonRebasingTo && isNonRebasingFrom */\n      dup1\n      iszero\n      tag_364\n      jumpi\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":8594:8611  isNonRebasingFrom */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":8574:8611  !isNonRebasingTo && isNonRebasingFrom */\n    tag_364:\n        /* \"contracts/contracts/token/OUSD.sol\":8570:8976  if (!isNonRebasingTo && isNonRebasingFrom) {\r... */\n      iszero\n      tag_365\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":8795:8812  nonRebasingSupply */\n      sload(0xa0)\n        /* \"contracts/contracts/token/OUSD.sol\":8795:8824  nonRebasingSupply.sub(_value) */\n      tag_366\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":8817:8823  _value */\n      dup7\n        /* \"contracts/contracts/token/OUSD.sol\":8795:8816  nonRebasingSupply.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":8795:8824  nonRebasingSupply.sub(_value) */\n      jump\t// in\n    tag_366:\n        /* \"contracts/contracts/token/OUSD.sol\":8775:8792  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":8775:8824  nonRebasingSupply = nonRebasingSupply.sub(_value) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":8927:8943  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":8927:8964  _rebasingCredits.add(creditsCredited) */\n      tag_367\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":8948:8963  creditsCredited */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":8927:8947  _rebasingCredits.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":8927:8964  _rebasingCredits.add(creditsCredited) */\n      jump\t// in\n    tag_367:\n        /* \"contracts/contracts/token/OUSD.sol\":8908:8924  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":8908:8964  _rebasingCredits = _rebasingCredits.add(creditsCredited) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":8570:8976  if (!isNonRebasingTo && isNonRebasingFrom) {\r... */\n    tag_365:\n        /* \"contracts/contracts/token/OUSD.sol\":7508:8983  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":7395:8983  function _executeTransfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_370\n      jump\t// in\n        /* \"contracts/contracts/utils/StableMath.sol\":3709:3964  function divPrecisely(uint256 x, uint256 y)\r... */\n    tag_233:\n        /* \"contracts/contracts/utils/StableMath.sol\":3803:3810  uint256 */\n      0x00\n      dup1\n        /* \"contracts/contracts/utils/StableMath.sol\":3876:3893  x.mul(FULL_SCALE) */\n      tag_372\n        /* \"contracts/contracts/utils/StableMath.sol\":3876:3877  x */\n      dup5\n        /* \"contracts/contracts/utils/StableMath.sol\":526:530  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/contracts/utils/StableMath.sol\":3876:3881  x.mul */\n      tag_327\n        /* \"contracts/contracts/utils/StableMath.sol\":3876:3893  x.mul(FULL_SCALE) */\n      jump\t// in\n    tag_372:\n        /* \"contracts/contracts/utils/StableMath.sol\":3864:3893  uint256 z = x.mul(FULL_SCALE) */\n      swap1\n      pop\n        /* \"contracts/contracts/utils/StableMath.sol\":3948:3956  z.div(y) */\n      tag_373\n        /* \"contracts/contracts/utils/StableMath.sol\":3864:3893  uint256 z = x.mul(FULL_SCALE) */\n      dup2\n        /* \"contracts/contracts/utils/StableMath.sol\":3954:3955  y */\n      dup5\n        /* \"contracts/contracts/utils/StableMath.sol\":3948:3953  z.div */\n      tag_328\n        /* \"contracts/contracts/utils/StableMath.sol\":3948:3956  z.div(y) */\n      jump\t// in\n    tag_373:\n        /* \"contracts/contracts/utils/StableMath.sol\":3941:3956  return z.div(y) */\n      swap5\n        /* \"contracts/contracts/utils/StableMath.sol\":3709:3964  function divPrecisely(uint256 x, uint256 y)\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":12439:13346  function _mint(address _account, uint256 _amount) internal nonReentrant {\r... */\n    tag_245:\n      0x00\n      dup1\n      mload\n      0x20\n      data_213ec435bf70ecf7a12c7c7c1673cbe2d6484d181dba26b798a55f8abc8e6650\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":3499:3514  sload(position) */\n      dup1\n      sload\n        /* \"contracts/contracts/governance/Governable.sol\":1101:1102  2 */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3617:3644  _reentry_status != _ENTERED */\n      dup2\n      eq\n      iszero\n        /* \"contracts/contracts/governance/Governable.sol\":3609:3663  require(_reentry_status != _ENTERED, \"Reentrant call\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_221\n      jump\t// in\n    tag_375:\n        /* \"contracts/contracts/governance/Governable.sol\":3782:3790  _ENTERED */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3765:3791  sstore(position, _ENTERED) */\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":12530:12552  _account != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":12522:12581  require(_account != address(0), \"Mint to the zero address\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8415:8417   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":12522:12581  require(_account != address(0), \"Mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8397:8418   */\n      mstore\n        /* \"#utility.yul\":8454:8456   */\n      0x18\n        /* \"#utility.yul\":8434:8452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8427:8457   */\n      mstore\n        /* \"#utility.yul\":8493:8519   */\n      0x4d696e7420746f20746865207a65726f20616464726573730000000000000000\n        /* \"#utility.yul\":8473:8491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8466:8520   */\n      mstore\n        /* \"#utility.yul\":8537:8555   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":12522:12581  require(_account != address(0), \"Mint to the zero address\") */\n      tag_175\n        /* \"#utility.yul\":8213:8561   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":12522:12581  require(_account != address(0), \"Mint to the zero address\") */\n    tag_378:\n        /* \"contracts/contracts/token/OUSD.sol\":12594:12619  bool isNonRebasingAccount */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":12622:12653  _isNonRebasingAccount(_account) */\n      tag_381\n        /* \"contracts/contracts/token/OUSD.sol\":12644:12652  _account */\n      dup6\n        /* \"contracts/contracts/token/OUSD.sol\":12622:12643  _isNonRebasingAccount */\n      tag_293\n        /* \"contracts/contracts/token/OUSD.sol\":12622:12653  _isNonRebasingAccount(_account) */\n      jump\t// in\n    tag_381:\n        /* \"contracts/contracts/token/OUSD.sol\":12594:12653  bool isNonRebasingAccount = _isNonRebasingAccount(_account) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":12666:12686  uint256 creditAmount */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":12689:12736  _amount.mulTruncate(_creditsPerToken(_account)) */\n      tag_382\n        /* \"contracts/contracts/token/OUSD.sol\":12709:12735  _creditsPerToken(_account) */\n      tag_355\n        /* \"contracts/contracts/token/OUSD.sol\":12726:12734  _account */\n      dup8\n        /* \"contracts/contracts/token/OUSD.sol\":12709:12725  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":12709:12735  _creditsPerToken(_account) */\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":12689:12736  _amount.mulTruncate(_creditsPerToken(_account)) */\n    tag_382:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":12775:12800  _creditBalances[_account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":12775:12790  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":12775:12800  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":12666:12736  uint256 creditAmount = _amount.mulTruncate(_creditsPerToken(_account)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":12775:12818  _creditBalances[_account].add(creditAmount) */\n      tag_384\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":12666:12736  uint256 creditAmount = _amount.mulTruncate(_creditsPerToken(_account)) */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":12775:12804  _creditBalances[_account].add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":12775:12818  _creditBalances[_account].add(creditAmount) */\n      jump\t// in\n    tag_384:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":12747:12772  _creditBalances[_account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":12747:12762  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":12747:12772  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":12747:12818  _creditBalances[_account] = _creditBalances[_account].add(creditAmount) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":12979:13168  if (isNonRebasingAccount) {\r... */\n      dup2\n      iszero\n      tag_385\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":13040:13057  nonRebasingSupply */\n      sload(0xa0)\n        /* \"contracts/contracts/token/OUSD.sol\":13040:13070  nonRebasingSupply.add(_amount) */\n      tag_386\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":13062:13069  _amount */\n      dup7\n        /* \"contracts/contracts/token/OUSD.sol\":13040:13061  nonRebasingSupply.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":13040:13070  nonRebasingSupply.add(_amount) */\n      jump\t// in\n    tag_386:\n        /* \"contracts/contracts/token/OUSD.sol\":13020:13037  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":13020:13070  nonRebasingSupply = nonRebasingSupply.add(_amount) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":12979:13168  if (isNonRebasingAccount) {\r... */\n      jump(tag_387)\n    tag_385:\n        /* \"contracts/contracts/token/OUSD.sol\":13122:13138  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":13122:13156  _rebasingCredits.add(creditAmount) */\n      tag_388\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":13143:13155  creditAmount */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":13122:13142  _rebasingCredits.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":13122:13156  _rebasingCredits.add(creditAmount) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/contracts/token/OUSD.sol\":13103:13119  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":13103:13156  _rebasingCredits = _rebasingCredits.add(creditAmount) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":12979:13168  if (isNonRebasingAccount) {\r... */\n    tag_387:\n        /* \"contracts/contracts/token/OUSD.sol\":13195:13207  _totalSupply */\n      sload(0x9a)\n        /* \"contracts/contracts/token/OUSD.sol\":13195:13220  _totalSupply.add(_amount) */\n      tag_389\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":13212:13219  _amount */\n      dup7\n        /* \"contracts/contracts/token/OUSD.sol\":13195:13211  _totalSupply.add */\n      tag_212\n        /* \"contracts/contracts/token/OUSD.sol\":13195:13220  _totalSupply.add(_amount) */\n      jump\t// in\n    tag_389:\n        /* \"contracts/contracts/token/OUSD.sol\":13180:13192  _totalSupply */\n      0x9a\n        /* \"contracts/contracts/token/OUSD.sol\":13180:13220  _totalSupply = _totalSupply.add(_amount) */\n      dup2\n      swap1\n      sstore\n      sub(shl(0x80, 0x01), 0x01)\n      gt\n        /* \"contracts/contracts/token/OUSD.sol\":13233:13281  require(_totalSupply < MAX_SUPPLY, \"Max supply\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5904:5906   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":13233:13281  require(_totalSupply < MAX_SUPPLY, \"Max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5886:5907   */\n      mstore\n        /* \"#utility.yul\":5943:5945   */\n      0x0a\n        /* \"#utility.yul\":5923:5941   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5916:5946   */\n      mstore\n      shl(0xb0, 0x4d617820737570706c79)\n        /* \"#utility.yul\":5962:5980   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5955:5995   */\n      mstore\n        /* \"#utility.yul\":6012:6030   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":13233:13281  require(_totalSupply < MAX_SUPPLY, \"Max supply\") */\n      tag_175\n        /* \"#utility.yul\":5702:6036   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":13233:13281  require(_totalSupply < MAX_SUPPLY, \"Max supply\") */\n    tag_390:\n        /* \"contracts/contracts/token/OUSD.sol\":13299:13338  Transfer(address(0), _account, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":9835:9860   */\n      dup6\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":13299:13338  Transfer(address(0), _account, _amount) */\n      dup8\n      and\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":13316:13317  0 */\n      0x00\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":13299:13338  Transfer(address(0), _account, _amount) */\n      swap1\n        /* \"#utility.yul\":9823:9825   */\n      0x20\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":13299:13338  Transfer(address(0), _account, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/token/OUSD.sol\":12511:13346  {\r... */\n      pop\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":4003:4015  _NOT_ENTERED */\n      0x01\n        /* \"contracts/contracts/governance/Governable.sol\":3993:4001  position */\n      dup3\n        /* \"contracts/contracts/governance/Governable.sol\":3986:4016  sstore(position, _NOT_ENTERED) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":3971:4027  {\r... */\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":12439:13346  function _mint(address _account, uint256 _amount) internal nonReentrant {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5300:5326  _newGovernor != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6598:6600   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6580:6601   */\n      mstore\n        /* \"#utility.yul\":6637:6639   */\n      0x1a\n        /* \"#utility.yul\":6617:6635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6610:6640   */\n      mstore\n        /* \"#utility.yul\":6676:6704   */\n      0x4e657720476f7665726e6f722069732061646472657373283029000000000000\n        /* \"#utility.yul\":6656:6674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6649:6705   */\n      mstore\n        /* \"#utility.yul\":6722:6740   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_175\n        /* \"#utility.yul\":6396:6746   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n    tag_396:\n        /* \"contracts/contracts/governance/Governable.sol\":5410:5422  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n      tag_399\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n      0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n      tag_400\n        /* \"contracts/contracts/governance/Governable.sol\":5447:5459  _newGovernor */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n    tag_400:\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":15369:15676  function _creditsPerToken(address _account)\r... */\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":15492:15528  nonRebasingCreditsPerToken[_account] */\n      dup2\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":15463:15470  uint256 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":15492:15528  nonRebasingCreditsPerToken[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":15492:15518  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":15492:15528  nonRebasingCreditsPerToken[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":15492:15533  nonRebasingCreditsPerToken[_account] != 0 */\n      iszero\n        /* \"contracts/contracts/token/OUSD.sol\":15488:15669  if (nonRebasingCreditsPerToken[_account] != 0) {\r... */\n      tag_403\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":15557:15593  nonRebasingCreditsPerToken[_account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":15557:15583  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":15557:15593  nonRebasingCreditsPerToken[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":15369:15676  function _creditsPerToken(address _account)\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":15488:15669  if (nonRebasingCreditsPerToken[_account] != 0) {\r... */\n    tag_403:\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":15633:15657  _rebasingCreditsPerToken */\n      sload(0x9f)\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":15369:15676  function _creditsPerToken(address _account)\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":15488:15669  if (nonRebasingCreditsPerToken[_account] != 0) {\r... */\n    tag_404:\n        /* \"contracts/contracts/token/OUSD.sol\":15369:15676  function _creditsPerToken(address _account)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":13867:15172  function _burn(address _account, uint256 _amount) internal nonReentrant {\r... */\n    tag_274:\n      0x00\n      dup1\n      mload\n      0x20\n      data_213ec435bf70ecf7a12c7c7c1673cbe2d6484d181dba26b798a55f8abc8e6650\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":3499:3514  sload(position) */\n      dup1\n      sload\n        /* \"contracts/contracts/governance/Governable.sol\":1101:1102  2 */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3617:3644  _reentry_status != _ENTERED */\n      dup2\n      eq\n      iszero\n        /* \"contracts/contracts/governance/Governable.sol\":3609:3663  require(_reentry_status != _ENTERED, \"Reentrant call\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_221\n      jump\t// in\n    tag_406:\n        /* \"contracts/contracts/governance/Governable.sol\":3782:3790  _ENTERED */\n      0x02\n        /* \"contracts/contracts/governance/Governable.sol\":3765:3791  sstore(position, _ENTERED) */\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":13958:13980  _account != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":13950:14011  require(_account != address(0), \"Burn from the zero address\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6243:6245   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":13950:14011  require(_account != address(0), \"Burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6225:6246   */\n      mstore\n        /* \"#utility.yul\":6282:6284   */\n      0x1a\n        /* \"#utility.yul\":6262:6280   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6255:6285   */\n      mstore\n        /* \"#utility.yul\":6321:6349   */\n      0x4275726e2066726f6d20746865207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":6301:6319   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6294:6350   */\n      mstore\n        /* \"#utility.yul\":6367:6385   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":13950:14011  require(_account != address(0), \"Burn from the zero address\") */\n      tag_175\n        /* \"#utility.yul\":6041:6391   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":13950:14011  require(_account != address(0), \"Burn from the zero address\") */\n    tag_409:\n        /* \"contracts/contracts/token/OUSD.sol\":14026:14038  _amount == 0 */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":14022:14073  if (_amount == 0) {\r... */\n      tag_412\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":14055:14062  return; */\n      jump(tag_408)\n        /* \"contracts/contracts/token/OUSD.sol\":14022:14073  if (_amount == 0) {\r... */\n    tag_412:\n        /* \"contracts/contracts/token/OUSD.sol\":14085:14110  bool isNonRebasingAccount */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":14113:14144  _isNonRebasingAccount(_account) */\n      tag_413\n        /* \"contracts/contracts/token/OUSD.sol\":14135:14143  _account */\n      dup6\n        /* \"contracts/contracts/token/OUSD.sol\":14113:14134  _isNonRebasingAccount */\n      tag_293\n        /* \"contracts/contracts/token/OUSD.sol\":14113:14144  _isNonRebasingAccount(_account) */\n      jump\t// in\n    tag_413:\n        /* \"contracts/contracts/token/OUSD.sol\":14085:14144  bool isNonRebasingAccount = _isNonRebasingAccount(_account) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":14155:14175  uint256 creditAmount */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":14178:14225  _amount.mulTruncate(_creditsPerToken(_account)) */\n      tag_414\n        /* \"contracts/contracts/token/OUSD.sol\":14198:14224  _creditsPerToken(_account) */\n      tag_355\n        /* \"contracts/contracts/token/OUSD.sol\":14215:14223  _account */\n      dup8\n        /* \"contracts/contracts/token/OUSD.sol\":14198:14214  _creditsPerToken */\n      tag_260\n        /* \"contracts/contracts/token/OUSD.sol\":14198:14224  _creditsPerToken(_account) */\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":14178:14225  _amount.mulTruncate(_creditsPerToken(_account)) */\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":14261:14286  _creditBalances[_account] */\n      dup8\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":14236:14258  uint256 currentCredits */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":14261:14286  _creditBalances[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":14261:14276  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":14261:14286  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":14155:14225  uint256 creditAmount = _amount.mulTruncate(_creditsPerToken(_account)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":14373:14403  currentCredits == creditAmount */\n      dup1\n      dup3\n      eq\n      dup1\n        /* \"contracts/contracts/token/OUSD.sol\":14373:14441  currentCredits == creditAmount || currentCredits - 1 == creditAmount */\n      tag_416\n      jumpi\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":14429:14441  creditAmount */\n      dup2\n        /* \"contracts/contracts/token/OUSD.sol\":14407:14425  currentCredits - 1 */\n      tag_417\n        /* \"contracts/contracts/token/OUSD.sol\":14424:14425  1 */\n      0x01\n        /* \"contracts/contracts/token/OUSD.sol\":14407:14421  currentCredits */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":14407:14425  currentCredits - 1 */\n      tag_347\n      jump\t// in\n    tag_417:\n        /* \"contracts/contracts/token/OUSD.sol\":14407:14441  currentCredits - 1 == creditAmount */\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":14373:14441  currentCredits == creditAmount || currentCredits - 1 == creditAmount */\n    tag_416:\n        /* \"contracts/contracts/token/OUSD.sol\":14355:14787  if (\r... */\n      iszero\n      tag_418\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":14510:14535  _creditBalances[_account] */\n      dup8\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":14538:14539  0 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":14510:14535  _creditBalances[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":14510:14525  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":14510:14535  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":14510:14539  _creditBalances[_account] = 0 */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":14355:14787  if (\r... */\n      jump(tag_422)\n    tag_418:\n        /* \"contracts/contracts/token/OUSD.sol\":14578:14590  creditAmount */\n      dup2\n        /* \"contracts/contracts/token/OUSD.sol\":14561:14575  currentCredits */\n      dup2\n        /* \"contracts/contracts/token/OUSD.sol\":14561:14590  currentCredits > creditAmount */\n      gt\n        /* \"contracts/contracts/token/OUSD.sol\":14557:14787  if (currentCredits > creditAmount) {\r... */\n      iszero\n      tag_420\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":14635:14660  _creditBalances[_account] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":14635:14650  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":14635:14660  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":14635:14710  _creditBalances[_account].sub(\r... */\n      tag_421\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":14683:14695  creditAmount */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":14635:14664  _creditBalances[_account].sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":14635:14710  _creditBalances[_account].sub(\r... */\n      jump\t// in\n    tag_421:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":14607:14632  _creditBalances[_account] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":14607:14622  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":14607:14632  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":14607:14710  _creditBalances[_account] = _creditBalances[_account].sub(\r... */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":14557:14787  if (currentCredits > creditAmount) {\r... */\n      jump(tag_422)\n    tag_420:\n        /* \"contracts/contracts/token/OUSD.sol\":14743:14775  revert(\"Remove exceeds balance\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8064:8066   */\n      0x20\n        /* \"contracts/contracts/token/OUSD.sol\":14743:14775  revert(\"Remove exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8046:8067   */\n      mstore\n        /* \"#utility.yul\":8103:8105   */\n      0x16\n        /* \"#utility.yul\":8083:8101   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8076:8106   */\n      mstore\n      shl(0x50, 0x52656d6f766520657863656564732062616c616e6365)\n        /* \"#utility.yul\":8122:8140   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8115:8167   */\n      mstore\n        /* \"#utility.yul\":8184:8202   */\n      0x64\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":14743:14775  revert(\"Remove exceeds balance\") */\n      tag_175\n        /* \"#utility.yul\":7862:8208   */\n      jump\n        /* \"contracts/contracts/token/OUSD.sol\":14557:14787  if (currentCredits > creditAmount) {\r... */\n    tag_422:\n        /* \"contracts/contracts/token/OUSD.sol\":14870:14890  isNonRebasingAccount */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":14866:15055  if (isNonRebasingAccount) {\r... */\n      iszero\n      tag_425\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":14927:14944  nonRebasingSupply */\n      sload(0xa0)\n        /* \"contracts/contracts/token/OUSD.sol\":14927:14957  nonRebasingSupply.sub(_amount) */\n      tag_426\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":14949:14956  _amount */\n      dup8\n        /* \"contracts/contracts/token/OUSD.sol\":14927:14948  nonRebasingSupply.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":14927:14957  nonRebasingSupply.sub(_amount) */\n      jump\t// in\n    tag_426:\n        /* \"contracts/contracts/token/OUSD.sol\":14907:14924  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":14907:14957  nonRebasingSupply = nonRebasingSupply.sub(_amount) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":14866:15055  if (isNonRebasingAccount) {\r... */\n      jump(tag_427)\n    tag_425:\n        /* \"contracts/contracts/token/OUSD.sol\":15009:15025  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":15009:15043  _rebasingCredits.sub(creditAmount) */\n      tag_428\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":15030:15042  creditAmount */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":15009:15029  _rebasingCredits.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":15009:15043  _rebasingCredits.sub(creditAmount) */\n      jump\t// in\n    tag_428:\n        /* \"contracts/contracts/token/OUSD.sol\":14990:15006  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":14990:15043  _rebasingCredits = _rebasingCredits.sub(creditAmount) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":14866:15055  if (isNonRebasingAccount) {\r... */\n    tag_427:\n        /* \"contracts/contracts/token/OUSD.sol\":15082:15094  _totalSupply */\n      sload(0x9a)\n        /* \"contracts/contracts/token/OUSD.sol\":15082:15107  _totalSupply.sub(_amount) */\n      tag_429\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":15099:15106  _amount */\n      dup8\n        /* \"contracts/contracts/token/OUSD.sol\":15082:15098  _totalSupply.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":15082:15107  _totalSupply.sub(_amount) */\n      jump\t// in\n    tag_429:\n        /* \"contracts/contracts/token/OUSD.sol\":15067:15079  _totalSupply */\n      0x9a\n        /* \"contracts/contracts/token/OUSD.sol\":15067:15107  _totalSupply = _totalSupply.sub(_amount) */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":15125:15164  Transfer(_account, address(0), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":9835:9860   */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":15152:15153  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":15125:15164  Transfer(_account, address(0), _amount) */\n      dup10\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":9823:9825   */\n      0x20\n        /* \"#utility.yul\":9808:9826   */\n      add\n        /* \"contracts/contracts/token/OUSD.sol\":15125:15164  Transfer(_account, address(0), _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/token/OUSD.sol\":13939:15172  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":3814:3815  _ */\n    tag_408:\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":4003:4015  _NOT_ENTERED */\n      0x01\n        /* \"contracts/contracts/governance/Governable.sol\":3986:4016  sstore(position, _NOT_ENTERED) */\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/contracts/token/OUSD.sol\":13867:15172  function _burn(address _account, uint256 _amount) internal nonReentrant {\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":15911:16243  function _isNonRebasingAccount(address _account) internal returns (bool) {\r... */\n    tag_293:\n        /* \"contracts/contracts/token/OUSD.sol\":15978:15982  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup3\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n      dup2\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":16056:16115  isContract && rebaseState[_account] == RebaseOptions.NotSet */\n      tag_434\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":16070:16091  rebaseState[_account] */\n      dup4\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":16095:16115  RebaseOptions.NotSet */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":16070:16091  rebaseState[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":16070:16081  rebaseState */\n      0xa2\n        /* \"contracts/contracts/token/OUSD.sol\":16070:16091  rebaseState[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":16070:16115  rebaseState[_account] == RebaseOptions.NotSet */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_438\n      jumpi\n      tag_438\n      tag_302\n      jump\t// in\n    tag_438:\n      eq\n        /* \"contracts/contracts/token/OUSD.sol\":16056:16115  isContract && rebaseState[_account] == RebaseOptions.NotSet */\n    tag_434:\n        /* \"contracts/contracts/token/OUSD.sol\":16052:16178  if (isContract && rebaseState[_account] == RebaseOptions.NotSet) {\r... */\n      iszero\n      tag_440\n      jumpi\n        /* \"contracts/contracts/token/OUSD.sol\":16132:16166  _ensureRebasingMigration(_account) */\n      tag_440\n        /* \"contracts/contracts/token/OUSD.sol\":16157:16165  _account */\n      dup4\n        /* \"contracts/contracts/token/OUSD.sol\":16132:16156  _ensureRebasingMigration */\n      tag_441\n        /* \"contracts/contracts/token/OUSD.sol\":16132:16166  _ensureRebasingMigration(_account) */\n      jump\t// in\n    tag_440:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":16195:16231  nonRebasingCreditsPerToken[_account] */\n      and\n        /* \"contracts/contracts/token/OUSD.sol\":16234:16235  0 */\n      0x00\n        /* \"contracts/contracts/token/OUSD.sol\":16195:16231  nonRebasingCreditsPerToken[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":16195:16221  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":16195:16231  nonRebasingCreditsPerToken[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":16195:16235  nonRebasingCreditsPerToken[_account] > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/contracts/token/OUSD.sol\":15911:16243  function _isNonRebasingAccount(address _account) internal returns (bool) {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_445\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_189\n      jump\t// in\n        /* \"contracts/contracts/utils/StableMath.sol\":1560:1695  function mulTruncate(uint256 x, uint256 y) internal pure returns (uint256) {\r... */\n    tag_353:\n        /* \"contracts/contracts/utils/StableMath.sol\":1626:1633  uint256 */\n      0x00\n        /* \"contracts/contracts/utils/StableMath.sol\":1653:1687  mulTruncateScale(x, y, FULL_SCALE) */\n      tag_346\n        /* \"contracts/contracts/utils/StableMath.sol\":1670:1671  x */\n      dup4\n        /* \"contracts/contracts/utils/StableMath.sol\":1673:1674  y */\n      dup4\n        /* \"contracts/contracts/utils/StableMath.sol\":526:530  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/contracts/utils/StableMath.sol\":1653:1669  mulTruncateScale */\n      tag_450\n        /* \"contracts/contracts/utils/StableMath.sol\":1653:1687  mulTruncateScale(x, y, FULL_SCALE) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5190  function sub(... */\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5075:5082  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5134:5146  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5126:5132  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5118:5147  require(b <= a, errorMessage) */\n      tag_452\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_452:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5168:5173  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5190  function sub(... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":16425:17366  function _ensureRebasingMigration(address _account) internal {\r... */\n    tag_441:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":16501:16537  nonRebasingCreditsPerToken[_account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":16501:16527  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":16501:16537  nonRebasingCreditsPerToken[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":16497:17359  if (nonRebasingCreditsPerToken[_account] == 0) {\r... */\n      tag_400\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":16563:16588  _creditBalances[_account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":16563:16578  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":16563:16588  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":16559:17348  if (_creditBalances[_account] == 0) {\r... */\n      tag_458\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":16774:16810  nonRebasingCreditsPerToken[_account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":16774:16800  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":16774:16810  nonRebasingCreditsPerToken[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":16813:16817  1e27 */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/contracts/token/OUSD.sol\":16774:16817  nonRebasingCreditsPerToken[_account] = 1e27 */\n      swap1\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n      jump\t// out\n        /* \"contracts/contracts/token/OUSD.sol\":16559:17348  if (_creditBalances[_account] == 0) {\r... */\n    tag_458:\n        /* \"contracts/contracts/token/OUSD.sol\":17013:17037  _rebasingCreditsPerToken */\n      sload(0x9f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":16974:17010  nonRebasingCreditsPerToken[_account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":16974:17000  nonRebasingCreditsPerToken */\n      0xa1\n        /* \"contracts/contracts/token/OUSD.sol\":16974:17010  nonRebasingCreditsPerToken[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/OUSD.sol\":16974:17037  nonRebasingCreditsPerToken[_account] = _rebasingCreditsPerToken */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":17123:17165  nonRebasingSupply.add(balanceOf(_account)) */\n      tag_460\n        /* \"contracts/contracts/token/OUSD.sol\":17145:17164  balanceOf(_account) */\n      tag_298\n        /* \"contracts/contracts/token/OUSD.sol\":17001:17009  _account */\n      dup3\n        /* \"contracts/contracts/token/OUSD.sol\":17145:17154  balanceOf */\n      tag_111\n        /* \"contracts/contracts/token/OUSD.sol\":17145:17164  balanceOf(_account) */\n      jump\t// in\n        /* \"contracts/contracts/token/OUSD.sol\":17123:17165  nonRebasingSupply.add(balanceOf(_account)) */\n    tag_460:\n        /* \"contracts/contracts/token/OUSD.sol\":17103:17120  nonRebasingSupply */\n      0xa0\n        /* \"contracts/contracts/token/OUSD.sol\":17103:17165  nonRebasingSupply = nonRebasingSupply.add(balanceOf(_account)) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/OUSD.sol\":17288:17313  _creditBalances[_account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/OUSD.sol\":17288:17303  _creditBalances */\n      0x9d\n        /* \"contracts/contracts/token/OUSD.sol\":17288:17313  _creditBalances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/OUSD.sol\":17245:17261  _rebasingCredits */\n      sload(0x9e)\n        /* \"contracts/contracts/token/OUSD.sol\":17245:17332  _rebasingCredits.sub(\r... */\n      tag_462\n      swap2\n        /* \"contracts/contracts/token/OUSD.sol\":17245:17265  _rebasingCredits.sub */\n      tag_205\n        /* \"contracts/contracts/token/OUSD.sol\":17245:17332  _rebasingCredits.sub(\r... */\n      jump\t// in\n    tag_462:\n        /* \"contracts/contracts/token/OUSD.sol\":17226:17242  _rebasingCredits */\n      0x9e\n        /* \"contracts/contracts/token/OUSD.sol\":17226:17332  _rebasingCredits = _rebasingCredits.sub(\r... */\n      sstore\n        /* \"contracts/contracts/token/OUSD.sol\":16425:17366  function _ensureRebasingMigration(address _account) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/utils/StableMath.sol\":2150:2464  function mulTruncateScale(\r... */\n    tag_450:\n        /* \"contracts/contracts/utils/StableMath.sol\":2270:2277  uint256 */\n      0x00\n      dup1\n        /* \"contracts/contracts/utils/StableMath.sol\":2380:2388  x.mul(y) */\n      tag_464\n        /* \"contracts/contracts/utils/StableMath.sol\":2380:2381  x */\n      dup6\n        /* \"contracts/contracts/utils/StableMath.sol\":2386:2387  y */\n      dup6\n        /* \"contracts/contracts/utils/StableMath.sol\":2380:2385  x.mul */\n      tag_327\n        /* \"contracts/contracts/utils/StableMath.sol\":2380:2388  x.mul(y) */\n      jump\t// in\n    tag_464:\n        /* \"contracts/contracts/utils/StableMath.sol\":2368:2388  uint256 z = x.mul(y) */\n      swap1\n      pop\n        /* \"contracts/contracts/utils/StableMath.sol\":2444:2456  z.div(scale) */\n      tag_465\n        /* \"contracts/contracts/utils/StableMath.sol\":2368:2388  uint256 z = x.mul(y) */\n      dup2\n        /* \"contracts/contracts/utils/StableMath.sol\":2450:2455  scale */\n      dup5\n        /* \"contracts/contracts/utils/StableMath.sol\":2444:2449  z.div */\n      tag_328\n        /* \"contracts/contracts/utils/StableMath.sol\":2444:2456  z.div(scale) */\n      jump\t// in\n    tag_465:\n        /* \"contracts/contracts/utils/StableMath.sol\":2437:2456  return z.div(scale) */\n      swap6\n        /* \"contracts/contracts/utils/StableMath.sol\":2150:2464  function mulTruncateScale(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_342:\n      dup3\n      dup1\n      sload\n      tag_466\n      swap1\n      tag_167\n      jump\t// in\n    tag_466:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_468\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_471)\n    tag_468:\n      dup3\n      0x1f\n      lt\n      tag_469\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_471)\n    tag_469:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_471\n      jumpi\n      swap2\n      dup3\n      add\n    tag_470:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_471\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_470)\n    tag_471:\n      pop\n      tag_472\n      swap3\n      swap2\n      pop\n      tag_473\n      jump\t// in\n    tag_472:\n      pop\n      swap1\n      jump\t// out\n    tag_473:\n    tag_474:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_472\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_474)\n        /* \"#utility.yul\":14:187   */\n    tag_477:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:540   */\n    tag_480:\n        /* \"#utility.yul\":244:252   */\n      0x00\n        /* \"#utility.yul\":254:260   */\n      dup1\n        /* \"#utility.yul\":308:311   */\n      dup4\n        /* \"#utility.yul\":301:305   */\n      0x1f\n        /* \"#utility.yul\":293:299   */\n      dup5\n        /* \"#utility.yul\":289:306   */\n      add\n        /* \"#utility.yul\":285:312   */\n      slt\n        /* \"#utility.yul\":275:330   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":326:327   */\n      0x00\n        /* \"#utility.yul\":323:324   */\n      dup1\n        /* \"#utility.yul\":316:328   */\n      revert\n        /* \"#utility.yul\":275:330   */\n    tag_482:\n      pop\n        /* \"#utility.yul\":349:369   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":392:410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":381:411   */\n      dup2\n      gt\n        /* \"#utility.yul\":378:428   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":424:425   */\n      0x00\n        /* \"#utility.yul\":421:422   */\n      dup1\n        /* \"#utility.yul\":414:426   */\n      revert\n        /* \"#utility.yul\":378:428   */\n    tag_483:\n        /* \"#utility.yul\":461:465   */\n      0x20\n        /* \"#utility.yul\":453:459   */\n      dup4\n        /* \"#utility.yul\":449:466   */\n      add\n        /* \"#utility.yul\":437:466   */\n      swap2\n      pop\n        /* \"#utility.yul\":513:516   */\n      dup4\n        /* \"#utility.yul\":506:510   */\n      0x20\n        /* \"#utility.yul\":497:503   */\n      dup3\n        /* \"#utility.yul\":489:495   */\n      dup6\n        /* \"#utility.yul\":485:504   */\n      add\n        /* \"#utility.yul\":481:511   */\n      add\n        /* \"#utility.yul\":478:517   */\n      gt\n        /* \"#utility.yul\":475:534   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":530:531   */\n      0x00\n        /* \"#utility.yul\":527:528   */\n      dup1\n        /* \"#utility.yul\":520:532   */\n      revert\n        /* \"#utility.yul\":475:534   */\n    tag_484:\n        /* \"#utility.yul\":192:540   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:731   */\n    tag_96:\n        /* \"#utility.yul\":604:610   */\n      0x00\n        /* \"#utility.yul\":657:659   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup3\n        /* \"#utility.yul\":636:643   */\n      dup5\n        /* \"#utility.yul\":632:655   */\n      sub\n        /* \"#utility.yul\":628:660   */\n      slt\n        /* \"#utility.yul\":625:677   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":673:674   */\n      0x00\n        /* \"#utility.yul\":670:671   */\n      dup1\n        /* \"#utility.yul\":663:675   */\n      revert\n        /* \"#utility.yul\":625:677   */\n    tag_486:\n        /* \"#utility.yul\":696:725   */\n      tag_346\n        /* \"#utility.yul\":715:724   */\n      dup3\n        /* \"#utility.yul\":696:725   */\n      tag_477\n      jump\t// in\n        /* \"#utility.yul\":736:996   */\n    tag_147:\n        /* \"#utility.yul\":804:810   */\n      0x00\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":865:867   */\n      0x40\n        /* \"#utility.yul\":853:862   */\n      dup4\n        /* \"#utility.yul\":844:851   */\n      dup6\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:885   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":833:885   */\n    tag_489:\n        /* \"#utility.yul\":904:933   */\n      tag_490\n        /* \"#utility.yul\":923:932   */\n      dup4\n        /* \"#utility.yul\":904:933   */\n      tag_477\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":894:933   */\n      swap2\n      pop\n        /* \"#utility.yul\":952:990   */\n      tag_491\n        /* \"#utility.yul\":986:988   */\n      0x20\n        /* \"#utility.yul\":975:984   */\n      dup5\n        /* \"#utility.yul\":971:989   */\n      add\n        /* \"#utility.yul\":952:990   */\n      tag_477\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":942:990   */\n      swap1\n      pop\n        /* \"#utility.yul\":736:996   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1001:1329   */\n    tag_70:\n        /* \"#utility.yul\":1078:1084   */\n      0x00\n        /* \"#utility.yul\":1086:1092   */\n      dup1\n        /* \"#utility.yul\":1094:1100   */\n      0x00\n        /* \"#utility.yul\":1147:1149   */\n      0x60\n        /* \"#utility.yul\":1135:1144   */\n      dup5\n        /* \"#utility.yul\":1126:1133   */\n      dup7\n        /* \"#utility.yul\":1122:1145   */\n      sub\n        /* \"#utility.yul\":1118:1150   */\n      slt\n        /* \"#utility.yul\":1115:1167   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":1163:1164   */\n      0x00\n        /* \"#utility.yul\":1160:1161   */\n      dup1\n        /* \"#utility.yul\":1153:1165   */\n      revert\n        /* \"#utility.yul\":1115:1167   */\n    tag_493:\n        /* \"#utility.yul\":1186:1215   */\n      tag_494\n        /* \"#utility.yul\":1205:1214   */\n      dup5\n        /* \"#utility.yul\":1186:1215   */\n      tag_477\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":1176:1215   */\n      swap3\n      pop\n        /* \"#utility.yul\":1234:1272   */\n      tag_495\n        /* \"#utility.yul\":1268:1270   */\n      0x20\n        /* \"#utility.yul\":1257:1266   */\n      dup6\n        /* \"#utility.yul\":1253:1271   */\n      add\n        /* \"#utility.yul\":1234:1272   */\n      tag_477\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":1224:1272   */\n      swap2\n      pop\n        /* \"#utility.yul\":1319:1321   */\n      0x40\n        /* \"#utility.yul\":1308:1317   */\n      dup5\n        /* \"#utility.yul\":1304:1322   */\n      add\n        /* \"#utility.yul\":1291:1323   */\n      calldataload\n        /* \"#utility.yul\":1281:1323   */\n      swap1\n      pop\n        /* \"#utility.yul\":1001:1329   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1334:1588   */\n    tag_57:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1410:1416   */\n      dup1\n        /* \"#utility.yul\":1463:1465   */\n      0x40\n        /* \"#utility.yul\":1451:1460   */\n      dup4\n        /* \"#utility.yul\":1442:1449   */\n      dup6\n        /* \"#utility.yul\":1438:1461   */\n      sub\n        /* \"#utility.yul\":1434:1466   */\n      slt\n        /* \"#utility.yul\":1431:1483   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":1479:1480   */\n      0x00\n        /* \"#utility.yul\":1476:1477   */\n      dup1\n        /* \"#utility.yul\":1469:1481   */\n      revert\n        /* \"#utility.yul\":1431:1483   */\n    tag_497:\n        /* \"#utility.yul\":1502:1531   */\n      tag_498\n        /* \"#utility.yul\":1521:1530   */\n      dup4\n        /* \"#utility.yul\":1502:1531   */\n      tag_477\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":1492:1531   */\n      swap5\n        /* \"#utility.yul\":1578:1580   */\n      0x20\n        /* \"#utility.yul\":1563:1581   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1550:1582   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1334:1588   */\n      jump\t// out\n        /* \"#utility.yul\":1593:2388   */\n    tag_49:\n        /* \"#utility.yul\":1694:1700   */\n      0x00\n        /* \"#utility.yul\":1702:1708   */\n      dup1\n        /* \"#utility.yul\":1710:1716   */\n      0x00\n        /* \"#utility.yul\":1718:1724   */\n      dup1\n        /* \"#utility.yul\":1726:1732   */\n      0x00\n        /* \"#utility.yul\":1779:1781   */\n      0x60\n        /* \"#utility.yul\":1767:1776   */\n      dup7\n        /* \"#utility.yul\":1758:1765   */\n      dup9\n        /* \"#utility.yul\":1754:1777   */\n      sub\n        /* \"#utility.yul\":1750:1782   */\n      slt\n        /* \"#utility.yul\":1747:1799   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":1795:1796   */\n      0x00\n        /* \"#utility.yul\":1792:1793   */\n      dup1\n        /* \"#utility.yul\":1785:1797   */\n      revert\n        /* \"#utility.yul\":1747:1799   */\n    tag_500:\n        /* \"#utility.yul\":1835:1844   */\n      dup6\n        /* \"#utility.yul\":1822:1845   */\n      calldataload\n        /* \"#utility.yul\":1864:1882   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1905:1907   */\n      dup1\n        /* \"#utility.yul\":1897:1903   */\n      dup3\n        /* \"#utility.yul\":1894:1908   */\n      gt\n        /* \"#utility.yul\":1891:1925   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":1921:1922   */\n      0x00\n        /* \"#utility.yul\":1918:1919   */\n      dup1\n        /* \"#utility.yul\":1911:1923   */\n      revert\n        /* \"#utility.yul\":1891:1925   */\n    tag_501:\n        /* \"#utility.yul\":1960:2019   */\n      tag_502\n        /* \"#utility.yul\":2011:2018   */\n      dup10\n        /* \"#utility.yul\":2002:2008   */\n      dup4\n        /* \"#utility.yul\":1991:2000   */\n      dup11\n        /* \"#utility.yul\":1987:2009   */\n      add\n        /* \"#utility.yul\":1960:2019   */\n      tag_480\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":2038:2046   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":1934:2019   */\n      swap6\n      pop\n        /* \"#utility.yul\":2126:2128   */\n      0x20\n        /* \"#utility.yul\":2111:2129   */\n      dup9\n      add\n        /* \"#utility.yul\":2098:2130   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2142:2158   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2139:2175   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2168:2169   */\n      dup1\n        /* \"#utility.yul\":2161:2173   */\n      revert\n        /* \"#utility.yul\":2139:2175   */\n    tag_503:\n      pop\n        /* \"#utility.yul\":2210:2271   */\n      tag_504\n        /* \"#utility.yul\":2263:2270   */\n      dup9\n        /* \"#utility.yul\":2252:2260   */\n      dup3\n        /* \"#utility.yul\":2241:2250   */\n      dup10\n        /* \"#utility.yul\":2237:2261   */\n      add\n        /* \"#utility.yul\":2210:2271   */\n      tag_480\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":2290:2298   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":2184:2271   */\n      swap3\n      pop\n        /* \"#utility.yul\":2344:2382   */\n      tag_505\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2380   */\n      0x40\n        /* \"#utility.yul\":2363:2381   */\n      dup8\n      add\n        /* \"#utility.yul\":2344:2382   */\n      tag_477\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2334:2382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1593:2388   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2393:2573   */\n    tag_83:\n        /* \"#utility.yul\":2452:2458   */\n      0x00\n        /* \"#utility.yul\":2505:2507   */\n      0x20\n        /* \"#utility.yul\":2493:2502   */\n      dup3\n        /* \"#utility.yul\":2484:2491   */\n      dup5\n        /* \"#utility.yul\":2480:2503   */\n      sub\n        /* \"#utility.yul\":2476:2508   */\n      slt\n        /* \"#utility.yul\":2473:2525   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":2521:2522   */\n      0x00\n        /* \"#utility.yul\":2518:2519   */\n      dup1\n        /* \"#utility.yul\":2511:2523   */\n      revert\n        /* \"#utility.yul\":2473:2525   */\n    tag_507:\n      pop\n        /* \"#utility.yul\":2544:2567   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2393:2573   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2978:3323   */\n    tag_99:\n        /* \"#utility.yul\":3127:3129   */\n      0x20\n        /* \"#utility.yul\":3112:3130   */\n      dup2\n      add\n        /* \"#utility.yul\":3160:3161   */\n      0x03\n        /* \"#utility.yul\":3149:3162   */\n      dup4\n      lt\n        /* \"#utility.yul\":3139:3283   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":3205:3215   */\n      0x4e487b71\n        /* \"#utility.yul\":3200:3203   */\n      0xe0\n        /* \"#utility.yul\":3196:3216   */\n      shl\n        /* \"#utility.yul\":3193:3194   */\n      0x00\n        /* \"#utility.yul\":3186:3217   */\n      mstore\n        /* \"#utility.yul\":3240:3244   */\n      0x21\n        /* \"#utility.yul\":3237:3238   */\n      0x04\n        /* \"#utility.yul\":3230:3245   */\n      mstore\n        /* \"#utility.yul\":3268:3272   */\n      0x24\n        /* \"#utility.yul\":3265:3266   */\n      0x00\n        /* \"#utility.yul\":3258:3273   */\n      revert\n        /* \"#utility.yul\":3139:3283   */\n    tag_511:\n        /* \"#utility.yul\":3292:3317   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":2978:3323   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3328:3925   */\n    tag_46:\n        /* \"#utility.yul\":3440:3444   */\n      0x00\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"#utility.yul\":3498:3500   */\n      dup1\n        /* \"#utility.yul\":3487:3496   */\n      dup4\n        /* \"#utility.yul\":3480:3501   */\n      mstore\n        /* \"#utility.yul\":3530:3536   */\n      dup4\n        /* \"#utility.yul\":3524:3537   */\n      mload\n        /* \"#utility.yul\":3573:3579   */\n      dup1\n        /* \"#utility.yul\":3568:3570   */\n      dup3\n        /* \"#utility.yul\":3557:3566   */\n      dup6\n        /* \"#utility.yul\":3553:3571   */\n      add\n        /* \"#utility.yul\":3546:3580   */\n      mstore\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3608:3748   */\n    tag_513:\n        /* \"#utility.yul\":3622:3628   */\n      dup2\n        /* \"#utility.yul\":3619:3620   */\n      dup2\n        /* \"#utility.yul\":3616:3629   */\n      lt\n        /* \"#utility.yul\":3608:3748   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":3717:3731   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3713:3736   */\n      dup4\n      add\n        /* \"#utility.yul\":3707:3737   */\n      mload\n        /* \"#utility.yul\":3683:3700   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3702:3704   */\n      0x40\n        /* \"#utility.yul\":3679:3705   */\n      add\n        /* \"#utility.yul\":3672:3738   */\n      mstore\n        /* \"#utility.yul\":3637:3647   */\n      dup3\n      add\n        /* \"#utility.yul\":3608:3748   */\n      jump(tag_513)\n    tag_515:\n        /* \"#utility.yul\":3766:3772   */\n      dup2\n        /* \"#utility.yul\":3763:3764   */\n      dup2\n        /* \"#utility.yul\":3760:3773   */\n      gt\n        /* \"#utility.yul\":3757:3848   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":3836:3837   */\n      0x00\n        /* \"#utility.yul\":3831:3833   */\n      0x40\n        /* \"#utility.yul\":3822:3828   */\n      dup4\n        /* \"#utility.yul\":3811:3820   */\n      dup8\n        /* \"#utility.yul\":3807:3829   */\n      add\n        /* \"#utility.yul\":3803:3834   */\n      add\n        /* \"#utility.yul\":3796:3838   */\n      mstore\n        /* \"#utility.yul\":3757:3848   */\n    tag_516:\n      pop\n        /* \"#utility.yul\":3909:3911   */\n      0x1f\n        /* \"#utility.yul\":3888:3903   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3884:3913   */\n      and\n        /* \"#utility.yul\":3869:3914   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3916:3918   */\n      0x40\n        /* \"#utility.yul\":3865:3919   */\n      add\n      swap4\n        /* \"#utility.yul\":3328:3925   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3930:4277   */\n    tag_217:\n        /* \"#utility.yul\":4132:4134   */\n      0x20\n        /* \"#utility.yul\":4114:4135   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4171:4173   */\n      0x17\n        /* \"#utility.yul\":4151:4169   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4144:4174   */\n      mstore\n        /* \"#utility.yul\":4210:4235   */\n      0x43616c6c6572206973206e6f7420746865205661756c74000000000000000000\n        /* \"#utility.yul\":4205:4207   */\n      0x40\n        /* \"#utility.yul\":4190:4208   */\n      dup3\n      add\n        /* \"#utility.yul\":4183:4236   */\n      mstore\n        /* \"#utility.yul\":4268:4270   */\n      0x60\n        /* \"#utility.yul\":4253:4271   */\n      add\n      swap1\n        /* \"#utility.yul\":3930:4277   */\n      jump\t// out\n        /* \"#utility.yul\":7519:7857   */\n    tag_221:\n        /* \"#utility.yul\":7721:7723   */\n      0x20\n        /* \"#utility.yul\":7703:7724   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7760:7762   */\n      0x0e\n        /* \"#utility.yul\":7740:7758   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7733:7763   */\n      mstore\n      shl(0x92, 0x1499595b9d1c985b9d0818d85b1b)\n        /* \"#utility.yul\":7794:7796   */\n      0x40\n        /* \"#utility.yul\":7779:7797   */\n      dup3\n      add\n        /* \"#utility.yul\":7772:7816   */\n      mstore\n        /* \"#utility.yul\":7848:7850   */\n      0x60\n        /* \"#utility.yul\":7833:7851   */\n      add\n      swap1\n        /* \"#utility.yul\":7519:7857   */\n      jump\t// out\n        /* \"#utility.yul\":10971:11099   */\n    tag_370:\n        /* \"#utility.yul\":11011:11014   */\n      0x00\n        /* \"#utility.yul\":11042:11043   */\n      dup3\n        /* \"#utility.yul\":11038:11044   */\n      not\n        /* \"#utility.yul\":11035:11036   */\n      dup3\n        /* \"#utility.yul\":11032:11045   */\n      gt\n        /* \"#utility.yul\":11029:11068   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":11048:11066   */\n      tag_540\n      tag_541\n      jump\t// in\n    tag_540:\n      pop\n        /* \"#utility.yul\":11084:11093   */\n      add\n      swap1\n        /* \"#utility.yul\":10971:11099   */\n      jump\t// out\n        /* \"#utility.yul\":11104:11321   */\n    tag_189:\n        /* \"#utility.yul\":11144:11145   */\n      0x00\n        /* \"#utility.yul\":11170:11171   */\n      dup3\n        /* \"#utility.yul\":11160:11292   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":11214:11224   */\n      0x4e487b71\n        /* \"#utility.yul\":11209:11212   */\n      0xe0\n        /* \"#utility.yul\":11205:11225   */\n      shl\n        /* \"#utility.yul\":11202:11203   */\n      0x00\n        /* \"#utility.yul\":11195:11226   */\n      mstore\n        /* \"#utility.yul\":11249:11253   */\n      0x12\n        /* \"#utility.yul\":11246:11247   */\n      0x04\n        /* \"#utility.yul\":11239:11254   */\n      mstore\n        /* \"#utility.yul\":11277:11281   */\n      0x24\n        /* \"#utility.yul\":11274:11275   */\n      0x00\n        /* \"#utility.yul\":11267:11282   */\n      revert\n        /* \"#utility.yul\":11160:11292   */\n    tag_543:\n      pop\n        /* \"#utility.yul\":11306:11315   */\n      div\n      swap1\n        /* \"#utility.yul\":11104:11321   */\n      jump\t// out\n        /* \"#utility.yul\":11326:11494   */\n    tag_445:\n        /* \"#utility.yul\":11366:11373   */\n      0x00\n        /* \"#utility.yul\":11432:11433   */\n      dup2\n        /* \"#utility.yul\":11428:11429   */\n      0x00\n        /* \"#utility.yul\":11424:11430   */\n      not\n        /* \"#utility.yul\":11420:11434   */\n      div\n        /* \"#utility.yul\":11417:11418   */\n      dup4\n        /* \"#utility.yul\":11414:11435   */\n      gt\n        /* \"#utility.yul\":11409:11410   */\n      dup3\n        /* \"#utility.yul\":11402:11411   */\n      iszero\n        /* \"#utility.yul\":11395:11412   */\n      iszero\n        /* \"#utility.yul\":11391:11436   */\n      and\n        /* \"#utility.yul\":11388:11459   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":11439:11457   */\n      tag_546\n      tag_541\n      jump\t// in\n    tag_546:\n      pop\n        /* \"#utility.yul\":11479:11488   */\n      mul\n      swap1\n        /* \"#utility.yul\":11326:11494   */\n      jump\t// out\n        /* \"#utility.yul\":11499:11624   */\n    tag_347:\n        /* \"#utility.yul\":11539:11543   */\n      0x00\n        /* \"#utility.yul\":11567:11568   */\n      dup3\n        /* \"#utility.yul\":11564:11565   */\n      dup3\n        /* \"#utility.yul\":11561:11569   */\n      lt\n        /* \"#utility.yul\":11558:11592   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":11572:11590   */\n      tag_549\n      tag_541\n      jump\t// in\n    tag_549:\n      pop\n        /* \"#utility.yul\":11609:11618   */\n      sub\n      swap1\n        /* \"#utility.yul\":11499:11624   */\n      jump\t// out\n        /* \"#utility.yul\":11629:12009   */\n    tag_167:\n        /* \"#utility.yul\":11708:11709   */\n      0x01\n        /* \"#utility.yul\":11704:11716   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11751:11763   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11772:11833   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":11826:11830   */\n      0x7f\n        /* \"#utility.yul\":11818:11824   */\n      dup3\n        /* \"#utility.yul\":11814:11831   */\n      and\n        /* \"#utility.yul\":11804:11831   */\n      swap2\n      pop\n        /* \"#utility.yul\":11772:11833   */\n    tag_551:\n        /* \"#utility.yul\":11879:11881   */\n      0x20\n        /* \"#utility.yul\":11871:11877   */\n      dup3\n        /* \"#utility.yul\":11868:11882   */\n      lt\n        /* \"#utility.yul\":11848:11866   */\n      dup2\n        /* \"#utility.yul\":11845:11883   */\n      eq\n        /* \"#utility.yul\":11842:12003   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":11925:11935   */\n      0x4e487b71\n        /* \"#utility.yul\":11920:11923   */\n      0xe0\n        /* \"#utility.yul\":11916:11936   */\n      shl\n        /* \"#utility.yul\":11913:11914   */\n      0x00\n        /* \"#utility.yul\":11906:11937   */\n      mstore\n        /* \"#utility.yul\":11960:11964   */\n      0x22\n        /* \"#utility.yul\":11957:11958   */\n      0x04\n        /* \"#utility.yul\":11950:11965   */\n      mstore\n        /* \"#utility.yul\":11988:11992   */\n      0x24\n        /* \"#utility.yul\":11985:11986   */\n      0x00\n        /* \"#utility.yul\":11978:11993   */\n      revert\n        /* \"#utility.yul\":11842:12003   */\n    tag_552:\n      pop\n        /* \"#utility.yul\":11629:12009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12014:12141   */\n    tag_541:\n        /* \"#utility.yul\":12075:12085   */\n      0x4e487b71\n        /* \"#utility.yul\":12070:12073   */\n      0xe0\n        /* \"#utility.yul\":12066:12086   */\n      shl\n        /* \"#utility.yul\":12063:12064   */\n      0x00\n        /* \"#utility.yul\":12056:12087   */\n      mstore\n        /* \"#utility.yul\":12106:12110   */\n      0x11\n        /* \"#utility.yul\":12103:12104   */\n      0x04\n        /* \"#utility.yul\":12096:12111   */\n      mstore\n        /* \"#utility.yul\":12130:12134   */\n      0x24\n        /* \"#utility.yul\":12127:12128   */\n      0x00\n        /* \"#utility.yul\":12120:12135   */\n      revert\n        /* \"#utility.yul\":12146:12273   */\n    tag_302:\n        /* \"#utility.yul\":12207:12217   */\n      0x4e487b71\n        /* \"#utility.yul\":12202:12205   */\n      0xe0\n        /* \"#utility.yul\":12198:12218   */\n      shl\n        /* \"#utility.yul\":12195:12196   */\n      0x00\n        /* \"#utility.yul\":12188:12219   */\n      mstore\n        /* \"#utility.yul\":12238:12242   */\n      0x21\n        /* \"#utility.yul\":12235:12236   */\n      0x04\n        /* \"#utility.yul\":12228:12243   */\n      mstore\n        /* \"#utility.yul\":12262:12266   */\n      0x24\n        /* \"#utility.yul\":12259:12260   */\n      0x00\n        /* \"#utility.yul\":12252:12267   */\n      revert\n    stop\n    data_213ec435bf70ecf7a12c7c7c1673cbe2d6484d181dba26b798a55f8abc8e6650 53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\n    auxdata: 0xa2646970667358221220a7d2b0a458629bce519f1195e8512c41f1a9060b4a750fd0c5288cb33a0b583464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_733": {
									"entryPoint": null,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_governor_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x9C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2024 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2024 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x1F97 DUP1 PUSH2 0x8D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6691CB3D GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xE5C4FFFE EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xE696393A EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF51B0FD4 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xF9854BFC EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xC2376DFF EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x95EF84B9 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6691CB3D EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x7A46A9C5 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x7D0D66FF EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x430BF08A GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x456EE286 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x609350CD EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x39A7919F EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x77F22B7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x249 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x23B JUMP JUMPDEST PUSH2 0x25C PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x231 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x23B JUMP JUMPDEST PUSH2 0x208 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH2 0x25C PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x231 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x25C PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x23B PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x97 DUP1 SLOAD PUSH2 0x4C9 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F5 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x542 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x517 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x542 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x525 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x554 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x5BE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x6B9 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x12 SWAP3 POP PUSH2 0x12B5 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x9F SSTORE PUSH1 0x9C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3B9ACA00 PUSH1 0x9E SLOAD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x76E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x5472616E7366657220746F207A65726F2061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0x7F3 DUP5 PUSH2 0xC64 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722067726561746572207468616E2062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x870 SWAP1 DUP4 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x89F DUP5 DUP5 DUP5 PUSH2 0x1308 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x8D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x912 SWAP1 DUP4 PUSH2 0x1476 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH1 0x0 PUSH1 0x9A SLOAD GT PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420696E637265617365203020737570706C790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP3 PUSH1 0x9A SLOAD EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x9A SLOAD PUSH1 0x9E SLOAD PUSH1 0x9F SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0x41645EB819D3011B13F97696A8109D14BFCDDFACA7D063EC0564D62A3E257235 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 GT PUSH2 0xA85 JUMPI DUP3 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0xA0 SLOAD PUSH2 0xAAC SWAP2 PUSH2 0xAA3 SWAP2 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SLOAD SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x9F DUP2 SWAP1 SSTORE PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206368616E676520696E20737570706C790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xB20 PUSH1 0xA0 SLOAD PUSH2 0xB1A PUSH1 0x9F SLOAD PUSH1 0x9E SLOAD PUSH2 0x1482 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0x9E SLOAD PUSH1 0x9F SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0x41645EB819D3011B13F97696A8109D14BFCDDFACA7D063EC0564D62A3E257235 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 JUMPDEST POP PUSH1 0x1 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xBA6 DUP3 DUP3 PUSH2 0x14AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xC4E CALLER PUSH2 0x164C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3B9ACA00 PUSH1 0x9F SLOAD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xC89 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB4 PUSH2 0xC95 DUP4 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x98 DUP1 SLOAD PUSH2 0x4C9 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xBA6 DUP3 DUP3 PUSH2 0x1757 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0xD51 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0xD80 JUMP JUMPDEST PUSH2 0xD5B DUP2 DUP5 PUSH2 0x12F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x5472616E7366657220746F207A65726F2061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE40 CALLER PUSH2 0xC64 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722067726561746572207468616E2062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE9A CALLER DUP5 DUP5 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH2 0xF04 CALLER PUSH2 0x1960 JUMP JUMPDEST ISZERO PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420686173206E6F74206F7074656420696E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xF66 PUSH2 0xF5D CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH1 0xA0 SLOAD SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9F SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9D SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x9E SLOAD PUSH2 0xF94 SWAP2 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF2 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x103E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0x1066 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1086 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x10E4 DUP6 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP6 PUSH1 0x1 SWAP1 SWAP2 EQ SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH2 0x114C CALLER PUSH2 0x1960 JUMP JUMPDEST PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420686173206E6F74206F70746564206F757400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 PUSH2 0x11A6 CALLER PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x9F SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11C2 SWAP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 PUSH2 0x19E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x11DF PUSH2 0x11D6 CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH1 0xA0 SLOAD SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xA0 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x9E SLOAD PUSH2 0x1201 SWAP1 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9E SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0xA1 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x123F DUP5 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 EQ ISZERO PUSH2 0x1275 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x129D SWAP1 PUSH4 0x3B9ACA00 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x12AB PUSH4 0x3B9ACA00 DUP4 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 MLOAD PUSH2 0x12C8 SWAP1 PUSH1 0x97 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x12DC SWAP1 PUSH1 0x98 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x99 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP4 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1320 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1337 PUSH2 0x1330 DUP7 PUSH2 0x1710 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x134E PUSH2 0x1347 DUP9 PUSH2 0x1710 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH2 0x13BF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5472616E7366657220616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x9D PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A01 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x13EE SWAP1 DUP4 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP4 DUP1 ISZERO PUSH2 0x1412 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x143C JUMPI PUSH1 0xA0 SLOAD PUSH2 0x1424 SWAP1 DUP7 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9E SLOAD PUSH2 0x1434 SWAP1 DUP3 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE PUSH2 0x146D JUMP JUMPDEST DUP4 ISZERO DUP1 ISZERO PUSH2 0x1447 JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x146D JUMPI PUSH1 0xA0 SLOAD PUSH2 0x1459 SWAP1 DUP7 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9E SLOAD PUSH2 0x1469 SWAP1 DUP4 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1497 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x14A3 DUP2 DUP5 PUSH2 0x19E0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420746F20746865207A65726F20616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1542 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1552 PUSH2 0x1347 DUP8 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1578 SWAP1 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 ISZERO PUSH2 0x15AC JUMPI PUSH1 0xA0 SLOAD PUSH2 0x15A4 SWAP1 DUP7 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x15B9 SWAP1 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x15CA SWAP1 DUP7 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB GT PUSH2 0x1611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4D617820737570706C79 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x170D DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x174A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x9F SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x1789 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E2066726F6D20746865207A65726F2061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP3 PUSH2 0x17ED JUMPI PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F8 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1808 PUSH2 0x1347 DUP8 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ DUP1 PUSH2 0x183B JUMPI POP DUP2 PUSH2 0x1839 PUSH1 0x1 DUP4 PUSH2 0x1E83 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x185E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x18E8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1889 SWAP1 DUP4 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x52656D6F766520657863656564732062616C616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1903 JUMPI PUSH1 0xA0 SLOAD PUSH2 0x18FB SWAP1 DUP8 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x1910 SWAP1 DUP4 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x1921 SWAP1 DUP8 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9A SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMPDEST POP PUSH1 0x1 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x19A7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A5 PUSH2 0x1EEB JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x19B5 JUMPI PUSH2 0x19B5 DUP4 PUSH2 0x1A2D JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP4 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x170D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A8F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH12 0x33B2E3C9FD0803CE8000000 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1AB7 PUSH2 0xF5D DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x9E SLOAD PUSH2 0x1ADF SWAP2 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AF2 DUP6 DUP6 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AFE DUP2 DUP5 PUSH2 0x19E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1B13 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1B7B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1B4E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1B7B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B7B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B7B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B60 JUMP JUMPDEST POP PUSH2 0x1B87 SWAP3 SWAP2 POP PUSH2 0x1B8B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B8C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C37 DUP4 PUSH2 0x1BA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 PUSH1 0x20 DUP5 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6C DUP5 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C7A PUSH1 0x20 DUP6 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA6 DUP4 PUSH2 0x1BA0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF0 DUP10 DUP4 DUP11 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D16 DUP9 DUP3 DUP10 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1D29 SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1D70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DA3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1D87 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865205661756C74000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1499595B9D1C985B9D0818D85B1B PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E3D PUSH2 0x1ED5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7E PUSH2 0x1ED5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E95 JUMPI PUSH2 0x1E95 PUSH2 0x1ED5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1ECF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MSTORE8 0xBF TIMESTAMP RETURNDATACOPY BASEFEE 0xED SWAP1 0xE9 PUSH30 0x2AB0EBAB13B2A235A6BFBE9C321847D5C175333AC4535DDF252AD1BE2C8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH28 0xEA13895FA79D2831E0A9E28EDEDE30099005A50D652D8957CF8A607E 0xE6 0xCA 0x4A LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xD2 0xB0 LOG4 PC PUSH3 0x9BCE51 SWAP16 GT SWAP6 0xE8 MLOAD 0x2C COINBASE CALL 0xA9 MOD SIGNEXTEND 0x4A PUSH22 0xFD0C5288CB33A0B583464736F6C634300080700337B 0xEA SGT DUP10 0x5F 0xA7 SWAP14 0x28 BALANCE 0xE0 0xA9 0xE2 DUP15 0xDE 0xDE ADDRESS MULMOD SWAP1 SDIV 0xA5 0xD PUSH6 0x2D8957CF8A60 PUSH31 0xE6CA4A00000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "863:19667:4:-:0;;;1427:40;;;-1:-1:-1;;;;;;1427:40:4;;;863:19667;;;;;;;;;-1:-1:-1;1494:24:3;1507:10;-1:-1:-1;;;;;;;;;;;2905:29:3;2772:180;1494:24;-1:-1:-1;;;;;;;;;;;2006:15:3;1534:48;;-1:-1:-1;;;;;1534:48:3;;;;1566:1;;1534:48;;1566:1;;1534:48;863:19667:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_1779": {
									"entryPoint": 5975,
									"id": 1779,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_changeGovernor_900": {
									"entryPoint": 5708,
									"id": 900,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_creditsPerToken_1802": {
									"entryPoint": 5904,
									"id": 1802,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_ensureRebasingMigration_1890": {
									"entryPoint": 6701,
									"id": 1890,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_executeTransfer_1388": {
									"entryPoint": 4872,
									"id": 1388,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_governor_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initialize_2175": {
									"entryPoint": 4789,
									"id": 2175,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_isNonRebasingAccount_1838": {
									"entryPoint": 6496,
									"id": 1838,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_1643": {
									"entryPoint": 5291,
									"id": 1643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_pendingGovernor_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_802": {
									"entryPoint": null,
									"id": 802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPendingGovernor_835": {
									"entryPoint": null,
									"id": 835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_totalSupply_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_548": {
									"entryPoint": 5238,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1406": {
									"entryPoint": null,
									"id": 1406,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1436": {
									"entryPoint": 1811,
									"id": 1436,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1107": {
									"entryPoint": 3172,
									"id": 1107,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1659": {
									"entryPoint": 3273,
									"id": 1659,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeSupply_2085": {
									"entryPoint": 2409,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimGovernance_873": {
									"entryPoint": 2986,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@creditsBalanceOfHighres_1172": {
									"entryPoint": 4286,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@creditsBalanceOf_1146": {
									"entryPoint": 4657,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@decimals_2202": {
									"entryPoint": null,
									"id": 2202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1539": {
									"entryPoint": 3325,
									"id": 1539,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@divPrecisely_2361": {
									"entryPoint": 5250,
									"id": 2361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_593": {
									"entryPoint": 6624,
									"id": 593,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@governor_743": {
									"entryPoint": 1919,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_1478": {
									"entryPoint": 2276,
									"id": 1478,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1017": {
									"entryPoint": 1356,
									"id": 1017,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@isContract_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isGovernor_791": {
									"entryPoint": 4025,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isUpgraded_984": {
									"entryPoint": null,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1555": {
									"entryPoint": 2930,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mulTruncateScale_2305": {
									"entryPoint": 6885,
									"id": 2305,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mulTruncate_2280": {
									"entryPoint": 6636,
									"id": 2280,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_578": {
									"entryPoint": 6612,
									"id": 578,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_2184": {
									"entryPoint": 1210,
									"id": 2184,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonRebasingCreditsPerToken_975": {
									"entryPoint": null,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nonRebasingSupply_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseOptIn_1962": {
									"entryPoint": 4365,
									"id": 1962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseOptOut_2013": {
									"entryPoint": 3781,
									"id": 2013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebaseState_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rebasingCreditsHighres_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rebasingCreditsPerTokenHighres_1071": {
									"entryPoint": null,
									"id": 1071,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rebasingCreditsPerToken_1051": {
									"entryPoint": 3152,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rebasingCredits_1062": {
									"entryPoint": 1786,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_563": {
									"entryPoint": 4853,
									"id": 563,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_633": {
									"entryPoint": 6657,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_2193": {
									"entryPoint": 3258,
									"id": 2193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1284": {
									"entryPoint": 1943,
									"id": 1284,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferGovernance_854": {
									"entryPoint": 4074,
									"id": 854,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1220": {
									"entryPoint": 3556,
									"id": 1220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vaultAddress_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_calldata": {
									"entryPoint": 7095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_RebaseOptions_$940__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0849845f914f07adde3d3cbcfba0b83d83ccda38f916f4825f70ce179f185f56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a405d266ddbd60e705d4f0f39fc0b4b7754f13b0a418911fb09a0ca2f14ca3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_112bd22677775ff97cbd7ee72cb1a83f74dc695059c76ad87c6b357ae986d6c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b0197ca1a0ca783775c6c4d4922c6e7ba472242093c308b3907998d1f28f1c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5efea9b97bb0c0350137dfc11c89f12801f13899dde247b01e9b8116d87d3b9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89eb3a9b2784e42fd3c77b73f3ef39a40aba009f80d03872e249eedd5ef0102a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db4e28494f4730e74127f0f165a2684823f8d8099fc8529ee26a8be235d175bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f64f34ea67d55cbad94432fe44d6e3d14d2f697f9122f608cd7c329d2fc6e799__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12275:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nodeType": "YulIf",
															"src": "111:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:275:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "314:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "323:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "326:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "316:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "316:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "316:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "293:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "301:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "289:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "289:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "308:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "285:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "285:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:35:8"
															},
															"nodeType": "YulIf",
															"src": "275:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "339:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "362:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "412:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "424:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "414:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "414:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "414:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "384:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "392:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "381:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:30:8"
															},
															"nodeType": "YulIf",
															"src": "378:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "437:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "453:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "461:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "449:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "437:8:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "518:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "527:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "530:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "520:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "520:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "520:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "489:6:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "497:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "506:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:30:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "513:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "478:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:39:8"
															},
															"nodeType": "YulIf",
															"src": "475:59:8"
														}
													]
												},
												"name": "abi_decode_string_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "228:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "236:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "244:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "254:6:8",
														"type": ""
													}
												],
												"src": "192:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "615:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "661:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "670:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "673:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "663:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "663:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "663:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "636:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "657:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "628:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:32:8"
															},
															"nodeType": "YulIf",
															"src": "625:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "686:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "715:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "696:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "686:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "581:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "592:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "604:6:8",
														"type": ""
													}
												],
												"src": "545:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:8"
															},
															"nodeType": "YulIf",
															"src": "833:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "923:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "942:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "975:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "986:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "971:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "952:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "781:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "792:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "804:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "812:6:8",
														"type": ""
													}
												],
												"src": "736:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1105:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1151:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1163:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1153:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1153:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1153:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1126:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1135:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1122:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1118:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:32:8"
															},
															"nodeType": "YulIf",
															"src": "1115:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1176:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1205:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1186:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1224:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1268:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1281:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1308:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1319:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1304:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1304:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1291:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1291:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1281:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1055:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1066:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1078:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1086:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1094:6:8",
														"type": ""
													}
												],
												"src": "1001:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1467:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1479:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1469:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1469:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1442:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1451:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1438:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:32:8"
															},
															"nodeType": "YulIf",
															"src": "1431:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1492:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1521:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1502:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1540:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1567:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1578:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1563:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1563:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1550:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1540:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1410:6:8",
														"type": ""
													}
												],
												"src": "1334:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:651:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1783:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1785:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1758:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1767:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1754:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:32:8"
															},
															"nodeType": "YulIf",
															"src": "1747:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1808:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1835:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1822:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1822:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1812:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1854:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1864:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1858:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1909:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1921:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1911:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1897:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1905:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1894:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:14:8"
															},
															"nodeType": "YulIf",
															"src": "1891:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1934:85:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1991:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2002:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2011:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1960:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:59:8"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "1938:8:8",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "1948:8:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2028:18:8",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2038:8:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2055:18:8",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2065:8:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2082:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2126:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2111:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2098:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:32:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2086:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2159:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2161:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2145:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2155:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2142:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:16:8"
															},
															"nodeType": "YulIf",
															"src": "2139:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2184:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2241:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2252:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2237:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2263:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2210:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:61:8"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "2188:8:8",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "2198:8:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2280:18:8",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "2290:8:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2307:18:8",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2317:8:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2334:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2367:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2378:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2363:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2344:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:38:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2334:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1671:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1682:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1694:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1702:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1710:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1718:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1726:6:8",
														"type": ""
													}
												],
												"src": "1593:795:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2463:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2509:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2518:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2521:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2511:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2511:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2511:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2484:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2493:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2480:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2480:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2505:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:32:8"
															},
															"nodeType": "YulIf",
															"src": "2473:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2534:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2557:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2534:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2429:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2440:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2452:6:8",
														"type": ""
													}
												],
												"src": "2393:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2689:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2701:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2697:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2689:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2731:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2762:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2767:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2758:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2758:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2771:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2754:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2724:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2648:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2659:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2670:4:8",
														"type": ""
													}
												],
												"src": "2578:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2881:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2891:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2903:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2914:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2899:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2891:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2933:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2951:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2951:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2944:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2944:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2926:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2850:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2861:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2872:4:8",
														"type": ""
													}
												],
												"src": "2786:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3094:229:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3104:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3116:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3127:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3112:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3104:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3172:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3193:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3200:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3205:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3196:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3196:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3186:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3186:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3186:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3237:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3240:4:8",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3230:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3230:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3230:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3265:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3268:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3258:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3258:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3258:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3152:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3160:1:8",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3149:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:21:8"
															},
															"nodeType": "YulIf",
															"src": "3139:144:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3299:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3310:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_RebaseOptions_$940__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3063:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3074:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3085:4:8",
														"type": ""
													}
												],
												"src": "2978:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3449:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3459:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3469:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3463:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3487:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3498:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3480:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3480:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3510:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3524:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3514:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3557:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3568:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3573:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3546:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3589:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3598:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3593:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3658:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3687:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3698:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3683:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3683:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3702:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3679:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3679:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3721:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3729:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3717:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3717:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3733:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3713:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3713:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3707:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3707:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3672:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3672:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3672:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3619:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3622:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3616:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3630:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3632:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3641:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3644:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3637:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3637:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3632:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3612:3:8",
																"statements": []
															},
															"src": "3608:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3782:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3811:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3822:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3807:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3807:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3831:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3803:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3803:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3836:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3796:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3796:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3796:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3763:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3766:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3760:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:13:8"
															},
															"nodeType": "YulIf",
															"src": "3757:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3857:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3873:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3892:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3900:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3888:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3888:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3909:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3905:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3905:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3884:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3884:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3869:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3869:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3865:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3857:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3418:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3429:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3440:4:8",
														"type": ""
													}
												],
												"src": "3328:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4104:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4121:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4155:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4166:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4171:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4144:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4194:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4205:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4190:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:8"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865205661756c74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4210:25:8",
																		"type": "",
																		"value": "Caller is not the Vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4183:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4183:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4183:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4245:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4257:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4268:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4245:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0849845f914f07adde3d3cbcfba0b83d83ccda38f916f4825f70ce179f185f56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4081:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4095:4:8",
														"type": ""
													}
												],
												"src": "3930:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4473:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4484:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4507:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4518:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4503:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4523:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4496:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4546:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4557:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4542:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4542:18:8"
																	},
																	{
																		"hexValue": "496e76616c6964206368616e676520696e20737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4562:26:8",
																		"type": "",
																		"value": "Invalid change in supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4535:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4598:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4610:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4621:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4598:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a405d266ddbd60e705d4f0f39fc0b4b7754f13b0a418911fb09a0ca2f14ca3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4433:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4447:4:8",
														"type": ""
													}
												],
												"src": "4282:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:175:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4826:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4837:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4819:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4819:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4860:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4871:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4856:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4856:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4849:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4849:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4899:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4910:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4895:18:8"
																	},
																	{
																		"hexValue": "4163636f756e7420686173206e6f74206f70746564206f7574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4915:27:8",
																		"type": "",
																		"value": "Account has not opted out"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4888:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4888:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4952:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4964:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4975:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4960:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4952:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_112bd22677775ff97cbd7ee72cb1a83f74dc695059c76ad87c6b357ae986d6c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4786:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4800:4:8",
														"type": ""
													}
												],
												"src": "4635:349:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5163:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5173:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5214:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5210:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5210:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5203:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5253:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5264:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5249:18:8"
																	},
																	{
																		"hexValue": "5472616e736665722067726561746572207468616e2062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5269:31:8",
																		"type": "",
																		"value": "Transfer greater than balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5242:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5242:59:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5310:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5310:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5140:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5154:4:8",
														"type": ""
													}
												],
												"src": "4989:353:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5521:176:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5538:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5549:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5531:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5531:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5572:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5583:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5588:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5561:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5561:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5561:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5622:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5607:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:18:8"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742074686520476f7665726e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5627:28:8",
																		"type": "",
																		"value": "Caller is not the Governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5600:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5665:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5677:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5688:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5665:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5498:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5512:4:8",
														"type": ""
													}
												],
												"src": "5347:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5876:160:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5893:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5886:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5943:2:8",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5966:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5977:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5962:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5962:18:8"
																	},
																	{
																		"hexValue": "4d617820737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5982:12:8",
																		"type": "",
																		"value": "Max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5955:40:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6004:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6016:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6027:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6012:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6004:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b0197ca1a0ca783775c6c4d4922c6e7ba472242093c308b3907998d1f28f1c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5853:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5867:4:8",
														"type": ""
													}
												],
												"src": "5702:334:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6215:176:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6225:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6266:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6277:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6262:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6282:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6255:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6305:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6316:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6301:18:8"
																	},
																	{
																		"hexValue": "4275726e2066726f6d20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6321:28:8",
																		"type": "",
																		"value": "Burn from the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6294:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6359:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6371:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6382:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6367:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6359:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5efea9b97bb0c0350137dfc11c89f12801f13899dde247b01e9b8116d87d3b9c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6192:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6206:4:8",
														"type": ""
													}
												],
												"src": "6041:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6570:176:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6587:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6598:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6580:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6632:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6617:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6617:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6610:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6610:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:8"
																	},
																	{
																		"hexValue": "4e657720476f7665726e6f722069732061646472657373283029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6676:28:8",
																		"type": "",
																		"value": "New Governor is address(0)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:56:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6714:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6726:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6737:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6722:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6722:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6714:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6547:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6561:4:8",
														"type": ""
													}
												],
												"src": "6396:350:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6925:236:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6942:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6953:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6935:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6935:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6935:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6987:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6992:2:8",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6965:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6965:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7015:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7026:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7011:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7011:18:8"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7031:34:8",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7086:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7097:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7082:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7082:18:8"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7102:16:8",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7075:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7075:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7075:44:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7128:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7140:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7151:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7136:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7128:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6902:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6916:4:8",
														"type": ""
													}
												],
												"src": "6751:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7340:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7357:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7368:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7391:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7402:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7387:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7407:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7380:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7380:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7430:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7441:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7426:18:8"
																	},
																	{
																		"hexValue": "4163636f756e7420686173206e6f74206f7074656420696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7446:26:8",
																		"type": "",
																		"value": "Account has not opted in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7419:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7419:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7419:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7482:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7494:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7505:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7482:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89eb3a9b2784e42fd3c77b73f3ef39a40aba009f80d03872e249eedd5ef0102a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7317:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7331:4:8",
														"type": ""
													}
												],
												"src": "7166:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7693:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7710:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7721:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7703:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7703:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7703:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7744:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7755:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7740:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7740:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7760:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7733:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7733:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7783:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7779:18:8"
																	},
																	{
																		"hexValue": "5265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7799:16:8",
																		"type": "",
																		"value": "Reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7772:44:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7825:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7837:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7848:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7825:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7670:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7684:4:8",
														"type": ""
													}
												],
												"src": "7519:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8036:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8053:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8064:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8046:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8046:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8046:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8087:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8098:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8083:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8083:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8103:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8076:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8126:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8137:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8122:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8122:18:8"
																	},
																	{
																		"hexValue": "52656d6f766520657863656564732062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8142:24:8",
																		"type": "",
																		"value": "Remove exceeds balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8115:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8115:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8115:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8176:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8188:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8199:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8184:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8184:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8176:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db4e28494f4730e74127f0f165a2684823f8d8099fc8529ee26a8be235d175bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8013:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8027:4:8",
														"type": ""
													}
												],
												"src": "7862:346:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8387:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8404:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8415:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8397:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8397:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8438:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8449:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8434:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8454:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8427:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8427:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8427:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:8"
																	},
																	{
																		"hexValue": "4d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8493:26:8",
																		"type": "",
																		"value": "Mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8466:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8529:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8541:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8552:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8537:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8537:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8529:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8364:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8378:4:8",
														"type": ""
													}
												],
												"src": "8213:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8740:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8757:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8768:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8750:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8791:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8802:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8787:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8787:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8807:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8780:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8780:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8780:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8830:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8841:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8826:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8826:18:8"
																	},
																	{
																		"hexValue": "5472616e7366657220746f207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8846:26:8",
																		"type": "",
																		"value": "Transfer to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8819:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8819:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8819:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8882:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8894:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8905:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8890:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8882:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8717:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8731:4:8",
														"type": ""
													}
												],
												"src": "8566:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9093:238:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9110:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9121:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9103:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9103:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9103:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9144:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9140:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9140:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9160:2:8",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9133:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9133:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9183:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9194:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9179:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9179:18:8"
																	},
																	{
																		"hexValue": "4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9199:34:8",
																		"type": "",
																		"value": "Only the pending Governor can co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9172:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9172:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9172:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9254:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9265:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9250:18:8"
																	},
																	{
																		"hexValue": "6d706c6574652074686520636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9270:18:8",
																		"type": "",
																		"value": "mplete the claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9243:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9298:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9310:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9321:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9306:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9306:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9298:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9070:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9084:4:8",
														"type": ""
													}
												],
												"src": "8919:412:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9510:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9527:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9538:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9520:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9520:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9520:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9561:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9572:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9557:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9577:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9550:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9611:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9596:18:8"
																	},
																	{
																		"hexValue": "43616e6e6f7420696e637265617365203020737570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9616:26:8",
																		"type": "",
																		"value": "Cannot increase 0 supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9589:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9589:54:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9652:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9664:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9675:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9660:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9660:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9652:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f64f34ea67d55cbad94432fe44d6e3d14d2f697f9122f608cd7c329d2fc6e799__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9487:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9501:4:8",
														"type": ""
													}
												],
												"src": "9336:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9790:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9800:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9812:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9823:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9808:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9800:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9842:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9853:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9835:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9835:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9835:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9759:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9770:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9781:4:8",
														"type": ""
													}
												],
												"src": "9689:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10000:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10010:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10022:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10033:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10018:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10018:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10010:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10052:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10063:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10045:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10045:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10090:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10101:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10106:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10079:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10079:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10079:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9961:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9972:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9980:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9991:4:8",
														"type": ""
													}
												],
												"src": "9871:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:178:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10285:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10297:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10293:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10285:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10327:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10338:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10365:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10376:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10361:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10361:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10381:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10354:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10354:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10354:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10408:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10419:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10404:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10404:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "10438:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10431:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10431:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10424:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10397:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10397:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10397:50:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10228:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10239:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10247:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10255:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10266:4:8",
														"type": ""
													}
												],
												"src": "10124:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10615:162:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10625:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10637:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10648:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10633:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10625:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10667:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10678:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10660:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10660:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10705:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10716:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10701:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10721:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10694:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10748:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10759:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10744:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10764:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10737:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10737:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10568:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10579:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10587:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10595:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10606:4:8",
														"type": ""
													}
												],
												"src": "10458:319:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10879:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10889:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10901:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10912:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10897:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10897:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10889:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10931:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10946:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10954:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10942:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10942:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10924:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10924:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10924:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10848:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10870:4:8",
														"type": ""
													}
												],
												"src": "10782:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11019:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11046:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11048:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11048:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11048:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11035:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11042:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11038:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11038:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11032:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:13:8"
															},
															"nodeType": "YulIf",
															"src": "11029:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11077:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11088:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11091:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11084:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11084:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11077:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11002:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11005:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11011:3:8",
														"type": ""
													}
												],
												"src": "10971:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11150:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11181:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11202:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11209:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11214:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11205:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11205:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11195:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11195:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11195:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11246:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11249:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11239:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11239:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11239:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11274:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11277:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11267:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11267:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11267:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11170:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11163:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11163:9:8"
															},
															"nodeType": "YulIf",
															"src": "11160:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11301:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11310:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11313:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11306:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11301:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11135:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11138:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11144:1:8",
														"type": ""
													}
												],
												"src": "11104:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11378:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11437:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11439:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11439:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11439:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11409:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11402:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11402:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11395:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11395:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11417:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11428:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11424:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11424:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11432:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11420:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11420:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11414:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11414:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11391:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11391:45:8"
															},
															"nodeType": "YulIf",
															"src": "11388:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11468:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11486:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11479:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11479:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11468:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11357:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11360:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11366:7:8",
														"type": ""
													}
												],
												"src": "11326:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11548:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11570:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11572:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11572:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11572:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11564:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11567:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11561:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11561:8:8"
															},
															"nodeType": "YulIf",
															"src": "11558:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11601:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11613:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11616:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11609:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11609:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11601:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11530:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11533:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11539:4:8",
														"type": ""
													}
												],
												"src": "11499:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11684:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11694:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11708:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11711:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11704:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11704:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11694:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11725:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11755:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11761:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11751:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11729:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11802:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11804:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11818:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11826:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11814:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11814:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11804:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11782:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11775:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11775:26:8"
															},
															"nodeType": "YulIf",
															"src": "11772:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11892:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11913:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11920:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11925:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11916:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11916:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11906:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11906:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11906:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11957:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11960:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11950:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11950:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11950:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11985:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11988:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11978:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11978:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11978:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11848:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11871:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11879:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11868:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11868:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11845:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11845:38:8"
															},
															"nodeType": "YulIf",
															"src": "11842:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11664:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11673:6:8",
														"type": ""
													}
												],
												"src": "11629:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12046:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12063:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12070:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12075:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12066:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12056:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12056:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12056:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12106:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12096:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12096:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12096:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12120:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12014:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12178:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12195:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12202:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12207:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12198:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12188:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12188:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12188:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12235:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12238:4:8",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12228:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12228:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12262:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12252:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12252:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12252:15:8"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "12146:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_enum$_RebaseOptions_$940__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0849845f914f07adde3d3cbcfba0b83d83ccda38f916f4825f70ce179f185f56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Caller is not the Vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0a405d266ddbd60e705d4f0f39fc0b4b7754f13b0a418911fb09a0ca2f14ca3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid change in supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_112bd22677775ff97cbd7ee72cb1a83f74dc695059c76ad87c6b357ae986d6c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Account has not opted out\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Transfer greater than balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not the Governor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b0197ca1a0ca783775c6c4d4922c6e7ba472242093c308b3907998d1f28f1c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5efea9b97bb0c0350137dfc11c89f12801f13899dde247b01e9b8116d87d3b9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Burn from the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"New Governor is address(0)\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_89eb3a9b2784e42fd3c77b73f3ef39a40aba009f80d03872e249eedd5ef0102a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Account has not opted in\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_db4e28494f4730e74127f0f165a2684823f8d8099fc8529ee26a8be235d175bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Remove exceeds balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Transfer to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Only the pending Governor can co\")\n        mstore(add(headStart, 96), \"mplete the claim\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f64f34ea67d55cbad94432fe44d6e3d14d2f697f9122f608cd7c329d2fc6e799__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot increase 0 supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636691cb3d1161011a578063a9059cbb116100ad578063dd62ed3e1161007c578063dd62ed3e14610418578063e5c4fffe14610451578063e696393a14610481578063f51b0fd41461048a578063f9854bfc1461049257600080fd5b8063a9059cbb146103e2578063c2376dff146103f5578063c7af3352146103fd578063d38bfff41461040557600080fd5b806395d89b41116100e957806395d89b411461039457806395ef84b91461039c5780639dc29fac146103bc578063a457c2d7146103cf57600080fd5b80636691cb3d1461036957806370a08231146103715780637a46a9c5146103845780637d0d66ff1461038c57600080fd5b80633950935111610192578063430bf08a11610161578063430bf08a146102fe578063456ee286146103115780635d36b19014610341578063609350cd1461034957600080fd5b806339509351146102bc57806339a7919f146102cf5780633eaaf86b146102e257806340c10f19146102eb57600080fd5b80630c340a24116101ce5780630c340a241461026c57806318160ddd1461028c57806323b872dd14610294578063313ce567146102a757600080fd5b806306fdde0314610200578063077f224a1461021e578063077f22b714610233578063095ea7b314610249575b600080fd5b6102086104ba565b6040516102159190611d76565b60405180910390f35b61023161022c366004611cb4565b61054c565b005b61023b6106fa565b604051908152602001610215565b61025c610257366004611c8a565b610713565b6040519015158152602001610215565b61027461077f565b6040516001600160a01b039091168152602001610215565b609a5461023b565b61025c6102a2366004611c4e565b610797565b60995460405160ff9091168152602001610215565b61025c6102ca366004611c8a565b6108e4565b6102316102dd366004611d35565b610969565b61023b609a5481565b6102316102f9366004611c8a565b610b72565b609c54610274906001600160a01b031681565b61033461031f366004611c00565b60a26020526000908152604090205460ff1681565b6040516102159190611d4e565b610231610baa565b61023b610357366004611c00565b60a16020526000908152604090205481565b61023b610c50565b61023b61037f366004611c00565b610c64565b609f5461023b565b609e5461023b565b610208610cba565b61023b6103aa366004611c00565b60a36020526000908152604090205481565b6102316103ca366004611c8a565b610cc9565b61025c6103dd366004611c8a565b610cfd565b61025c6103f0366004611c8a565b610de4565b610231610ec5565b61025c610fb9565b610231610413366004611c00565b610fea565b61023b610426366004611c1b565b6001600160a01b039182166000908152609b6020908152604080832093909416825291909152205490565b61046461045f366004611c00565b6110be565b604080519384526020840192909252151590820152606001610215565b61023b60a05481565b61023161110d565b6104a56104a0366004611c00565b611231565b60408051928352602083019190915201610215565b6060609780546104c990611e9a565b80601f01602080910402602001604051908101604052809291908181526020018280546104f590611e9a565b80156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b5050505050905090565b610554610fb9565b6105a55760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000060448201526064015b60405180910390fd5b600054610100900460ff16806105be575060005460ff16155b6106215760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161059c565b600054610100900460ff16158015610643576000805461ffff19166101011790555b6106b986868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a018190048102820181019092528881529250889150879081908401838280828437600092019190915250601292506112b5915050565b670de0b6b3a7640000609f55609c80546001600160a01b0319166001600160a01b03841617905580156106f2576000805461ff00191690555b505050505050565b6000633b9aca00609e5461070e9190611e42565b905090565b336000818152609b602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061076e9086815260200190565b60405180910390a350600192915050565b600061070e600080516020611f428339815191525490565b60006001600160a01b0383166107ea5760405162461bcd60e51b81526020600482015260186024820152775472616e7366657220746f207a65726f206164647265737360401b604482015260640161059c565b6107f384610c64565b8211156108425760405162461bcd60e51b815260206004820152601d60248201527f5472616e736665722067726561746572207468616e2062616c616e6365000000604482015260640161059c565b6001600160a01b0384166000908152609b6020908152604080832033845290915290205461087090836112f5565b6001600160a01b0385166000908152609b6020908152604080832033845290915290205561089f848484611308565b826001600160a01b0316846001600160a01b0316600080516020611f22833981519152846040516108d291815260200190565b60405180910390a35060019392505050565b336000908152609b602090815260408083206001600160a01b03861684529091528120546109129083611476565b336000818152609b602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910161076e565b609c546001600160a01b031633146109935760405162461bcd60e51b815260040161059c90611dcb565b600080516020611f02833981519152805460028114156109c55760405162461bcd60e51b815260040161059c90611e02565b600282556000609a5411610a1b5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420696e637265617365203020737570706c790000000000000000604482015260640161059c565b82609a541415610a7157609a54609e54609f5460408051938452602084019290925282820152517f41645eb819d3011b13f97696a8109d14bfcddfaca7d063ec0564d62a3e2572359181900360600190a1610b6a565b6001600160801b038311610a855782610a8e565b6001600160801b035b609a81905560a054610aac91610aa3916112f5565b609e5490611482565b609f819055610afd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206368616e676520696e20737570706c790000000000000000604482015260640161059c565b610b2060a054610b1a609f54609e5461148290919063ffffffff16565b90611476565b609a819055609e54609f5460408051938452602084019290925282820152517f41645eb819d3011b13f97696a8109d14bfcddfaca7d063ec0564d62a3e2572359181900360600190a15b506001905550565b609c546001600160a01b03163314610b9c5760405162461bcd60e51b815260040161059c90611dcb565b610ba682826114ab565b5050565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b031614610c455760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b606482015260840161059c565b610c4e3361164c565b565b6000633b9aca00609f5461070e9190611e42565b6001600160a01b0381166000908152609d6020526040812054610c8957506000919050565b610cb4610c9583611710565b6001600160a01b0384166000908152609d602052604090205490611482565b92915050565b6060609880546104c990611e9a565b609c546001600160a01b03163314610cf35760405162461bcd60e51b815260040161059c90611dcb565b610ba68282611757565b336000908152609b602090815260408083206001600160a01b0386168452909152812054808310610d5157336000908152609b602090815260408083206001600160a01b0388168452909152812055610d80565b610d5b81846112f5565b336000908152609b602090815260408083206001600160a01b03891684529091529020555b336000818152609b602090815260408083206001600160a01b038916808552908352928190205490519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b60006001600160a01b038316610e375760405162461bcd60e51b81526020600482015260186024820152775472616e7366657220746f207a65726f206164647265737360401b604482015260640161059c565b610e4033610c64565b821115610e8f5760405162461bcd60e51b815260206004820152601d60248201527f5472616e736665722067726561746572207468616e2062616c616e6365000000604482015260640161059c565b610e9a338484611308565b6040518281526001600160a01b038416903390600080516020611f228339815191529060200161076e565b600080516020611f0283398151915280546002811415610ef75760405162461bcd60e51b815260040161059c90611e02565b60028255610f0433611960565b15610f515760405162461bcd60e51b815260206004820152601860248201527f4163636f756e7420686173206e6f74206f7074656420696e0000000000000000604482015260640161059c565b610f66610f5d33610c64565b60a05490611476565b60a055609f5433600090815260a16020908152604080832093909355609d90522054609e54610f94916112f5565b609e555033600090815260a260205260409020805460ff191660019081179091559055565b6000610fd1600080516020611f428339815191525490565b6001600160a01b0316336001600160a01b031614905090565b610ff2610fb9565b61103e5760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604482015260640161059c565b611066817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b0316611086600080516020611f428339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166000908152609d6020526040812054819081906110e485611710565b6001600160a01b0395909516600090815260a36020526040902054909560019091149350915050565b600080516020611f028339815191528054600281141561113f5760405162461bcd60e51b815260040161059c90611e02565b6002825561114c33611960565b6111985760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420686173206e6f74206f70746564206f757400000000000000604482015260640161059c565b60006111c86111a633611710565b609f54336000908152609d60205260409020546111c2916119d4565b906119e0565b90506111df6111d633610c64565b60a054906112f5565b60a055336000908152609d60205260409020819055609e546112019082611476565b609e55505033600090815260a260209081526040808320805460ff1916600217905560a190915281205560019055565b600080600061123f84611710565b9050806b033b2e3c9fd0803ce80000001415611275576001600160a01b039093166000908152609d602052604090205493915050565b6001600160a01b0384166000908152609d602052604090205461129d90633b9aca0090611e42565b6112ab633b9aca0083611e42565b9250925050915091565b82516112c8906097906020860190611b07565b5081516112dc906098906020850190611b07565b506099805460ff191660ff929092169190911790555050565b60006113018284611e83565b9392505050565b600061131383611960565b9050600061132085611960565b9050600061133761133086611710565b85906119ec565b9050600061134e61134788611710565b86906119ec565b90506113bf816040518060400160405280601f81526020017f5472616e7366657220616d6f756e7420657863656564732062616c616e636500815250609d60008b6001600160a01b03166001600160a01b0316815260200190815260200160002054611a019092919063ffffffff16565b6001600160a01b038089166000908152609d602052604080822093909355908816815220546113ee9083611476565b6001600160a01b0387166000908152609d6020526040902055838015611412575082155b1561143c5760a0546114249086611476565b60a055609e5461143490826112f5565b609e5561146d565b831580156114475750825b1561146d5760a05461145990866112f5565b60a055609e546114699083611476565b609e555b50505050505050565b60006113018284611e2a565b60008061149784670de0b6b3a76400006119d4565b90506114a381846119e0565b949350505050565b600080516020611f02833981519152805460028114156114dd5760405162461bcd60e51b815260040161059c90611e02565b600282556001600160a01b0384166115375760405162461bcd60e51b815260206004820152601860248201527f4d696e7420746f20746865207a65726f20616464726573730000000000000000604482015260640161059c565b600061154285611960565b9050600061155261134787611710565b6001600160a01b0387166000908152609d60205260409020549091506115789082611476565b6001600160a01b0387166000908152609d602052604090205581156115ac5760a0546115a49086611476565b60a0556115bd565b609e546115b99082611476565b609e555b609a546115ca9086611476565b609a8190556001600160801b03116116115760405162461bcd60e51b815260206004820152600a6024820152694d617820737570706c7960b01b604482015260640161059c565b6040518581526001600160a01b03871690600090600080516020611f228339815191529060200160405180910390a350506001825550505050565b6001600160a01b0381166116a25760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f722069732061646472657373283029000000000000604482015260640161059c565b806001600160a01b03166116c2600080516020611f428339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a361170d81600080516020611f4283398151915255565b50565b6001600160a01b038116600090815260a160205260408120541561174a57506001600160a01b0316600090815260a1602052604090205490565b5050609f5490565b919050565b600080516020611f02833981519152805460028114156117895760405162461bcd60e51b815260040161059c90611e02565b600282556001600160a01b0384166117e35760405162461bcd60e51b815260206004820152601a60248201527f4275726e2066726f6d20746865207a65726f2061646472657373000000000000604482015260640161059c565b826117ed57611957565b60006117f885611960565b9050600061180861134787611710565b6001600160a01b0387166000908152609d60205260409020549091508082148061183b575081611839600183611e83565b145b1561185e576001600160a01b0387166000908152609d60205260408120556118e8565b818111156118a7576001600160a01b0387166000908152609d602052604090205461188990836112f5565b6001600160a01b0388166000908152609d60205260409020556118e8565b60405162461bcd60e51b815260206004820152601660248201527552656d6f766520657863656564732062616c616e636560501b604482015260640161059c565b82156119035760a0546118fb90876112f5565b60a055611914565b609e5461191090836112f5565b609e555b609a5461192190876112f5565b609a556040518681526000906001600160a01b03891690600080516020611f228339815191529060200160405180910390a35050505b50600190555050565b60006001600160a01b0382163b1580159081906119a757506001600160a01b038316600090815260a2602052604081205460ff1660028111156119a5576119a5611eeb565b145b156119b5576119b583611a2d565b50506001600160a01b0316600090815260a16020526040902054151590565b60006113018284611e64565b60006113018284611e42565b60006113018383670de0b6b3a7640000611ae5565b60008184841115611a255760405162461bcd60e51b815260040161059c9190611d76565b505050900390565b6001600160a01b038116600090815260a1602052604090205461170d576001600160a01b0381166000908152609d6020526040902054611a8f576001600160a01b0316600090815260a1602052604090206b033b2e3c9fd0803ce80000009055565b609f546001600160a01b038216600090815260a16020526040902055611ab7610f5d82610c64565b60a0556001600160a01b0381166000908152609d6020526040902054609e54611adf916112f5565b609e5550565b600080611af285856119d4565b9050611afe81846119e0565b95945050505050565b828054611b1390611e9a565b90600052602060002090601f016020900481019282611b355760008555611b7b565b82601f10611b4e57805160ff1916838001178555611b7b565b82800160010185558215611b7b579182015b82811115611b7b578251825591602001919060010190611b60565b50611b87929150611b8b565b5090565b5b80821115611b875760008155600101611b8c565b80356001600160a01b038116811461175257600080fd5b60008083601f840112611bc957600080fd5b50813567ffffffffffffffff811115611be157600080fd5b602083019150836020828501011115611bf957600080fd5b9250929050565b600060208284031215611c1257600080fd5b61130182611ba0565b60008060408385031215611c2e57600080fd5b611c3783611ba0565b9150611c4560208401611ba0565b90509250929050565b600080600060608486031215611c6357600080fd5b611c6c84611ba0565b9250611c7a60208501611ba0565b9150604084013590509250925092565b60008060408385031215611c9d57600080fd5b611ca683611ba0565b946020939093013593505050565b600080600080600060608688031215611ccc57600080fd5b853567ffffffffffffffff80821115611ce457600080fd5b611cf089838a01611bb7565b90975095506020880135915080821115611d0957600080fd5b50611d1688828901611bb7565b9094509250611d29905060408701611ba0565b90509295509295909350565b600060208284031215611d4757600080fd5b5035919050565b6020810160038310611d7057634e487b7160e01b600052602160045260246000fd5b91905290565b600060208083528351808285015260005b81811015611da357858101830151858201604001528201611d87565b81811115611db5576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f43616c6c6572206973206e6f7420746865205661756c74000000000000000000604082015260600190565b6020808252600e908201526d1499595b9d1c985b9d0818d85b1b60921b604082015260600190565b60008219821115611e3d57611e3d611ed5565b500190565b600082611e5f57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611e7e57611e7e611ed5565b500290565b600082821015611e9557611e95611ed5565b500390565b600181811c90821680611eae57607f821691505b60208210811415611ecf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfe53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220a7d2b0a458629bce519f1195e8512c41f1a9060b4a750fd0c5288cb33a0b583464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6691CB3D GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xE5C4FFFE EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xE696393A EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF51B0FD4 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xF9854BFC EQ PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xC2376DFF EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x95EF84B9 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6691CB3D EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x7A46A9C5 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x7D0D66FF EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x430BF08A GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x430BF08A EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x456EE286 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x609350CD EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x39A7919F EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC340A24 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0xC340A24 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x77F22B7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x249 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x274 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x23B JUMP JUMPDEST PUSH2 0x25C PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH1 0x99 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x274 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x231 PUSH2 0xBAA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x23B JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x23B JUMP JUMPDEST PUSH2 0x208 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH2 0x25C PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x231 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x25C PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x23B PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C00 JUMP JUMPDEST PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x97 DUP1 SLOAD PUSH2 0x4C9 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F5 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x542 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x517 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x542 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x525 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x554 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x5BE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x6B9 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP3 POP DUP9 SWAP2 POP DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x12 SWAP3 POP PUSH2 0x12B5 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x9F SSTORE PUSH1 0x9C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3B9ACA00 PUSH1 0x9E SLOAD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x76E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x5472616E7366657220746F207A65726F2061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0x7F3 DUP5 PUSH2 0xC64 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722067726561746572207468616E2062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x870 SWAP1 DUP4 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x89F DUP5 DUP5 DUP5 PUSH2 0x1308 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x8D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x912 SWAP1 DUP4 PUSH2 0x1476 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH1 0x0 PUSH1 0x9A SLOAD GT PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420696E637265617365203020737570706C790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP3 PUSH1 0x9A SLOAD EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x9A SLOAD PUSH1 0x9E SLOAD PUSH1 0x9F SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0x41645EB819D3011B13F97696A8109D14BFCDDFACA7D063EC0564D62A3E257235 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 GT PUSH2 0xA85 JUMPI DUP3 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0xA0 SLOAD PUSH2 0xAAC SWAP2 PUSH2 0xAA3 SWAP2 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SLOAD SWAP1 PUSH2 0x1482 JUMP JUMPDEST PUSH1 0x9F DUP2 SWAP1 SSTORE PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206368616E676520696E20737570706C790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xB20 PUSH1 0xA0 SLOAD PUSH2 0xB1A PUSH1 0x9F SLOAD PUSH1 0x9E SLOAD PUSH2 0x1482 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0x9E SLOAD PUSH1 0x9F SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD PUSH32 0x41645EB819D3011B13F97696A8109D14BFCDDFACA7D063EC0564D62A3E257235 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 JUMPDEST POP PUSH1 0x1 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xBA6 DUP3 DUP3 PUSH2 0x14AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xC4E CALLER PUSH2 0x164C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0x3B9ACA00 PUSH1 0x9F SLOAD PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xC89 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB4 PUSH2 0xC95 DUP4 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1482 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x98 DUP1 SLOAD PUSH2 0x4C9 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xBA6 DUP3 DUP3 PUSH2 0x1757 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0xD51 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0xD80 JUMP JUMPDEST PUSH2 0xD5B DUP2 DUP5 PUSH2 0x12F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x5472616E7366657220746F207A65726F2061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE40 CALLER PUSH2 0xC64 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665722067726561746572207468616E2062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE9A CALLER DUP5 DUP5 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH2 0xF04 CALLER PUSH2 0x1960 JUMP JUMPDEST ISZERO PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420686173206E6F74206F7074656420696E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0xF66 PUSH2 0xF5D CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH1 0xA0 SLOAD SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9F SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9D SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x9E SLOAD PUSH2 0xF94 SWAP2 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF2 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x103E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH2 0x1066 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1086 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x10E4 DUP6 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP6 PUSH1 0x1 SWAP1 SWAP2 EQ SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH2 0x114C CALLER PUSH2 0x1960 JUMP JUMPDEST PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420686173206E6F74206F70746564206F757400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 PUSH2 0x11A6 CALLER PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x9F SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11C2 SWAP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 PUSH2 0x19E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x11DF PUSH2 0x11D6 CALLER PUSH2 0xC64 JUMP JUMPDEST PUSH1 0xA0 SLOAD SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xA0 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x9E SLOAD PUSH2 0x1201 SWAP1 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9E SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0xA1 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x123F DUP5 PUSH2 0x1710 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 EQ ISZERO PUSH2 0x1275 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x129D SWAP1 PUSH4 0x3B9ACA00 SWAP1 PUSH2 0x1E42 JUMP JUMPDEST PUSH2 0x12AB PUSH4 0x3B9ACA00 DUP4 PUSH2 0x1E42 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 MLOAD PUSH2 0x12C8 SWAP1 PUSH1 0x97 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x12DC SWAP1 PUSH1 0x98 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST POP PUSH1 0x99 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP4 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1320 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1337 PUSH2 0x1330 DUP7 PUSH2 0x1710 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x134E PUSH2 0x1347 DUP9 PUSH2 0x1710 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH2 0x13BF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5472616E7366657220616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x9D PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A01 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x13EE SWAP1 DUP4 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP4 DUP1 ISZERO PUSH2 0x1412 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x143C JUMPI PUSH1 0xA0 SLOAD PUSH2 0x1424 SWAP1 DUP7 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9E SLOAD PUSH2 0x1434 SWAP1 DUP3 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE PUSH2 0x146D JUMP JUMPDEST DUP4 ISZERO DUP1 ISZERO PUSH2 0x1447 JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x146D JUMPI PUSH1 0xA0 SLOAD PUSH2 0x1459 SWAP1 DUP7 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9E SLOAD PUSH2 0x1469 SWAP1 DUP4 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1497 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x14A3 DUP2 DUP5 PUSH2 0x19E0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E7420746F20746865207A65726F20616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1542 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1552 PUSH2 0x1347 DUP8 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1578 SWAP1 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 ISZERO PUSH2 0x15AC JUMPI PUSH1 0xA0 SLOAD PUSH2 0x15A4 SWAP1 DUP7 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x15B9 SWAP1 DUP3 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x15CA SWAP1 DUP7 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB GT PUSH2 0x1611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4D617820737570706C79 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16C2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x170D DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x174A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x9F SLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x1789 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x2 DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x17E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E2066726F6D20746865207A65726F2061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP3 PUSH2 0x17ED JUMPI PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F8 DUP6 PUSH2 0x1960 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1808 PUSH2 0x1347 DUP8 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ DUP1 PUSH2 0x183B JUMPI POP DUP2 PUSH2 0x1839 PUSH1 0x1 DUP4 PUSH2 0x1E83 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x185E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x18E8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x18A7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1889 SWAP1 DUP4 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x52656D6F766520657863656564732062616C616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x59C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1903 JUMPI PUSH1 0xA0 SLOAD PUSH2 0x18FB SWAP1 DUP8 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH2 0x1914 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0x1910 SWAP1 DUP4 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x1921 SWAP1 DUP8 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9A SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMPDEST POP PUSH1 0x1 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 DUP2 SWAP1 PUSH2 0x19A7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A5 PUSH2 0x1EEB JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x19B5 JUMPI PUSH2 0x19B5 DUP4 PUSH2 0x1A2D JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP3 DUP5 PUSH2 0x1E42 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1301 DUP4 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1AE5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x1D76 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x170D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A8F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH12 0x33B2E3C9FD0803CE8000000 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1AB7 PUSH2 0xF5D DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x9E SLOAD PUSH2 0x1ADF SWAP2 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x9E SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AF2 DUP6 DUP6 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AFE DUP2 DUP5 PUSH2 0x19E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1B13 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1B7B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1B4E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1B7B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B7B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B7B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B60 JUMP JUMPDEST POP PUSH2 0x1B87 SWAP3 SWAP2 POP PUSH2 0x1B8B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B87 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B8C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C37 DUP4 PUSH2 0x1BA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 PUSH1 0x20 DUP5 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6C DUP5 PUSH2 0x1BA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C7A PUSH1 0x20 DUP6 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA6 DUP4 PUSH2 0x1BA0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF0 DUP10 DUP4 DUP11 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D16 DUP9 DUP3 DUP10 ADD PUSH2 0x1BB7 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1D29 SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x1BA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x1D70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DA3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1D87 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865205661756C74000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1499595B9D1C985B9D0818D85B1B PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1E3D JUMPI PUSH2 0x1E3D PUSH2 0x1ED5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7E PUSH2 0x1ED5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E95 JUMPI PUSH2 0x1E95 PUSH2 0x1ED5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EAE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1ECF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MSTORE8 0xBF TIMESTAMP RETURNDATACOPY BASEFEE 0xED SWAP1 0xE9 PUSH30 0x2AB0EBAB13B2A235A6BFBE9C321847D5C175333AC4535DDF252AD1BE2C8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH28 0xEA13895FA79D2831E0A9E28EDEDE30099005A50D652D8957CF8A607E 0xE6 0xCA 0x4A LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xD2 0xB0 LOG4 PC PUSH3 0x9BCE51 SWAP16 GT SWAP6 0xE8 MLOAD 0x2C COINBASE CALL 0xA9 MOD SIGNEXTEND 0x4A PUSH22 0xFD0C5288CB33A0B583464736F6C6343000807003300 ",
							"sourceMap": "863:19667:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:83:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2039:329:4;;;;;;:::i;:::-;;:::i;:::-;;3044:121;;;:::i;:::-;;;9835:25:8;;;9823:2;9808:18;3044:121:4;9689:177:8;10191:251:4;;;;;;:::i;:::-;;:::i;:::-;;;2951:14:8;;2944:22;2926:41;;2914:2;2899:18;10191:251:4;2786:187:8;1674:87:3;;;:::i;:::-;;;-1:-1:-1;;;;;2742:32:8;;;2724:51;;2712:2;2697:18;1674:87:3;2578:203:8;2636:100:4;2716:12;;2636:100;;6607:514;;;;;;:::i;:::-;;:::i;1946:83:6:-;2012:9;;1946:83;;2012:9;;;;10924:36:8;;10912:2;10897:18;1946:83:6;10782:184:8;10841:333:4;;;;;;:::i;:::-;;:::i;19487:1040::-;;;;;;:::i;:::-;;:::i;1319:27::-;;;;;;12037:111;;;;;;:::i;:::-;;:::i;1427:40::-;;;;;-1:-1:-1;;;;;1427:40:4;;;1867:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;4839:223:3:-;;;:::i;1799:61:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;2817:137;;;:::i;3817:277::-;;;;;;:::i;:::-;;:::i;3247:122::-;3337:24;;3247:122;;3460:106;3542:16;;3460:106;;1296:87:6;;;:::i;1926:45:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;13423:107;;;;;;:::i;:::-;;:::i;11459:497::-;;;;;;:::i;:::-;;:::i;5909:433::-;;;;;;:::i;:::-;;:::i;18571:667::-;;;:::i;2664:100:3:-;;;:::i;4491:194::-;;;;;;:::i;:::-;;:::i;9304:188:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;9455:19:4;;;9423:7;9455:19;;;:11;:19;;;;;;;;:29;;;;;;;;;;;;;9304:188;5362:336;;;;;;:::i;:::-;;:::i;:::-;;;;10320:25:8;;;10376:2;10361:18;;10354:34;;;;10431:14;10424:22;10404:18;;;10397:50;10308:2;10293:18;5362:336:4;10124:329:8;1760:32:4;;;;;;17582:901;;;:::i;4418:671::-;;;;;;:::i;:::-;;:::i;:::-;;;;10045:25:8;;;10101:2;10086:18;;10079:34;;;;10018:18;4418:671:4;9871:248:8;1094:83:6;1131:13;1164:5;1157:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:83;:::o;2039:329:4:-;2510:12:3;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:3;;5549:2:8;2502:51:3;;;5531:21:8;5588:2;5568:18;;;5561:30;5627:28;5607:18;;;5600:56;5673:18;;2502:51:3;;;;;;;;;508:12:5::1;::::0;::::1;::::0;::::1;;;::::0;:28:::1;;-1:-1:-1::0;525:11:5::1;::::0;::::1;;524:12;508:28;486:124;;;::::0;-1:-1:-1;;;486:124:5;;6953:2:8;486:124:5::1;::::0;::::1;6935:21:8::0;6992:2;6972:18;;;6965:30;7031:34;7011:18;;;7004:62;-1:-1:-1;;;7082:18:8;;;7075:44;7136:19;;486:124:5::1;6751:410:8::0;486:124:5::1;623:19;646:12:::0;::::1;::::0;::::1;;;645:13;669:99:::0;::::1;;;704:12;:19:::0;;-1:-1:-1;;738:18:5;;;;;669:99:::1;2215:64:4::2;2254:8;;2215:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;2215:64:4::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;-1:-1:-1;2264:10:4;;-1:-1:-1;2264:10:4;;;;2215:64;::::2;2264:10:::0;;;;2215:64;::::2;;::::0;::::2;::::0;;;;-1:-1:-1;2276:2:4::2;::::0;-1:-1:-1;2215:38:4::2;::::0;-1:-1:-1;;2215:64:4:i:2;:::-;2317:4;2290:24;:31:::0;2332:12:::2;:28:::0;;-1:-1:-1;;;;;;2332:28:4::2;-1:-1:-1::0;;;;;2332:28:4;::::2;;::::0;;794:67:5;::::1;;;844:5;829:20:::0;;-1:-1:-1;;829:20:5::1;::::0;;794:67:::1;475:393;2039:329:4::0;;;;;:::o;3044:121::-;3092:7;2027:3;3119:16;;:38;;;;:::i;:::-;3112:45;;3044:121;:::o;10191:251::-;10328:10;10294:4;10316:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10316:33:4;;;;;;;;;;:42;;;10374:38;10294:4;;10316:33;;10374:38;;;;10352:6;9835:25:8;;9823:2;9808:18;;9689:177;10374:38:4;;;;;;;;-1:-1:-1;10430:4:4;10191:251;;;;:::o;1674:87:3:-;1715:7;1742:11;-1:-1:-1;;;;;;;;;;;2006:15:3;;1845:194;6607:514:4;6732:4;-1:-1:-1;;;;;6757:17:4;;6749:54;;;;-1:-1:-1;;;6749:54:4;;8768:2:8;6749:54:4;;;8750:21:8;8807:2;8787:18;;;8780:30;-1:-1:-1;;;8826:18:8;;;8819:54;8890:18;;6749:54:4;8566:348:8;6749:54:4;6832:16;6842:5;6832:9;:16::i;:::-;6822:6;:26;;6814:68;;;;-1:-1:-1;;;6814:68:4;;5191:2:8;6814:68:4;;;5173:21:8;5230:2;5210:18;;;5203:30;5269:31;5249:18;;;5242:59;5318:18;;6814:68:4;4989:353:8;6814:68:4;-1:-1:-1;;;;;6928:18:4;;;;;;:11;:18;;;;;;;;6947:10;6928:30;;;;;;;;:66;;6977:6;6928:34;:66::i;:::-;-1:-1:-1;;;;;6895:18:4;;;;;;:11;:18;;;;;;;;6914:10;6895:30;;;;;;;:99;7007:36;6907:5;7031:3;7036:6;7007:16;:36::i;:::-;7077:3;-1:-1:-1;;;;;7061:28:4;7070:5;-1:-1:-1;;;;;7061:28:4;-1:-1:-1;;;;;;;;;;;7082:6:4;7061:28;;;;9835:25:8;;9823:2;9808:18;;9689:177;7061:28:4;;;;;;;;-1:-1:-1;7109:4:4;6607:514;;;;;:::o;10841:333::-;11011:10;10941:4;10999:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10999:33:4;;;;;;;;;;:64;;11051:11;10999:51;:64::i;:::-;10975:10;10963:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;10963:33:4;;;;;;;;;;;;:100;;;11079:65;9835:25:8;;;10963:33:4;;11079:65;;9808:18:8;11079:65:4;9689:177:8;19487:1040:4;2494:12;;-1:-1:-1;;;;;2494:12:4;2510:10;2494:26;2486:62;;;;-1:-1:-1;;;2486:62:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3499:15:3;;1101:1:::1;3617:27:::0;::::1;;3609:54;;;;-1:-1:-1::0;;;3609:54:3::1;;;;;;;:::i;:::-;3782:8;3772;3765:26;19632:1:4::2;19617:12;;:16;19609:53;;;::::0;-1:-1:-1;;;19609:53:4;;9538:2:8;19609:53:4::2;::::0;::::2;9520:21:8::0;9577:2;9557:18;;;9550:30;9616:26;9596:18;;;9589:54;9660:18;;19609:53:4::2;9336:348:8::0;19609:53:4::2;19695:15;19679:12;;:31;19675:239;;;19776:12;::::0;19807:16:::2;::::0;19842:24:::2;::::0;19732:149:::2;::::0;;10660:25:8;;;10716:2;10701:18;;10694:34;;;;10744:18;;;10737:34;19732:149:4;::::2;::::0;;;;10648:2:8;19732:149:4;;::::2;19896:7;;19675:239;-1:-1:-1::0;;;;;19941:28:4;::::2;:85;;20011:15;19941:85;;;-1:-1:-1::0;;;;;19941:85:4::2;19926:12;:100:::0;;;20127:17:::2;::::0;20066:90:::2;::::0;20110:35:::2;::::0;:16:::2;:35::i;:::-;20066:16;::::0;;:29:::2;:90::i;:::-;20039:24;:117:::0;;;20169:65:::2;;;::::0;-1:-1:-1;;;20169:65:4;;4484:2:8;20169:65:4::2;::::0;::::2;4466:21:8::0;4523:2;4503:18;;;4496:30;4562:26;4542:18;;;4535:54;4606:18;;20169:65:4::2;4282:348:8::0;20169:65:4::2;20262:106;20350:17;;20262:69;20306:24;;20262:16;;:43;;:69;;;;:::i;:::-;:87:::0;::::2;:106::i;:::-;20247:12;:121:::0;;;20453:16:::2;::::0;20484:24:::2;::::0;20386:133:::2;::::0;;10660:25:8;;;10716:2;10701:18;;10694:34;;;;10744:18;;;10737:34;20386:133:4;::::2;::::0;;;;10648:2:8;20386:133:4;;::::2;3814:1:3;-1:-1:-1::0;4003:12:3::1;3986:30:::0;;-1:-1:-1;19487:1040:4:o;12037:111::-;2494:12;;-1:-1:-1;;;;;2494:12:4;2510:10;2494:26;2486:62;;;;-1:-1:-1;;;2486:62:4;;;;;;;:::i;:::-;12116:24:::1;12122:8;12132:7;12116:5;:24::i;:::-;12037:111:::0;;:::o;4839:223:3:-;727:66;2338:15;-1:-1:-1;;;;;4908:32:3;:10;-1:-1:-1;;;;;4908:32:3;;4886:130;;;;-1:-1:-1;;;4886:130:3;;9121:2:8;4886:130:3;;;9103:21:8;9160:2;9140:18;;;9133:30;9199:34;9179:18;;;9172:62;-1:-1:-1;;;9250:18:8;;;9243:46;9306:19;;4886:130:3;8919:412:8;4886:130:3;5027:27;5043:10;5027:15;:27::i;:::-;4839:223::o;2817:137:4:-;2873:7;2027:3;2900:24;;:46;;;;:::i;3817:277::-;-1:-1:-1;;;;;3949:25:4;;3920:7;3949:25;;;:15;:25;;;;;;3945:44;;-1:-1:-1;3988:1:4;;3817:277;-1:-1:-1;3817:277:4:o;3945:44::-;4020:66;4059:26;4076:8;4059:16;:26::i;:::-;-1:-1:-1;;;;;4020:25:4;;;;;;:15;:25;;;;;;;:38;:66::i;:::-;4000:86;3817:277;-1:-1:-1;;3817:277:4:o;1296:87:6:-;1335:13;1368:7;1361:14;;;;;:::i;13423:107:4:-;2494:12;;-1:-1:-1;;;;;2494:12:4;2510:10;2494:26;2486:62;;;;-1:-1:-1;;;2486:62:4;;;;;;;:::i;:::-;13500:22:::1;13506:7;13515:6;13500:5;:22::i;11459:497::-:0;11617:10;11564:4;11605:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;11605:33:4;;;;;;;;;;11653:28;;;11649:197;;11710:10;11734:1;11698:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;11698:33:4;;;;;;;;;:37;11649:197;;;11804:30;:8;11817:16;11804:12;:30::i;:::-;11780:10;11768:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;11768:33:4;;;;;;;;;:66;11649:197;11870:10;11892:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;11861:65:4;;11892:33;;;;;;;;;;;11861:65;;9835:25:8;;;11861:65:4;;11870:10;11861:65;;9808:18:8;11861:65:4;;;;;;;-1:-1:-1;11944:4:4;;11459:497;-1:-1:-1;;;11459:497:4:o;5909:433::-;6008:4;-1:-1:-1;;;;;6038:17:4;;6030:54;;;;-1:-1:-1;;;6030:54:4;;8768:2:8;6030:54:4;;;8750:21:8;8807:2;8787:18;;;8780:30;-1:-1:-1;;;8826:18:8;;;8819:54;8890:18;;6030:54:4;8566:348:8;6030:54:4;6127:21;6137:10;6127:9;:21::i;:::-;6117:6;:31;;6095:110;;;;-1:-1:-1;;;6095:110:4;;5191:2:8;6095:110:4;;;5173:21:8;5230:2;5210:18;;;5203:30;5269:31;5249:18;;;5242:59;5318:18;;6095:110:4;4989:353:8;6095:110:4;6218:41;6235:10;6247:3;6252:6;6218:16;:41::i;:::-;6277:33;;9835:25:8;;;-1:-1:-1;;;;;6277:33:4;;;6286:10;;-1:-1:-1;;;;;;;;;;;6277:33:4;9823:2:8;9808:18;6277:33:4;9689:177:8;18571:667:4;-1:-1:-1;;;;;;;;;;;3499:15:3;;1101:1;3617:27;;;3609:54;;;;-1:-1:-1;;;3609:54:3;;;;;;;:::i;:::-;3782:8;3772;3765:26;18635:33:4::1;18657:10;18635:21;:33::i;:::-;18634:34;18626:71;;;::::0;-1:-1:-1;;;18626:71:4;;7368:2:8;18626:71:4::1;::::0;::::1;7350:21:8::0;7407:2;7387:18;;;7380:30;7446:26;7426:18;;;7419:54;7490:18;;18626:71:4::1;7166:348:8::0;18626:71:4::1;18771:44;18793:21;18803:10;18793:9;:21::i;:::-;18771:17;::::0;;:21:::1;:44::i;:::-;18751:17;:64:::0;18907:24:::1;::::0;18893:10:::1;18866:38;::::0;;;:26:::1;:38;::::0;;;;;;;:65;;;;19093:15:::1;:27:::0;;;;19072:16:::1;::::0;:49:::1;::::0;:20:::1;:49::i;:::-;19053:16;:68:::0;-1:-1:-1;19196:10:4::1;19184:23;::::0;;;:11:::1;:23;::::0;;;;:46;;-1:-1:-1;;19184:46:4::1;19210:20;19184:46:::0;;::::1;::::0;;;3986:30:3;;18571:667:4:o;2664:100:3:-;2707:4;2745:11;-1:-1:-1;;;;;;;;;;;2006:15:3;;1845:194;2745:11;-1:-1:-1;;;;;2731:25:3;:10;-1:-1:-1;;;;;2731:25:3;;2724:32;;2664:100;:::o;4491:194::-;2510:12;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:3;;5549:2:8;2502:51:3;;;5531:21:8;5588:2;5568:18;;;5561:30;5627:28;5607:18;;;5600:56;5673:18;;2502:51:3;5347:350:8;2502:51:3;4574:33:::1;4594:12;727:66:::0;4189:29;4042:194;4574:33:::1;4664:12;-1:-1:-1::0;;;;;4623:54:3::1;4651:11;-1:-1:-1::0;;;;;;;;;;;2006:15:3;;1845:194;4651:11:::1;-1:-1:-1::0;;;;;4623:54:3::1;;;;;;;;;;;4491:194:::0;:::o;5362:336:4:-;-1:-1:-1;;;;;5573:25:4;;5475:7;5573:25;;;:15;:25;;;;;;5475:7;;;;5613:26;5589:8;5613:16;:26::i;:::-;-1:-1:-1;;;;;5654:20:4;;;;;;;;:10;:20;;;;;;5551:139;;5678:1;5654:25;;;;-1:-1:-1;5362:336:4;-1:-1:-1;;5362:336:4:o;17582:901::-;-1:-1:-1;;;;;;;;;;;3499:15:3;;1101:1;3617:27;;;3609:54;;;;-1:-1:-1;;;3609:54:3;;;;;;;:::i;:::-;3782:8;3772;3765:26;17644:33:4::1;17666:10;17644:21;:33::i;:::-;17636:71;;;::::0;-1:-1:-1;;;17636:71:4;;4837:2:8;17636:71:4::1;::::0;::::1;4819:21:8::0;4876:2;4856:18;;;4849:30;4915:27;4895:18;;;4888:55;4960:18;;17636:71:4::1;4635:349:8::0;17636:71:4::1;17798:24;17825:119;17915:28;17932:10;17915:16;:28::i;:::-;17871:24;::::0;17841:10:::1;17825:27;::::0;;;:15:::1;:27;::::0;;;;;:71:::1;::::0;:45:::1;:71::i;:::-;:89:::0;::::1;:119::i;:::-;17798:146;;18020:44;18042:21;18052:10;18042:9;:21::i;:::-;18020:17;::::0;;:21:::1;:44::i;:::-;18000:17;:64:::0;18093:10:::1;18077:27;::::0;;;:15:::1;:27;::::0;;;;:46;;;18263:16:::1;::::0;:49:::1;::::0;18107:16;18263:20:::1;:49::i;:::-;18244:16;:68:::0;-1:-1:-1;;18337:10:4::1;18325:23;::::0;;;:11:::1;:23;::::0;;;;;;;:45;;-1:-1:-1;;18325:45:4::1;18351:19;18325:45;::::0;;18437:26:::1;:38:::0;;;;;18430:45;18325;3986:30:3;;17582:901:4:o;4418:671::-;4510:7;4519;4544:11;4558:26;4575:8;4558:16;:26::i;:::-;4544:40;;4599:3;4606:4;4599:11;4595:487;;;-1:-1:-1;;;;;4874:25:4;;;;;;;:15;:25;;;;;;;4418:671;-1:-1:-1;;4418:671:4:o;4595:487::-;-1:-1:-1;;;;;4964:25:4;;;;;;:15;:25;;;;;;:47;;2027:3;;4964:47;:::i;:::-;5030:25;2027:3;5030;:25;:::i;:::-;4938:132;;;;;4418:671;;;:::o;795:229:6:-;937:15;;;;:5;;:15;;;;;:::i;:::-;-1:-1:-1;963:19:6;;;;:7;;:19;;;;;:::i;:::-;-1:-1:-1;993:9:6;:23;;-1:-1:-1;;993:23:6;;;;;;;;;;;;-1:-1:-1;;795:229:6:o;3122:96:2:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:2:o;7395:1588:4:-;7519:20;7542:26;7564:3;7542:21;:26::i;:::-;7519:49;;7579:22;7604:28;7626:5;7604:21;:28::i;:::-;7579:53;;7776:23;7802:41;7821:21;7838:3;7821:16;:21::i;:::-;7802:6;;:18;:41::i;:::-;7776:67;;7854:23;7880:43;7899:23;7916:5;7899:16;:23::i;:::-;7880:6;;:18;:43::i;:::-;7854:69;;7961:115;8002:15;7961:115;;;;;;;;;;;;;;;;;:15;:22;7977:5;-1:-1:-1;;;;;7961:22:4;-1:-1:-1;;;;;7961:22:4;;;;;;;;;;;;;:26;;:115;;;;;:::i;:::-;-1:-1:-1;;;;;7936:22:4;;;;;;;:15;:22;;;;;;:140;;;;8110:20;;;;;;;:41;;8135:15;8110:24;:41::i;:::-;-1:-1:-1;;;;;8087:20:4;;;;;;:15;:20;;;;;:64;8168:15;:37;;;;;8188:17;8187:18;8168:37;8164:812;;;8378:17;;:29;;8400:6;8378:21;:29::i;:::-;8358:17;:49;8515:16;;:37;;8536:15;8515:20;:37::i;:::-;8496:16;:56;8164:812;;;8575:15;8574:16;:37;;;;;8594:17;8574:37;8570:406;;;8795:17;;:29;;8817:6;8795:21;:29::i;:::-;8775:17;:49;8927:16;;:37;;8948:15;8927:20;:37::i;:::-;8908:16;:56;8570:406;7508:1475;;;;7395:1588;;;:::o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;3709:255:7:-;3803:7;;3876:17;:1;526:4;3876:5;:17::i;:::-;3864:29;-1:-1:-1;3948:8:7;3864:29;3954:1;3948:5;:8::i;:::-;3941:15;3709:255;-1:-1:-1;;;;3709:255:7:o;12439:907:4:-;-1:-1:-1;;;;;;;;;;;3499:15:3;;1101:1;3617:27;;;3609:54;;;;-1:-1:-1;;;3609:54:3;;;;;;;:::i;:::-;3782:8;3765:26;;-1:-1:-1;;;;;12530:22:4;::::1;12522:59;;;::::0;-1:-1:-1;;;12522:59:4;;8415:2:8;12522:59:4::1;::::0;::::1;8397:21:8::0;8454:2;8434:18;;;8427:30;8493:26;8473:18;;;8466:54;8537:18;;12522:59:4::1;8213:348:8::0;12522:59:4::1;12594:25;12622:31;12644:8;12622:21;:31::i;:::-;12594:59;;12666:20;12689:47;12709:26;12726:8;12709:16;:26::i;12689:47::-;-1:-1:-1::0;;;;;12775:25:4;::::1;;::::0;;;:15:::1;:25;::::0;;;;;12666:70;;-1:-1:-1;12775:43:4::1;::::0;12666:70;12775:29:::1;:43::i;:::-;-1:-1:-1::0;;;;;12747:25:4;::::1;;::::0;;;:15:::1;:25;::::0;;;;:71;12979:189;::::1;;;13040:17;::::0;:30:::1;::::0;13062:7;13040:21:::1;:30::i;:::-;13020:17;:50:::0;12979:189:::1;;;13122:16;::::0;:34:::1;::::0;13143:12;13122:20:::1;:34::i;:::-;13103:16;:53:::0;12979:189:::1;13195:12;::::0;:25:::1;::::0;13212:7;13195:16:::1;:25::i;:::-;13180:12;:40:::0;;;-1:-1:-1;;;;;;13233:48:4::1;;;::::0;-1:-1:-1;;;13233:48:4;;5904:2:8;13233:48:4::1;::::0;::::1;5886:21:8::0;5943:2;5923:18;;;5916:30;-1:-1:-1;;;5962:18:8;;;5955:40;6012:18;;13233:48:4::1;5702:334:8::0;13233:48:4::1;13299:39;::::0;9835:25:8;;;-1:-1:-1;;;;;13299:39:4;::::1;::::0;13316:1:::1;::::0;-1:-1:-1;;;;;;;;;;;13299:39:4;9823:2:8;9808:18;13299:39:4::1;;;;;;;12511:835;;4003:12:3::0;3993:8;3986:30;3971:56;;12439:907:4;;:::o;5225:243:3:-;-1:-1:-1;;;;;5300:26:3;;5292:65;;;;-1:-1:-1;;;5292:65:3;;6598:2:8;5292:65:3;;;6580:21:8;6637:2;6617:18;;;6610:30;6676:28;6656:18;;;6649:56;6722:18;;5292:65:3;6396:350:8;5292:65:3;5410:12;-1:-1:-1;;;;;5373:50:3;5397:11;-1:-1:-1;;;;;;;;;;;2006:15:3;;1845:194;5397:11;-1:-1:-1;;;;;5373:50:3;;;;;;;;;;;5434:26;5447:12;-1:-1:-1;;;;;;;;;;;2905:29:3;2772:180;5434:26;5225:243;:::o;15369:307:4:-;-1:-1:-1;;;;;15492:36:4;;15463:7;15492:36;;;:26;:36;;;;;;:41;15488:181;;-1:-1:-1;;;;;;15557:36:4;;;;;:26;:36;;;;;;;15369:307::o;15488:181::-;-1:-1:-1;;15633:24:4;;;15369:307::o;15488:181::-;15369:307;;;:::o;13867:1305::-;-1:-1:-1;;;;;;;;;;;3499:15:3;;1101:1;3617:27;;;3609:54;;;;-1:-1:-1;;;3609:54:3;;;;;;;:::i;:::-;3782:8;3765:26;;-1:-1:-1;;;;;13958:22:4;::::1;13950:61;;;::::0;-1:-1:-1;;;13950:61:4;;6243:2:8;13950:61:4::1;::::0;::::1;6225:21:8::0;6282:2;6262:18;;;6255:30;6321:28;6301:18;;;6294:56;6367:18;;13950:61:4::1;6041:350:8::0;13950:61:4::1;14026:12:::0;14022:51:::1;;14055:7;;14022:51;14085:25;14113:31;14135:8;14113:21;:31::i;:::-;14085:59;;14155:20;14178:47;14198:26;14215:8;14198:16;:26::i;14178:47::-;-1:-1:-1::0;;;;;14261:25:4;::::1;14236:22;14261:25:::0;;;:15:::1;:25;::::0;;;;;14155:70;;-1:-1:-1;14373:30:4;;::::1;::::0;:68:::1;;-1:-1:-1::0;14429:12:4;14407:18:::1;14424:1;14407:14:::0;:18:::1;:::i;:::-;:34;14373:68;14355:432;;;-1:-1:-1::0;;;;;14510:25:4;::::1;14538:1;14510:25:::0;;;:15:::1;:25;::::0;;;;:29;14355:432:::1;;;14578:12;14561:14;:29;14557:230;;;-1:-1:-1::0;;;;;14635:25:4;::::1;;::::0;;;:15:::1;:25;::::0;;;;;:75:::1;::::0;14683:12;14635:29:::1;:75::i;:::-;-1:-1:-1::0;;;;;14607:25:4;::::1;;::::0;;;:15:::1;:25;::::0;;;;:103;14557:230:::1;;;14743:32;::::0;-1:-1:-1;;;14743:32:4;;8064:2:8;14743:32:4::1;::::0;::::1;8046:21:8::0;8103:2;8083:18;;;8076:30;-1:-1:-1;;;8122:18:8;;;8115:52;8184:18;;14743:32:4::1;7862:346:8::0;14557:230:4::1;14870:20;14866:189;;;14927:17;::::0;:30:::1;::::0;14949:7;14927:21:::1;:30::i;:::-;14907:17;:50:::0;14866:189:::1;;;15009:16;::::0;:34:::1;::::0;15030:12;15009:20:::1;:34::i;:::-;14990:16;:53:::0;14866:189:::1;15082:12;::::0;:25:::1;::::0;15099:7;15082:16:::1;:25::i;:::-;15067:12;:40:::0;15125:39:::1;::::0;9835:25:8;;;15152:1:4::1;::::0;-1:-1:-1;;;;;15125:39:4;::::1;::::0;-1:-1:-1;;;;;;;;;;;15125:39:4;9823:2:8;9808:18;15125:39:4::1;;;;;;;13939:1233;;;3814:1:3;-1:-1:-1::0;4003:12:3;3986:30;;-1:-1:-1;;13867:1305:4:o;15911:332::-;15978:4;-1:-1:-1;;;;;1465:19:1;;;:23;;;;;;16056:59:4;;-1:-1:-1;;;;;;16070:21:4;;16095:20;16070:21;;;:11;:21;;;;;;;;:45;;;;;;;;:::i;:::-;;16056:59;16052:126;;;16132:34;16157:8;16132:24;:34::i;:::-;-1:-1:-1;;;;;;;16195:36:4;16234:1;16195:36;;;:26;:36;;;;;;:40;;;15911:332::o;3465:96:2:-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;1560:135:7:-;1626:7;1653:34;1670:1;1673;526:4;1653:16;:34::i;4959:231:2:-;5075:7;5134:12;5126:6;;;;5118:29;;;;-1:-1:-1;;;5118:29:2;;;;;;;;:::i;:::-;-1:-1:-1;;;5168:5:2;;;4959:231::o;16425:941:4:-;-1:-1:-1;;;;;16501:36:4;;;;;;:26;:36;;;;;;16497:862;;-1:-1:-1;;;;;16563:25:4;;;;;;:15;:25;;;;;;16559:789;;-1:-1:-1;;;;;16774:36:4;;;;;:26;:36;;;;;16813:4;16774:43;;5225:243:3:o;16559:789:4:-;17013:24;;-1:-1:-1;;;;;16974:36:4;;;;;;:26;:36;;;;;:63;17123:42;17145:19;17001:8;17145:9;:19::i;17123:42::-;17103:17;:62;-1:-1:-1;;;;;17288:25:4;;;;;;:15;:25;;;;;;17245:16;;:87;;:20;:87::i;:::-;17226:16;:106;16425:941;:::o;2150:314:7:-;2270:7;;2380:8;:1;2386;2380:5;:8::i;:::-;2368:20;-1:-1:-1;2444:12:7;2368:20;2450:5;2444;:12::i;:::-;2437:19;2150:314;-1:-1:-1;;;;;2150:314:7:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:8;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;192:348;244:8;254:6;308:3;301:4;293:6;289:17;285:27;275:55;;326:1;323;316:12;275:55;-1:-1:-1;349:20:8;;392:18;381:30;;378:50;;;424:1;421;414:12;378:50;461:4;453:6;449:17;437:29;;513:3;506:4;497:6;489;485:19;481:30;478:39;475:59;;;530:1;527;520:12;475:59;192:348;;;;;:::o;545:186::-;604:6;657:2;645:9;636:7;632:23;628:32;625:52;;;673:1;670;663:12;625:52;696:29;715:9;696:29;:::i;736:260::-;804:6;812;865:2;853:9;844:7;840:23;836:32;833:52;;;881:1;878;871:12;833:52;904:29;923:9;904:29;:::i;:::-;894:39;;952:38;986:2;975:9;971:18;952:38;:::i;:::-;942:48;;736:260;;;;;:::o;1001:328::-;1078:6;1086;1094;1147:2;1135:9;1126:7;1122:23;1118:32;1115:52;;;1163:1;1160;1153:12;1115:52;1186:29;1205:9;1186:29;:::i;:::-;1176:39;;1234:38;1268:2;1257:9;1253:18;1234:38;:::i;:::-;1224:48;;1319:2;1308:9;1304:18;1291:32;1281:42;;1001:328;;;;;:::o;1334:254::-;1402:6;1410;1463:2;1451:9;1442:7;1438:23;1434:32;1431:52;;;1479:1;1476;1469:12;1431:52;1502:29;1521:9;1502:29;:::i;:::-;1492:39;1578:2;1563:18;;;;1550:32;;-1:-1:-1;;;1334:254:8:o;1593:795::-;1694:6;1702;1710;1718;1726;1779:2;1767:9;1758:7;1754:23;1750:32;1747:52;;;1795:1;1792;1785:12;1747:52;1835:9;1822:23;1864:18;1905:2;1897:6;1894:14;1891:34;;;1921:1;1918;1911:12;1891:34;1960:59;2011:7;2002:6;1991:9;1987:22;1960:59;:::i;:::-;2038:8;;-1:-1:-1;1934:85:8;-1:-1:-1;2126:2:8;2111:18;;2098:32;;-1:-1:-1;2142:16:8;;;2139:36;;;2171:1;2168;2161:12;2139:36;;2210:61;2263:7;2252:8;2241:9;2237:24;2210:61;:::i;:::-;2290:8;;-1:-1:-1;2184:87:8;-1:-1:-1;2344:38:8;;-1:-1:-1;2378:2:8;2363:18;;2344:38;:::i;:::-;2334:48;;1593:795;;;;;;;;:::o;2393:180::-;2452:6;2505:2;2493:9;2484:7;2480:23;2476:32;2473:52;;;2521:1;2518;2511:12;2473:52;-1:-1:-1;2544:23:8;;2393:180;-1:-1:-1;2393:180:8:o;2978:345::-;3127:2;3112:18;;3160:1;3149:13;;3139:144;;3205:10;3200:3;3196:20;3193:1;3186:31;3240:4;3237:1;3230:15;3268:4;3265:1;3258:15;3139:144;3292:25;;;2978:345;:::o;3328:597::-;3440:4;3469:2;3498;3487:9;3480:21;3530:6;3524:13;3573:6;3568:2;3557:9;3553:18;3546:34;3598:1;3608:140;3622:6;3619:1;3616:13;3608:140;;;3717:14;;;3713:23;;3707:30;3683:17;;;3702:2;3679:26;3672:66;3637:10;;3608:140;;;3766:6;3763:1;3760:13;3757:91;;;3836:1;3831:2;3822:6;3811:9;3807:22;3803:31;3796:42;3757:91;-1:-1:-1;3909:2:8;3888:15;-1:-1:-1;;3884:29:8;3869:45;;;;3916:2;3865:54;;3328:597;-1:-1:-1;;;3328:597:8:o;3930:347::-;4132:2;4114:21;;;4171:2;4151:18;;;4144:30;4210:25;4205:2;4190:18;;4183:53;4268:2;4253:18;;3930:347::o;7519:338::-;7721:2;7703:21;;;7760:2;7740:18;;;7733:30;-1:-1:-1;;;7794:2:8;7779:18;;7772:44;7848:2;7833:18;;7519:338::o;10971:128::-;11011:3;11042:1;11038:6;11035:1;11032:13;11029:39;;;11048:18;;:::i;:::-;-1:-1:-1;11084:9:8;;10971:128::o;11104:217::-;11144:1;11170;11160:132;;11214:10;11209:3;11205:20;11202:1;11195:31;11249:4;11246:1;11239:15;11277:4;11274:1;11267:15;11160:132;-1:-1:-1;11306:9:8;;11104:217::o;11326:168::-;11366:7;11432:1;11428;11424:6;11420:14;11417:1;11414:21;11409:1;11402:9;11395:17;11391:45;11388:71;;;11439:18;;:::i;:::-;-1:-1:-1;11479:9:8;;11326:168::o;11499:125::-;11539:4;11567:1;11564;11561:8;11558:34;;;11572:18;;:::i;:::-;-1:-1:-1;11609:9:8;;11499:125::o;11629:380::-;11708:1;11704:12;;;;11751;;;11772:61;;11826:4;11818:6;11814:17;11804:27;;11772:61;11879:2;11871:6;11868:14;11848:18;11845:38;11842:161;;;11925:10;11920:3;11916:20;11913:1;11906:31;11960:4;11957:1;11950:15;11988:4;11985:1;11978:15;11842:161;;11629:380;;;:::o;12014:127::-;12075:10;12070:3;12066:20;12063:1;12056:31;12106:4;12103:1;12096:15;12130:4;12127:1;12120:15;12146:127;12207:10;12202:3;12198:20;12195:1;12188:31;12238:4;12235:1;12228:15;12262:4;12259:1;12252:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1617400",
								"executionCost": "51761",
								"totalCost": "1669161"
							},
							"external": {
								"_totalSupply()": "2385",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24612",
								"balanceOf(address)": "infinite",
								"burn(address,uint256)": "infinite",
								"changeSupply(uint256)": "infinite",
								"claimGovernance()": "28322",
								"creditsBalanceOf(address)": "infinite",
								"creditsBalanceOfHighres(address)": "9326",
								"decimals()": "2401",
								"decreaseAllowance(address,uint256)": "29249",
								"governor()": "infinite",
								"increaseAllowance(address,uint256)": "26912",
								"initialize(string,string,address)": "infinite",
								"isGovernor()": "infinite",
								"isUpgraded(address)": "2586",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonRebasingCreditsPerToken(address)": "2630",
								"nonRebasingSupply()": "2383",
								"rebaseOptIn()": "infinite",
								"rebaseOptOut()": "infinite",
								"rebaseState(address)": "2639",
								"rebasingCredits()": "2469",
								"rebasingCreditsHighres()": "2404",
								"rebasingCreditsPerToken()": "2424",
								"rebasingCreditsPerTokenHighres()": "2382",
								"symbol()": "infinite",
								"totalSupply()": "2360",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferGovernance(address)": "infinite",
								"vaultAddress()": "2382"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_creditsPerToken(address)": "4413",
								"_ensureRebasingMigration(address)": "infinite",
								"_executeTransfer(address,address,uint256)": "infinite",
								"_isNonRebasingAccount(address)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1467,
									"name": "PUSH",
									"source": 4,
									"value": "9C"
								},
								{
									"begin": 1427,
									"end": 1467,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1467,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1427,
									"end": 1467,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1467,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1427,
									"end": 1467,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1507,
									"end": 1517,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2905,
									"end": 2934,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2772,
									"end": 2952,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "tag",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2021,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 3,
									"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 863,
									"end": 20530,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7d2b0a458629bce519f1195e8512c41f1a9060b4a750fd0c5288cb33a0b583464736f6c63430008070033",
									".code": [
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "6691CB3D"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "E5C4FFFE"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "E696393A"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "F51B0FD4"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "F9854BFC"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "C2376DFF"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "C7AF3352"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "D38BFFF4"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "95EF84B9"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "9DC29FAC"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "6691CB3D"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "7A46A9C5"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "7D0D66FF"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "430BF08A"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "430BF08A"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "456EE286"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "5D36B190"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "609350CD"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "39A7919F"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "3EAAF86B"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "C340A24"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "C340A24"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "77F224A"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "77F22B7"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 863,
											"end": 20530,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 9689,
											"end": 9866,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 2965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2951,
											"end": 2965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2944,
											"end": 2966,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2914,
											"end": 2916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2786,
											"end": 2973,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2578,
											"end": 2781,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2636,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2636,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2636,
											"end": 2736,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1946,
											"end": 2029,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1946,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1946,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2029,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2021,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10924,
											"end": 10960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10912,
											"end": 10914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10897,
											"end": 10915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 10782,
											"end": 10966,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1346,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "PUSH",
											"source": 4,
											"value": "9C"
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1467,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "A2"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1867,
											"end": 1919,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1860,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3247,
											"end": 3369,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3247,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3337,
											"end": 3361,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 3337,
											"end": 3361,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3247,
											"end": 3369,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3566,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3460,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3460,
											"end": 3566,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "A3"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1971,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9466,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9474,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9455,
											"end": 9484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9304,
											"end": 9492,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10376,
											"end": 10378,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10388,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10388,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10431,
											"end": 10445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10397,
											"end": 10447,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 10124,
											"end": 10453,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10101,
											"end": 10103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 9871,
											"end": 10119,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1164,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1177,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5590,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "PUSH",
											"source": 8,
											"value": "43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 508,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 508,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 508,
											"end": 520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 508,
											"end": 520,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 508,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 508,
											"end": 520,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 508,
											"end": 520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 508,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 508,
											"end": 536,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 524,
											"end": 536,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 508,
											"end": 536,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 508,
											"end": 536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 486,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 486,
											"end": 610,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 486,
											"end": 610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 610,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 486,
											"end": 610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 486,
											"end": 610,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6955,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 486,
											"end": 610,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 486,
											"end": 610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 486,
											"end": 610,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 6956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6992,
											"end": 6994,
											"name": "PUSH",
											"source": 8,
											"value": "2E"
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7031,
											"end": 7065,
											"name": "PUSH",
											"source": 8,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7004,
											"end": 7066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7082,
											"end": 7100,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7082,
											"end": 7100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7082,
											"end": 7100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7075,
											"end": 7119,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7136,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 486,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6751,
											"end": 7161,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 486,
											"end": 610,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 486,
											"end": 610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 623,
											"end": 642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 658,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 646,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 646,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 646,
											"end": 658,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 646,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 646,
											"end": 658,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 645,
											"end": 658,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 669,
											"end": 768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 669,
											"end": 768,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 669,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 669,
											"end": 768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 704,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 723,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 723,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 738,
											"end": 756,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 669,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 669,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2262,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2215,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2290,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 2290,
											"end": 2321,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "9C"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 794,
											"end": 861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 794,
											"end": 861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 794,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 794,
											"end": 861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 844,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 829,
											"end": 849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 849,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 794,
											"end": 861,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 794,
											"end": 861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 475,
											"end": 868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"source": 4,
											"value": "3B9ACA00"
										},
										{
											"begin": 3119,
											"end": 3135,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 3119,
											"end": 3135,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3119,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3044,
											"end": 3165,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10328,
											"end": 10338,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10294,
											"end": 10298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10327,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10339,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10358,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10358,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10294,
											"end": 10298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10294,
											"end": 10298,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10316,
											"end": 10349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10352,
											"end": 10358,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9689,
											"end": 9866,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10412,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10430,
											"end": 10434,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10442,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6757,
											"end": 6774,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6757,
											"end": 6774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8807,
											"end": 8809,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5472616E7366657220746F207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8819,
											"end": 8873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8908,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8890,
											"end": 8908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8566,
											"end": 8914,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6749,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6842,
											"end": 6847,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6832,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6828,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6848,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6848,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5232,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5269,
											"end": 5300,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E736665722067726561746572207468616E2062616C616E6365000000"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4989,
											"end": 5342,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6814,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6939,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6946,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6947,
											"end": 6957,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6958,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6928,
											"end": 6994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 6983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6928,
											"end": 6994,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6928,
											"end": 6994,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6928,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6906,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6913,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6924,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6994,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6907,
											"end": 6912,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7034,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7042,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7007,
											"end": 7043,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7007,
											"end": 7043,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7007,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7077,
											"end": 7080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9689,
											"end": 9866,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7089,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7109,
											"end": 7113,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7121,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 10841,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11011,
											"end": 11021,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10941,
											"end": 10945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11010,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11022,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11032,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10999,
											"end": 11063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11062,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10999,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 10999,
											"end": 11063,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10999,
											"end": 11063,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 10999,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 10985,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10974,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10986,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11063,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 11063,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11079,
											"end": 11144,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11079,
											"end": 11144,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11079,
											"end": 11144,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11079,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9689,
											"end": 9866,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "9C"
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "213EC435BF70ECF7A12C7C7C1673CBE2D6484D181DBA26B798A55F8ABC8E6650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3782,
											"end": 3790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3772,
											"end": 3780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 19632,
											"end": 19633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19617,
											"end": 19629,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 19617,
											"end": 19629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19617,
											"end": 19633,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9540,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9520,
											"end": 9541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9579,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9642,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F7420696E637265617365203020737570706C790000000000000000"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9589,
											"end": 9643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9336,
											"end": 9684,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 19609,
											"end": 19662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19695,
											"end": 19710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19679,
											"end": 19691,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 19679,
											"end": 19691,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19679,
											"end": 19710,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 19675,
											"end": 19914,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 19675,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 19675,
											"end": 19914,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 19776,
											"end": 19788,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 19776,
											"end": 19788,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19807,
											"end": 19823,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 19807,
											"end": 19823,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19842,
											"end": 19866,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 19842,
											"end": 19866,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10660,
											"end": 10685,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10685,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10685,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10716,
											"end": 10718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "PUSH",
											"source": 4,
											"value": "41645EB819D3011B13F97696A8109D14BFCDDFACA7D063EC0564D62A3E257235"
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10648,
											"end": 10650,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19732,
											"end": 19881,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 19896,
											"end": 19903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 19896,
											"end": 19903,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19675,
											"end": 19914,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 19675,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19941,
											"end": 19969,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 19941,
											"end": 19969,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 20011,
											"end": 20026,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 19941,
											"end": 20026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19926,
											"end": 19938,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 19926,
											"end": 20026,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19926,
											"end": 20026,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19926,
											"end": 20026,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 20127,
											"end": 20144,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 20127,
											"end": 20144,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20066,
											"end": 20156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 20066,
											"end": 20156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20110,
											"end": 20145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 20110,
											"end": 20145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20110,
											"end": 20126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 20110,
											"end": 20145,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 20110,
											"end": 20145,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 20110,
											"end": 20145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20066,
											"end": 20082,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 20066,
											"end": 20082,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20066,
											"end": 20082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20066,
											"end": 20095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 20066,
											"end": 20156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 20066,
											"end": 20156,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 20066,
											"end": 20156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20039,
											"end": 20063,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 20039,
											"end": 20156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20039,
											"end": 20156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20039,
											"end": 20156,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4486,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4525,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4496,
											"end": 4526,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964206368616E676520696E20737570706C790000000000000000"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4282,
											"end": 4630,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 20169,
											"end": 20234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 20350,
											"end": 20367,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 20350,
											"end": 20367,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 20306,
											"end": 20330,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 20306,
											"end": 20330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20278,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 20262,
											"end": 20278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 20262,
											"end": 20305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 20262,
											"end": 20331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20262,
											"end": 20349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 20262,
											"end": 20368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 20262,
											"end": 20368,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 20262,
											"end": 20368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 20247,
											"end": 20259,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 20247,
											"end": 20368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20247,
											"end": 20368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20247,
											"end": 20368,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 20453,
											"end": 20469,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 20453,
											"end": 20469,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20484,
											"end": 20508,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 20484,
											"end": 20508,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10660,
											"end": 10685,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10685,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10685,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10716,
											"end": 10718,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "PUSH",
											"source": 4,
											"value": "41645EB819D3011B13F97696A8109D14BFCDDFACA7D063EC0564D62A3E257235"
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10648,
											"end": 10650,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 20386,
											"end": 20519,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19487,
											"end": 20527,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "9C"
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 12122,
											"end": 12130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12132,
											"end": 12139,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12116,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12037,
											"end": 12148,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 2338,
											"end": 2353,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4918,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9121,
											"end": 9123,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9103,
											"end": 9124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9160,
											"end": 9162,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9133,
											"end": 9163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9199,
											"end": 9233,
											"name": "PUSH",
											"source": 8,
											"value": "4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F"
										},
										{
											"begin": 9179,
											"end": 9197,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9179,
											"end": 9197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9179,
											"end": 9197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D706C6574652074686520636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9289,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9306,
											"end": 9325,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9306,
											"end": 9325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8919,
											"end": 9331,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2817,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"source": 4,
											"value": "3B9ACA00"
										},
										{
											"begin": 2900,
											"end": 2924,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 2900,
											"end": 2924,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2900,
											"end": 2946,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3964,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3974,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3945,
											"end": 3989,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3945,
											"end": 3989,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3945,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4059,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4076,
											"end": 4084,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4059,
											"end": 4085,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4085,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4059,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4020,
											"end": 4086,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4086,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4020,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 4094,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1296,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 13423,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "9C"
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2520,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2486,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13500,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 13506,
											"end": 13513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13515,
											"end": 13521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13500,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 13500,
											"end": 13522,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11617,
											"end": 11627,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11564,
											"end": 11568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11616,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11628,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11681,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11653,
											"end": 11681,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11720,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11709,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11721,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11731,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11698,
											"end": 11735,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11804,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11804,
											"end": 11812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11817,
											"end": 11833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11804,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 11804,
											"end": 11834,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11804,
											"end": 11834,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11804,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11780,
											"end": 11790,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11779,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11791,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11801,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11834,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 11649,
											"end": 11846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 11880,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11903,
											"name": "PUSH",
											"source": 4,
											"value": "9B"
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11915,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 11925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11870,
											"end": 11880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11926,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11944,
											"end": 11948,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11944,
											"end": 11948,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11459,
											"end": 11956,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5909,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6038,
											"end": 6055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8768,
											"end": 8770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8750,
											"end": 8771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8807,
											"end": 8809,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5472616E7366657220746F207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8819,
											"end": 8873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8890,
											"end": 8908,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8890,
											"end": 8908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8566,
											"end": 8914,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 6030,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6137,
											"end": 6147,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6117,
											"end": 6148,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6117,
											"end": 6148,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5232,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5269,
											"end": 5300,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E736665722067726561746572207468616E2062616C616E6365000000"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5318,
											"end": 5336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4989,
											"end": 5342,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6095,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6235,
											"end": 6245,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6218,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6218,
											"end": 6259,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 6218,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6286,
											"end": 6296,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6286,
											"end": 6296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 9689,
											"end": 9866,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "213EC435BF70ECF7A12C7C7C1673CBE2D6484D181DBA26B798A55F8ABC8E6650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3782,
											"end": 3790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3772,
											"end": 3780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18635,
											"end": 18668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 18657,
											"end": 18667,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 18635,
											"end": 18656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 18635,
											"end": 18668,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18635,
											"end": 18668,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 18635,
											"end": 18668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18634,
											"end": 18668,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7350,
											"end": 7371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7407,
											"end": 7409,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7387,
											"end": 7405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7380,
											"end": 7410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7446,
											"end": 7472,
											"name": "PUSH",
											"source": 8,
											"value": "4163636F756E7420686173206E6F74206F7074656420696E0000000000000000"
										},
										{
											"begin": 7426,
											"end": 7444,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7426,
											"end": 7444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7426,
											"end": 7444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7166,
											"end": 7514,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 18626,
											"end": 18697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18771,
											"end": 18815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 18793,
											"end": 18814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 18803,
											"end": 18813,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 18793,
											"end": 18802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 18793,
											"end": 18814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18793,
											"end": 18814,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 18793,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18771,
											"end": 18792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 18771,
											"end": 18815,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18771,
											"end": 18815,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 18771,
											"end": 18815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18751,
											"end": 18768,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 18751,
											"end": 18815,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18907,
											"end": 18931,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 18907,
											"end": 18931,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 18893,
											"end": 18903,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18892,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18904,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18931,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18931,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 18866,
											"end": 18931,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 19093,
											"end": 19108,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 19093,
											"end": 19120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19093,
											"end": 19120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19093,
											"end": 19120,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 19093,
											"end": 19120,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19072,
											"end": 19088,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 19072,
											"end": 19088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 19072,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 19072,
											"end": 19121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19072,
											"end": 19092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 19072,
											"end": 19121,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 19072,
											"end": 19121,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 19072,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 19053,
											"end": 19069,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 19053,
											"end": 19121,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19196,
											"end": 19206,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19195,
											"name": "PUSH",
											"source": 4,
											"value": "A2"
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19207,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 19210,
											"end": 19230,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 19184,
											"end": 19230,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 18571,
											"end": 19238,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2741,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5531,
											"end": 5552,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5590,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5655,
											"name": "PUSH",
											"source": 8,
											"value": "43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5347,
											"end": 5697,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 3,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 4189,
											"end": 4218,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4236,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "A39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5573,
											"end": 5598,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5613,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 5589,
											"end": 5597,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5613,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 5613,
											"end": 5639,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5613,
											"end": 5639,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 5613,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "A3"
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5674,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5690,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5654,
											"end": 5679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5679,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5679,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5362,
											"end": 5698,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "213EC435BF70ECF7A12C7C7C1673CBE2D6484D181DBA26B798A55F8ABC8E6650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3782,
											"end": 3790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3772,
											"end": 3780,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 17644,
											"end": 17677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 17666,
											"end": 17676,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 17644,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 17644,
											"end": 17677,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17644,
											"end": 17677,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 17644,
											"end": 17677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4837,
											"end": 4839,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4840,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4874,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4879,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4942,
											"name": "PUSH",
											"source": 8,
											"value": "4163636F756E7420686173206E6F74206F70746564206F757400000000000000"
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4888,
											"end": 4943,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4635,
											"end": 4984,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 17636,
											"end": 17707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17798,
											"end": 17822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17825,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 17915,
											"end": 17943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 17932,
											"end": 17942,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 17915,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 17915,
											"end": 17943,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17915,
											"end": 17943,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 17915,
											"end": 17943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17871,
											"end": 17895,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 17871,
											"end": 17895,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 17841,
											"end": 17851,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17840,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17852,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 17825,
											"end": 17896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 17825,
											"end": 17896,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17825,
											"end": 17896,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 17825,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17825,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 17825,
											"end": 17944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17825,
											"end": 17944,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 17825,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17798,
											"end": 17944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17798,
											"end": 17944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 18042,
											"end": 18063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 18052,
											"end": 18062,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 18042,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 18042,
											"end": 18063,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18042,
											"end": 18063,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 18042,
											"end": 18063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18037,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 18020,
											"end": 18037,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 18020,
											"end": 18064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18020,
											"end": 18064,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 18020,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18000,
											"end": 18017,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 18000,
											"end": 18064,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18093,
											"end": 18103,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18092,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18104,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18077,
											"end": 18123,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18263,
											"end": 18279,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 18263,
											"end": 18279,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 18263,
											"end": 18312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 18263,
											"end": 18312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18107,
											"end": 18123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18263,
											"end": 18283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 18263,
											"end": 18312,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18263,
											"end": 18312,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 18263,
											"end": 18312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18244,
											"end": 18260,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 18244,
											"end": 18312,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18337,
											"end": 18347,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18336,
											"name": "PUSH",
											"source": 4,
											"value": "A2"
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18348,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 18351,
											"end": 18370,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18437,
											"end": 18463,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 18437,
											"end": 18475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18437,
											"end": 18475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 18437,
											"end": 18475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18437,
											"end": 18475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18437,
											"end": 18475,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18430,
											"end": 18475,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 18325,
											"end": 18370,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 17582,
											"end": 18483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 4575,
											"end": 4583,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4558,
											"end": 4584,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 4558,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4602,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 4599,
											"end": 4610,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 5082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 5082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 4595,
											"end": 5082,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4874,
											"end": 4899,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4595,
											"end": 5082,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 4595,
											"end": 5082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4979,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4989,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 4964,
											"end": 5011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"source": 4,
											"value": "3B9ACA00"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4964,
											"end": 5011,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 5011,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 4964,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5030,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"source": 4,
											"value": "3B9ACA00"
										},
										{
											"begin": 5030,
											"end": 5033,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5030,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5030,
											"end": 5055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5030,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 5030,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5070,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5070,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 5089,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 795,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 795,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 937,
											"end": 952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 952,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 937,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 937,
											"end": 952,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 937,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 963,
											"end": 982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 963,
											"end": 982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 963,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 963,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 963,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 963,
											"end": 982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 963,
											"end": 982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 963,
											"end": 982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 963,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "PUSH",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 795,
											"end": 1024,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7395,
											"end": 8983,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7395,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 7542,
											"end": 7568,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7542,
											"end": 7568,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 7542,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7579,
											"end": 7601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 7626,
											"end": 7631,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7604,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 7604,
											"end": 7632,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7604,
											"end": 7632,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 7604,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7579,
											"end": 7632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7579,
											"end": 7632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7776,
											"end": 7799,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 7821,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7821,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7821,
											"end": 7842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7821,
											"end": 7842,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 7821,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7808,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 7802,
											"end": 7843,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7802,
											"end": 7843,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 7802,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7776,
											"end": 7843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7776,
											"end": 7843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7854,
											"end": 7877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 7899,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 7899,
											"end": 7922,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7899,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 7899,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7880,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 7880,
											"end": 7923,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7880,
											"end": 7923,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 7880,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7854,
											"end": 7923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7854,
											"end": 7923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 8002,
											"end": 8017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E7366657220616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7976,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 7982,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 7961,
											"end": 7987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 7961,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7958,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 8076,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 8076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 8076,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 8076,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 8110,
											"end": 8151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8135,
											"end": 8150,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8110,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8110,
											"end": 8151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8110,
											"end": 8151,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 8110,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8102,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8107,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8087,
											"end": 8151,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8187,
											"end": 8205,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 8168,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8378,
											"end": 8395,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 8378,
											"end": 8395,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8378,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 8378,
											"end": 8407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8378,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8378,
											"end": 8407,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8378,
											"end": 8407,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 8378,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 8358,
											"end": 8407,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8515,
											"end": 8531,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 8515,
											"end": 8531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8515,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 8515,
											"end": 8552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8515,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8515,
											"end": 8552,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8515,
											"end": 8552,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 8515,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8496,
											"end": 8512,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 8496,
											"end": 8552,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 8164,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8575,
											"end": 8590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8590,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8594,
											"end": 8611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 8574,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 8570,
											"end": 8976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8795,
											"end": 8812,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 8795,
											"end": 8812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8795,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 8795,
											"end": 8824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8817,
											"end": 8823,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8795,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8795,
											"end": 8824,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8795,
											"end": 8824,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 8795,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 8775,
											"end": 8824,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 8927,
											"end": 8943,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8948,
											"end": 8963,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8908,
											"end": 8924,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 8908,
											"end": 8964,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8976,
											"name": "tag",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 8570,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7508,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7508,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7508,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7508,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 8983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 8983,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3709,
											"end": 3964,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3709,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 526,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3948,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 3864,
											"end": 3893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3948,
											"end": 3956,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3948,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 3948,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3964,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3709,
											"end": 3964,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12439,
											"end": 13346,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 12439,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "213EC435BF70ECF7A12C7C7C1673CBE2D6484D181DBA26B798A55F8ABC8E6650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3782,
											"end": 3790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12530,
											"end": 12552,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12530,
											"end": 12552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8415,
											"end": 8417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8397,
											"end": 8418,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 8456,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 8434,
											"end": 8452,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8434,
											"end": 8452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8493,
											"end": 8519,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E7420746F20746865207A65726F20616464726573730000000000000000"
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8466,
											"end": 8520,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 8213,
											"end": 8561,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 12522,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 12619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 12644,
											"end": 12652,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12622,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 12622,
											"end": 12653,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12622,
											"end": 12653,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 12622,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 12653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12594,
											"end": 12653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12666,
											"end": 12686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12689,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 12709,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 12726,
											"end": 12734,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 12709,
											"end": 12735,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12689,
											"end": 12736,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 12689,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12790,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12800,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 12666,
											"end": 12736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12666,
											"end": 12736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12666,
											"end": 12736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 12775,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12762,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12772,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12747,
											"end": 12818,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13040,
											"end": 13057,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 13040,
											"end": 13057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13040,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 13040,
											"end": 13070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13062,
											"end": 13069,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13040,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 13040,
											"end": 13070,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13040,
											"end": 13070,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 13040,
											"end": 13070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13020,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 13020,
											"end": 13070,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13122,
											"end": 13138,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 13122,
											"end": 13138,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13143,
											"end": 13155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13122,
											"end": 13142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 13122,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13103,
											"end": 13119,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 13103,
											"end": 13156,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 12979,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13207,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 13195,
											"end": 13207,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 13195,
											"end": 13220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13212,
											"end": 13219,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13195,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 13195,
											"end": 13220,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13195,
											"end": 13220,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 13195,
											"end": 13220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13180,
											"end": 13192,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 13180,
											"end": 13220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13180,
											"end": 13220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13180,
											"end": 13220,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5906,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5886,
											"end": 5907,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5916,
											"end": 5946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D617820737570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 5995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6030,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6012,
											"end": 6030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5702,
											"end": 6036,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 13233,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13316,
											"end": 13317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13316,
											"end": 13317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13338,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 12511,
											"end": 13346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12511,
											"end": 13346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3993,
											"end": 4001,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12439,
											"end": 13346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12439,
											"end": 13346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12439,
											"end": 13346,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6676,
											"end": 6704,
											"name": "PUSH",
											"source": 8,
											"value": "4E657720476F7665726E6F722069732061646472657373283029000000000000"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6396,
											"end": 6746,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5422,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2934,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2952,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15463,
											"end": 15470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15518,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15528,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15492,
											"end": 15533,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15488,
											"end": 15669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 15488,
											"end": 15669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15583,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15488,
											"end": 15669,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 15488,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15488,
											"end": 15669,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 15488,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15369,
											"end": 15676,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13867,
											"end": 15172,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 13867,
											"end": 15172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "213EC435BF70ECF7A12C7C7C1673CBE2D6484D181DBA26B798A55F8ABC8E6650"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3644,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 3609,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3782,
											"end": 3790,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3791,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13958,
											"end": 13980,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13958,
											"end": 13980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6246,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6349,
											"name": "PUSH",
											"source": 8,
											"value": "4275726E2066726F6D20746865207A65726F2061646472657373000000000000"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6350,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6041,
											"end": 6391,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "tag",
											"source": 4,
											"value": "409"
										},
										{
											"begin": 13950,
											"end": 14011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14026,
											"end": 14038,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14022,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 14022,
											"end": 14073,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14055,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 14055,
											"end": 14062,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14022,
											"end": 14073,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 14022,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14085,
											"end": 14110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14113,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 14135,
											"end": 14143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 14113,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 14113,
											"end": 14144,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14113,
											"end": 14144,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 14113,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14085,
											"end": 14144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14085,
											"end": 14144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14155,
											"end": 14175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14178,
											"end": 14225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 14198,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 14215,
											"end": 14223,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14198,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 14198,
											"end": 14224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14178,
											"end": 14225,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 14178,
											"end": 14225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14236,
											"end": 14258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14276,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14261,
											"end": 14286,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14155,
											"end": 14225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14155,
											"end": 14225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14373,
											"end": 14403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14403,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 14373,
											"end": 14441,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 14424,
											"end": 14425,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14407,
											"end": 14421,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 14407,
											"end": 14425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14407,
											"end": 14441,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14373,
											"end": 14441,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 14373,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14525,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14535,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14510,
											"end": 14539,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 14355,
											"end": 14787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14578,
											"end": 14590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14561,
											"end": 14575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14561,
											"end": 14590,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14650,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14660,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 14635,
											"end": 14710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14683,
											"end": 14695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14635,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 14635,
											"end": 14710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14635,
											"end": 14710,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 14635,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14622,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14632,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14607,
											"end": 14710,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8066,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8046,
											"end": 8067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8105,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52656D6F766520657863656564732062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8202,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8184,
											"end": 8202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14743,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7862,
											"end": 8208,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "tag",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 14557,
											"end": 14787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14870,
											"end": 14890,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14944,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 14927,
											"end": 14944,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 14927,
											"end": 14957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14949,
											"end": 14956,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 14927,
											"end": 14957,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14927,
											"end": 14957,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 14927,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14907,
											"end": 14924,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 14907,
											"end": 14957,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15009,
											"end": 15025,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 15009,
											"end": 15025,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15009,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 15009,
											"end": 15043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15030,
											"end": 15042,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15009,
											"end": 15029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 15009,
											"end": 15043,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15009,
											"end": 15043,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 15009,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 14990,
											"end": 15043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 14866,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15082,
											"end": 15094,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 15082,
											"end": 15094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15082,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 15082,
											"end": 15107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15099,
											"end": 15106,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 15082,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 15082,
											"end": 15107,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15082,
											"end": 15107,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 15082,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15067,
											"end": 15079,
											"name": "PUSH",
											"source": 4,
											"value": "9A"
										},
										{
											"begin": 15067,
											"end": 15107,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15152,
											"end": 15153,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15152,
											"end": 15153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15125,
											"end": 15164,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 13939,
											"end": 15172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13939,
											"end": 15172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13939,
											"end": 15172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13867,
											"end": 15172,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15911,
											"end": 16243,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 15911,
											"end": 16243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15978,
											"end": 15982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16056,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 16056,
											"end": 16115,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16095,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16081,
											"name": "PUSH",
											"source": 4,
											"value": "A2"
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 16070,
											"end": 16091,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16070,
											"end": 16115,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 16056,
											"end": 16115,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 16056,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16052,
											"end": 16178,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16052,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 16052,
											"end": 16178,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 16157,
											"end": 16165,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 16132,
											"end": 16166,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 16132,
											"end": 16166,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 16132,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16234,
											"end": 16235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16221,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16231,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16235,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16235,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16195,
											"end": 16235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15911,
											"end": 16243,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 1560,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 526,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1653,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 1653,
											"end": 1687,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5146,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "tag",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 5118,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4959,
											"end": 5190,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16425,
											"end": 17366,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 16425,
											"end": 17366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16527,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16497,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 16497,
											"end": 17359,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16578,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16563,
											"end": 16588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16559,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 16559,
											"end": 17348,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16800,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16810,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16813,
											"end": 16817,
											"name": "PUSH",
											"source": 4,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 16774,
											"end": 16817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16774,
											"end": 16817,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 16559,
											"end": 17348,
											"name": "tag",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 16559,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17013,
											"end": 17037,
											"name": "PUSH",
											"source": 4,
											"value": "9F"
										},
										{
											"begin": 17013,
											"end": 17037,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17000,
											"name": "PUSH",
											"source": 4,
											"value": "A1"
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17010,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16974,
											"end": 17037,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 17145,
											"end": 17164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 17001,
											"end": 17009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17145,
											"end": 17154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 17145,
											"end": 17164,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17123,
											"end": 17165,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 17123,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17103,
											"end": 17120,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 17103,
											"end": 17165,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17303,
											"name": "PUSH",
											"source": 4,
											"value": "9D"
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 17288,
											"end": 17313,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 17245,
											"end": 17261,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 17245,
											"end": 17261,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 17245,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 17245,
											"end": 17332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17245,
											"end": 17265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 17245,
											"end": 17332,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17245,
											"end": 17332,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 17245,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17226,
											"end": 17242,
											"name": "PUSH",
											"source": 4,
											"value": "9E"
										},
										{
											"begin": 17226,
											"end": 17332,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16425,
											"end": 17366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16425,
											"end": 17366,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2150,
											"end": 2464,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2150,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 2368,
											"end": 2388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 2444,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2456,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2464,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2150,
											"end": 2464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "342"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "466"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "466"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "469"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "469"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "470"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "470"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "471"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "472"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "472"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "472"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 192,
											"end": 540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 244,
											"end": 252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 260,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 308,
											"end": 311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 301,
											"end": 305,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 293,
											"end": 299,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 289,
											"end": 306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 285,
											"end": 312,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 275,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 275,
											"end": 330,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 326,
											"end": 327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 324,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 316,
											"end": 328,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 275,
											"end": 330,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 275,
											"end": 330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 349,
											"end": 369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 349,
											"end": 369,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 410,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 381,
											"end": 411,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 428,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 378,
											"end": 428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 424,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 422,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 426,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 378,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 461,
											"end": 465,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 449,
											"end": 466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 437,
											"end": 466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 513,
											"end": 516,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 503,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 489,
											"end": 495,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 485,
											"end": 504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 481,
											"end": 511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 478,
											"end": 517,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 475,
											"end": 534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 475,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 475,
											"end": 534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 530,
											"end": 531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 520,
											"end": 532,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 475,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 475,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 540,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 545,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 636,
											"end": 643,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 632,
											"end": 655,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 625,
											"end": 677,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 625,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 625,
											"end": 677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 663,
											"end": 675,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 625,
											"end": 677,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 625,
											"end": 677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 715,
											"end": 724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 696,
											"end": 725,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 736,
											"end": 996,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 736,
											"end": 996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 804,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 833,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 833,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 833,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 833,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 904,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 904,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 904,
											"end": 933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 933,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 904,
											"end": 933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 894,
											"end": 933,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 894,
											"end": 933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 952,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 971,
											"end": 989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 952,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 952,
											"end": 990,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 952,
											"end": 990,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 952,
											"end": 990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 942,
											"end": 990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 942,
											"end": 990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 736,
											"end": 996,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 736,
											"end": 996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 736,
											"end": 996,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 736,
											"end": 996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 736,
											"end": 996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 736,
											"end": 996,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1135,
											"end": 1144,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1145,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1150,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1167,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 1115,
											"end": 1167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1165,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1167,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 1115,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 1186,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1215,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 1268,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1253,
											"end": 1271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1234,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 1234,
											"end": 1272,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1272,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 1234,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1319,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1304,
											"end": 1322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1323,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1329,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1334,
											"end": 1588,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1334,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1438,
											"end": 1461,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1434,
											"end": 1466,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1483,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 1431,
											"end": 1483,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1481,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1483,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 1431,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 1502,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1531,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1582,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1588,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1754,
											"end": 1777,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1750,
											"end": 1782,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1799,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 1747,
											"end": 1799,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1785,
											"end": 1797,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 1747,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1835,
											"end": 1844,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1882,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1905,
											"end": 1907,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1908,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1891,
											"end": 1925,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1891,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 1891,
											"end": 1925,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1919,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1891,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 1891,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 2011,
											"end": 2018,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 1960,
											"end": 2019,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1960,
											"end": 2019,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 1960,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2046,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2158,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2158,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 2139,
											"end": 2175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2175,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 2139,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2260,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2250,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 2210,
											"end": 2271,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2210,
											"end": 2271,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 2210,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2184,
											"end": 2271,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 2344,
											"end": 2382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 2344,
											"end": 2382,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2344,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 2344,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 2388,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2393,
											"end": 2573,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2393,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2491,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2503,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2508,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2525,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 2473,
											"end": 2525,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2523,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2525,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 2473,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2567,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2573,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2978,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2978,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3129,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3149,
											"end": 3162,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3162,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 3139,
											"end": 3283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3215,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3200,
											"end": 3203,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3196,
											"end": 3216,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3193,
											"end": 3194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3240,
											"end": 3244,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 3237,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3268,
											"end": 3272,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3283,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 3139,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3317,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 3323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2978,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3328,
											"end": 3925,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3328,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3501,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3537,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3629,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3731,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3737,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3700,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3738,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 3608,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3760,
											"end": 3773,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3848,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 3757,
											"end": 3848,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3807,
											"end": 3829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3838,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3848,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 3757,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 3911,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3888,
											"end": 3903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3884,
											"end": 3913,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3914,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3914,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3869,
											"end": 3914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 3918,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 3919,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3925,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3328,
											"end": 3925,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3930,
											"end": 4277,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3930,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4173,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "43616C6C6572206973206E6F7420746865205661756C74000000000000000000"
										},
										{
											"begin": 4205,
											"end": 4207,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4236,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4268,
											"end": 4270,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4277,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7519,
											"end": 7857,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 7519,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7724,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7703,
											"end": 7724,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7762,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1499595B9D1C985B9D0818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7772,
											"end": 7816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7850,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7833,
											"end": 7851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7833,
											"end": 7851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7857,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10971,
											"end": 11099,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 10971,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11011,
											"end": 11014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11042,
											"end": 11043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11035,
											"end": 11036,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11032,
											"end": 11045,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11068,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 11029,
											"end": 11068,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11084,
											"end": 11093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11084,
											"end": 11093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 11099,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11104,
											"end": 11321,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 11104,
											"end": 11321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11144,
											"end": 11145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11160,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 11160,
											"end": 11292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11214,
											"end": 11224,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 11209,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 11205,
											"end": 11225,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11195,
											"end": 11226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 11246,
											"end": 11247,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11239,
											"end": 11254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11277,
											"end": 11281,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11267,
											"end": 11282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11160,
											"end": 11292,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 11160,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11306,
											"end": 11315,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11104,
											"end": 11321,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11326,
											"end": 11494,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 11326,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11366,
											"end": 11373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11430,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11434,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11418,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11414,
											"end": 11435,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11409,
											"end": 11410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11395,
											"end": 11412,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11391,
											"end": 11436,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 11388,
											"end": 11459,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11479,
											"end": 11488,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11479,
											"end": 11488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11326,
											"end": 11494,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11499,
											"end": 11624,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 11499,
											"end": 11624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11567,
											"end": 11568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11561,
											"end": 11569,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11558,
											"end": 11592,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11558,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 11558,
											"end": 11592,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 11572,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11609,
											"end": 11618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11609,
											"end": 11618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11499,
											"end": 11624,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11629,
											"end": 12009,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 11629,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11709,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11704,
											"end": 11716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11716,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11751,
											"end": 11763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11751,
											"end": 11763,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11751,
											"end": 11763,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 11772,
											"end": 11833,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11826,
											"end": 11830,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 11818,
											"end": 11824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11831,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11804,
											"end": 11831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11804,
											"end": 11831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11833,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 11772,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11879,
											"end": 11881,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11871,
											"end": 11877,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11868,
											"end": 11882,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11848,
											"end": 11866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11845,
											"end": 11883,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 12003,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 11842,
											"end": 12003,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11925,
											"end": 11935,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 11920,
											"end": 11923,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 11916,
											"end": 11936,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 11913,
											"end": 11914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 11964,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 11957,
											"end": 11958,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11950,
											"end": 11965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11985,
											"end": 11986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11978,
											"end": 11993,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 12003,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 11842,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11842,
											"end": 12003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 12009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 12009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 12009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 12009,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12014,
											"end": 12141,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 12014,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12075,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 12070,
											"end": 12073,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12066,
											"end": 12086,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12063,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12106,
											"end": 12110,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 12103,
											"end": 12104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12096,
											"end": 12111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12130,
											"end": 12134,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12127,
											"end": 12128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12146,
											"end": 12273,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 12146,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12217,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 12202,
											"end": 12205,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 12198,
											"end": 12218,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 12195,
											"end": 12196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12188,
											"end": 12219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12238,
											"end": 12242,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 12235,
											"end": 12236,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12228,
											"end": 12243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12262,
											"end": 12266,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12259,
											"end": 12260,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12252,
											"end": 12267,
											"name": "REVERT",
											"source": 8
										}
									],
									".data": {
										"213EC435BF70ECF7A12C7C7C1673CBE2D6484D181DBA26B798A55F8ABC8E6650": "53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
									}
								},
								"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
							}
						},
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"changeSupply(uint256)": "39a7919f",
							"claimGovernance()": "5d36b190",
							"creditsBalanceOf(address)": "f9854bfc",
							"creditsBalanceOfHighres(address)": "e5c4fffe",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"governor()": "0c340a24",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,address)": "077f224a",
							"isGovernor()": "c7af3352",
							"isUpgraded(address)": "95ef84b9",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonRebasingCreditsPerToken(address)": "609350cd",
							"nonRebasingSupply()": "e696393a",
							"rebaseOptIn()": "f51b0fd4",
							"rebaseOptOut()": "c2376dff",
							"rebaseState(address)": "456ee286",
							"rebasingCredits()": "077f22b7",
							"rebasingCreditsHighres()": "7d0d66ff",
							"rebasingCreditsPerToken()": "6691cb3d",
							"rebasingCreditsPerTokenHighres()": "7a46a9c5",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferGovernance(address)": "d38bfff4",
							"vaultAddress()": "430bf08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorshipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebasingCredits\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebasingCreditsPerToken\",\"type\":\"uint256\"}],\"name\":\"TotalSupplyUpdatedHighres\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"changeSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"creditsBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"creditsBalanceOfHighres\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nameArg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbolArg\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isUpgraded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonRebasingCreditsPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonRebasingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseOptIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebaseOptOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rebaseState\",\"outputs\":[{\"internalType\":\"enum OUSD.RebaseOptions\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebasingCredits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebasingCreditsHighres\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebasingCreditsPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebasingCreditsPerTokenHighres\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that _owner has allowed to      `_spender`.\",\"params\":{\"_owner\":\"The address which owns the funds.\",\"_spender\":\"The address which will spend the funds.\"},\"returns\":{\"_0\":\"The number of tokens still available for the _spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens      on behalf of msg.sender. This method is included for ERC20      compatibility. `increaseAllowance` and `decreaseAllowance` should be      used instead.      Changing an allowance with this method brings the risk that someone      may transfer both the old and the new allowance - if they are both      greater than zero - if a transfer transaction is mined before the      later approve() call is mined.\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_account\":\"Address to query the balance of.\"},\"returns\":{\"_0\":\"A uint256 representing the amount of base units owned by the         specified address.\"}},\"burn(address,uint256)\":{\"details\":\"Burns tokens, decreasing totalSupply.\"},\"changeSupply(uint256)\":{\"details\":\"Modify the supply without minting new tokens. This uses a change in      the exchange rate between \\\"credits\\\" and OUSD tokens to change balances.\",\"params\":{\"_newTotalSupply\":\"New total supply of OUSD.\"}},\"claimGovernance()\":{\"details\":\"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.\"},\"creditsBalanceOf(address)\":{\"details\":\"Gets the credits balance of the specified address.Backwards compatible with old low res credits per token.\",\"params\":{\"_account\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"(uint256, uint256) Credit balance and credits per token of the         address\"}},\"creditsBalanceOfHighres(address)\":{\"details\":\"Gets the credits balance of the specified address.\",\"params\":{\"_account\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"(uint256, uint256, bool) Credit balance, credits per token of the         address, and isUpgraded\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner has allowed to `_spender`.\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance        by.\"}},\"governor()\":{\"details\":\"Returns the address of the current Governor.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner has allowed to      `_spender`.      This method should be used instead of approve() to avoid the double      approval vulnerability described above.\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"isGovernor()\":{\"details\":\"Returns true if the caller is the current Governor.\"},\"mint(address,uint256)\":{\"details\":\"Mints new tokens, increasing totalSupply.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"rebaseOptIn()\":{\"details\":\"Add a contract address to the non-rebasing exception list. The address's balance will be part of rebases and the account will be exposed to upside and downside.\"},\"rebaseOptOut()\":{\"details\":\"Explicitly mark that an address is non-rebasing.\"},\"rebasingCredits()\":{\"returns\":{\"_0\":\"Low resolution total number of rebasing credits\"}},\"rebasingCreditsHighres()\":{\"returns\":{\"_0\":\"High resolution total number of rebasing credits\"}},\"rebasingCreditsPerToken()\":{\"returns\":{\"_0\":\"Low resolution rebasingCreditsPerToken\"}},\"rebasingCreditsPerTokenHighres()\":{\"returns\":{\"_0\":\"High resolution rebasingCreditsPerToken\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"returns\":{\"_0\":\"The total supply of OUSD.\"}},\"transfer(address,uint256)\":{\"details\":\"Transfer tokens to a specified address.\",\"params\":{\"_to\":\"the address to transfer to.\",\"_value\":\"the amount to be transferred.\"},\"returns\":{\"_0\":\"true on success.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another.\",\"params\":{\"_from\":\"The address you want to send tokens from.\",\"_to\":\"The address you want to transfer to.\",\"_value\":\"The amount of tokens to be transferred.\"}},\"transferGovernance(address)\":{\"details\":\"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete\",\"params\":{\"_newGovernor\":\"Address of the new Governor\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"NOTE that this is an ERC20 token but the invariant that the sum of balanceOf(x) for all x is not >= totalSupply(). This is a consequence of the rebasing design. Any integrations with OUSD should be aware.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/OUSD.sol\":\"OUSD\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/contracts/governance/Governable.sol\":{\"keccak256\":\"0xe5e82e9c9b2611b9cc82e2a047cb7fed850133eecc5a070ee61093c348bcc976\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://752df48fe4a3578b2a08f7518a261eb340bc7940ecb3d24929d7c2af1ed24c91\",\"dweb:/ipfs/QmbHseRzFZqTuoKzavEgWSZveBMPT5hjgcZP2xWUUgaTTU\"]},\"contracts/contracts/token/OUSD.sol\":{\"keccak256\":\"0x653afc81b05dd312a45685fb2b65de73668201bed98a08bf7aec6fde929efe5d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://37d6e70c8be70224f0b2f3f05c00a85b46e787c90f9a4a81027cd29dae126f10\",\"dweb:/ipfs/Qmasde3MeE4bJLBfKpY9TuwzwqhJZtP13gHB31Me9EWUxf\"]},\"contracts/contracts/utils/Initializable.sol\":{\"keccak256\":\"0x515139ff0a6efe16dff538df1289eed43bde7f5ee01e7bf17dab7da94f09179b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a3ead74590e09e3c829b41f038bce447762fbd27701b22cc3c1f9fc8d12c3055\",\"dweb:/ipfs/QmT3B1cNxa3aZqxKhCoeYqdysYSncCuMZoYjwevwfPKv2T\"]},\"contracts/contracts/utils/InitializableERC20Detailed.sol\":{\"keccak256\":\"0xddd9256551469bd7fafff2f46435069cc54479888511fdc6558fec6e8796ed07\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2968671a30ddcebd5316e07404b914b37583c5938693d5545b16b1c74b7973ca\",\"dweb:/ipfs/QmPENU1cDPvTURZBmHYW2WcY8L8uwQj9rWwWfAgGFRRVNs\"]},\"contracts/contracts/utils/StableMath.sol\":{\"keccak256\":\"0x83669eb50b245f9f48eeefe79034a3cb889675e46e2bee37f93caa2766284a69\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a88f8a24e6eba852fe3a238e3fa3a3873296f7384a8262a2b82be4f3e3b397ca\",\"dweb:/ipfs/Qmc4HUmDiy6qN33xa2EpznnMz3XJbrWAhWLkzaBVezj8gK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2091,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2094,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2134,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 2146,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_____gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)100_storage"
							},
							{
								"astId": 2148,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_name",
								"offset": 0,
								"slot": "151",
								"type": "t_string_storage"
							},
							{
								"astId": 2150,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_symbol",
								"offset": 0,
								"slot": "152",
								"type": "t_string_storage"
							},
							{
								"astId": 2152,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_decimals",
								"offset": 0,
								"slot": "153",
								"type": "t_uint8"
							},
							{
								"astId": 949,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "154",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_allowances",
								"offset": 0,
								"slot": "155",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 961,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "vaultAddress",
								"offset": 0,
								"slot": "156",
								"type": "t_address"
							},
							{
								"astId": 965,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_creditBalances",
								"offset": 0,
								"slot": "157",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 967,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_rebasingCredits",
								"offset": 0,
								"slot": "158",
								"type": "t_uint256"
							},
							{
								"astId": 969,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "_rebasingCreditsPerToken",
								"offset": 0,
								"slot": "159",
								"type": "t_uint256"
							},
							{
								"astId": 971,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "nonRebasingSupply",
								"offset": 0,
								"slot": "160",
								"type": "t_uint256"
							},
							{
								"astId": 975,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "nonRebasingCreditsPerToken",
								"offset": 0,
								"slot": "161",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 980,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "rebaseState",
								"offset": 0,
								"slot": "162",
								"type": "t_mapping(t_address,t_enum(RebaseOptions)940)"
							},
							{
								"astId": 984,
								"contract": "contracts/contracts/token/OUSD.sol:OUSD",
								"label": "isUpgraded",
								"offset": 0,
								"slot": "163",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)100_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[100]",
								"numberOfBytes": "3200"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(RebaseOptions)940": {
								"encoding": "inplace",
								"label": "enum OUSD.RebaseOptions",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_enum(RebaseOptions)940)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum OUSD.RebaseOptions)",
								"numberOfBytes": "32",
								"value": "t_enum(RebaseOptions)940"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "NOTE that this is an ERC20 token but the invariant that the sum of balanceOf(x) for all x is not >= totalSupply(). This is a consequence of the rebasing design. Any integrations with OUSD should be aware.",
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/utils/Initializable.sol\":{\"keccak256\":\"0x515139ff0a6efe16dff538df1289eed43bde7f5ee01e7bf17dab7da94f09179b\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a3ead74590e09e3c829b41f038bce447762fbd27701b22cc3c1f9fc8d12c3055\",\"dweb:/ipfs/QmT3B1cNxa3aZqxKhCoeYqdysYSncCuMZoYjwevwfPKv2T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2091,
								"contract": "contracts/contracts/utils/Initializable.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2094,
								"contract": "contracts/contracts/utils/Initializable.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2134,
								"contract": "contracts/contracts/utils/Initializable.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/InitializableERC20Detailed.sol": {
				"InitializableERC20Detailed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard. Converted from openzeppelin/contracts/token/ERC20/ERC20Detailed.sol",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard. Converted from openzeppelin/contracts/token/ERC20/ERC20Detailed.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/InitializableERC20Detailed.sol\":\"InitializableERC20Detailed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/contracts/utils/InitializableERC20Detailed.sol\":{\"keccak256\":\"0xddd9256551469bd7fafff2f46435069cc54479888511fdc6558fec6e8796ed07\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2968671a30ddcebd5316e07404b914b37583c5938693d5545b16b1c74b7973ca\",\"dweb:/ipfs/QmPENU1cDPvTURZBmHYW2WcY8L8uwQj9rWwWfAgGFRRVNs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2146,
								"contract": "contracts/contracts/utils/InitializableERC20Detailed.sol:InitializableERC20Detailed",
								"label": "_____gap",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)100_storage"
							},
							{
								"astId": 2148,
								"contract": "contracts/contracts/utils/InitializableERC20Detailed.sol:InitializableERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "100",
								"type": "t_string_storage"
							},
							{
								"astId": 2150,
								"contract": "contracts/contracts/utils/InitializableERC20Detailed.sol:InitializableERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "101",
								"type": "t_string_storage"
							},
							{
								"astId": 2152,
								"contract": "contracts/contracts/utils/InitializableERC20Detailed.sol:InitializableERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "102",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_array(t_uint256)100_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[100]",
								"numberOfBytes": "3200"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/StableMath.sol": {
				"StableMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"FULL_SCALE": {
								"details": "Scaling unit for use in specific calculations, where 1 * 10**18, or 1e18 represents a unit '1'"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/utils/StableMath.sol\":293:3967  library StableMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/utils/StableMath.sol\":293:3967  library StableMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bdeb2ad17b3805431257b7e1f6c1b515c5ffba279a418b5abb5cc210262e460e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdeb2ad17b3805431257b7e1f6c1b515c5ffba279a418b5abb5cc210262e460e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xEB 0x2A 0xD1 PUSH28 0x3805431257B7E1F6C1B515C5FFBA279A418B5ABB5CC210262E460E64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "293:3674:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;293:3674:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdeb2ad17b3805431257b7e1f6c1b515c5ffba279a418b5abb5cc210262e460e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xEB 0x2A 0xD1 PUSH28 0x3805431257B7E1F6C1B515C5FFBA279A418B5ABB5CC210262E460E64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "293:3674:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"divPrecisely(uint256,uint256)": "infinite",
								"mulTruncate(uint256,uint256)": "infinite",
								"mulTruncateCeil(uint256,uint256)": "infinite",
								"mulTruncateScale(uint256,uint256,uint256)": "infinite",
								"scaleBy(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 293,
									"end": 3967,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdeb2ad17b3805431257b7e1f6c1b515c5ffba279a418b5abb5cc210262e460e64736f6c63430008070033",
									".code": [
										{
											"begin": 293,
											"end": 3967,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 293,
											"end": 3967,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"FULL_SCALE\":{\"details\":\"Scaling unit for use in specific calculations, where 1 * 10**18, or 1e18 represents a unit '1'\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/StableMath.sol\":\"StableMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/contracts/utils/StableMath.sol\":{\"keccak256\":\"0x83669eb50b245f9f48eeefe79034a3cb889675e46e2bee37f93caa2766284a69\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a88f8a24e6eba852fe3a238e3fa3a3873296f7384a8262a2b82be4f3e3b397ca\",\"dweb:/ipfs/Qmc4HUmDiy6qN33xa2EpznnMz3XJbrWAhWLkzaBVezj8gK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							372
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372
							],
							"name": "Address",
							"nameLocation": "202:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1241:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 88,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 87,
												"id": 93,
												"nodeType": "Return",
												"src": "1458:30:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1195:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1235:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 85,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:1"
									},
									"scope": 372,
									"src": "1175:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "2483:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 106,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$372",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$372",
																				"typeString": "library Address"
																			}
																		],
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 104,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 109,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2526:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:1"
											},
											{
												"assignments": [
													115,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "2578:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 114,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 122,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 116,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2596:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "2647:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:1"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2431:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:1"
									},
									"scope": 372,
									"src": "2412:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3555:84:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "3585:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3593:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 139,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															146,
															166
														],
														"referencedDeclaration": 166,
														"src": "3572:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 138,
												"id": 144,
												"nodeType": "Return",
												"src": "3565:67:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3488:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3504:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3541:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:1"
									},
									"scope": 372,
									"src": "3466:173:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4008:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4047:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4055:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 162,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4064:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 158,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															236
														],
														"referencedDeclaration": 236,
														"src": "4025:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 157,
												"id": 164,
												"nodeType": "Return",
												"src": "4018:59:1"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3892:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3916:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3943:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3994:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:1"
									},
									"scope": 372,
									"src": "3861:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4589:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4628:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4636:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 181,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4642:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 178,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															186,
															236
														],
														"referencedDeclaration": 236,
														"src": "4606:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 177,
												"id": 184,
												"nodeType": "Return",
												"src": "4599:94:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4486:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4510:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4575:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:1"
									},
									"scope": 372,
									"src": "4446:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5127:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 203,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$372",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$372",
																				"typeString": "library Address"
																			}
																		],
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 201,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5170:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "5247:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 212,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "5236:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:1"
											},
											{
												"assignments": [
													219,
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "5300:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 218,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "5314:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 220,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "5367:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 222,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "5341:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 224,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5360:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5406:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 231,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "5415:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 232,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5427:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 229,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "5389:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 199,
												"id": 234,
												"nodeType": "Return",
												"src": "5382:58:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4988:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5012:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5062:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5113:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:1"
									},
									"scope": 372,
									"src": "4948:499:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "5724:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 247,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5760:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 246,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															253,
															288
														],
														"referencedDeclaration": 288,
														"src": "5741:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 245,
												"id": 251,
												"nodeType": "Return",
												"src": "5734:80:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "5652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "5668:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:1"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "5710:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:1"
									},
									"scope": 372,
									"src": "5624:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "6163:228:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 267,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "6192:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 266,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "6181:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:1"
											},
											{
												"assignments": [
													273,
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "6252:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 272,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "6266:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 274,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"arguments": [
														{
															"id": 278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "6311:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "6293:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 282,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "6350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 283,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "6359:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 284,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6371:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 281,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "6333:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 264,
												"id": 286,
												"nodeType": "Return",
												"src": "6326:58:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "6042:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "6066:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "6093:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "6149:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:1"
									},
									"scope": 372,
									"src": "6005:386:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "6667:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "6705:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "6713:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 298,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															305,
															340
														],
														"referencedDeclaration": 340,
														"src": "6684:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 297,
												"id": 303,
												"nodeType": "Return",
												"src": "6677:84:1"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6600:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6616:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6653:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:1"
									},
									"scope": 372,
									"src": "6570:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "7109:232:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 319,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "7138:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 318,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "7127:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:1"
											},
											{
												"assignments": [
													325,
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "7200:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 324,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "7214:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 332,
												"initialValue": {
													"arguments": [
														{
															"id": 330,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "7261:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "7241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 334,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "7300:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 335,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "7309:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 336,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "7321:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 333,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "7283:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 316,
												"id": 338,
												"nodeType": "Return",
												"src": "7276:58:1"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6993:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "7017:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "7044:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "7095:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:1"
									},
									"scope": 372,
									"src": "6954:387:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "7721:532:1",
										"statements": [
											{
												"condition": {
													"id": 352,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 343,
													"src": "7735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 368,
													"nodeType": "Block",
													"src": "7792:455:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 356,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "7876:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 366,
																"nodeType": "Block",
																"src": "8184:53:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 363,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 347,
																					"src": "8209:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 362,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 365,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:1"
																	}
																]
															},
															"id": 367,
															"nodeType": "IfStatement",
															"src": "7872:365:1",
															"trueBody": {
																"id": 361,
																"nodeType": "Block",
																"src": "7899:279:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:1"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 345,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 345,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 360,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:1"
																	}
																]
															}
														}
													]
												},
												"id": 369,
												"nodeType": "IfStatement",
												"src": "7731:516:1",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "7744:42:1",
													"statements": [
														{
															"expression": {
																"id": 353,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "7765:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 351,
															"id": 354,
															"nodeType": "Return",
															"src": "7758:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:1",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7618:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7651:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7707:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:1"
									},
									"scope": 372,
									"src": "7561:692:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 373,
							"src": "194:8061:1",
							"usedErrors": []
						}
					],
					"src": "101:8155:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							684
						]
					},
					"id": 685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 375,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 684,
							"linearizedBaseContracts": [
								684
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 405,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															388
														],
														"declarations": [
															{
																"constant": false,
																"id": 388,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 405,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 392,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 394,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 400,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 386,
															"id": 399,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 402,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 403,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 386,
														"id": 404,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 684,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 433,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 420,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 426,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 418,
															"id": 425,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 428,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 429,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 418,
														"id": 432,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 684,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 447,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 454,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 446,
															"id": 453,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															456
														],
														"declarations": [
															{
																"constant": false,
																"id": 456,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 475,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 455,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 460,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 461,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 462,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 464,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 470,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 446,
															"id": 469,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 472,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 473,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 446,
														"id": 474,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 684,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 503,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 496,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 494,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 488,
															"id": 495,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 498,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 499,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 501,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 488,
														"id": 502,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 684,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 531,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 524,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 522,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 516,
															"id": 523,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 526,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 527,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 529,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 516,
														"id": 530,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 684,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 544,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 542,
												"id": 546,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 684,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 558,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 559,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 557,
												"id": 561,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 684,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 574,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 572,
												"id": 576,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 684,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 588,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 589,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 587,
												"id": 591,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 684,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 603,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 604,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 606,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 684,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 631,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 621,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 622,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 624,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 620,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 626,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 627,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 628,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 619,
														"id": 630,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 684,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 656,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 646,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 649,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 645,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 651,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 652,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 653,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 644,
														"id": 655,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 684,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 681,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 671,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 674,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 670,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 676,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 677,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 678,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 669,
														"id": 680,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 684,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 685,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"contracts/contracts/governance/Governable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/governance/Governable.sol",
					"exportedSymbols": {
						"Governable": [
							901
						]
					},
					"id": 902,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "65:294:3",
								"text": " @title OUSD Governable Contract\n @dev Copy of the openzeppelin Ownable.sol contract with nomenclature change\n      from owner to governor and renounce methods removed. Does not use\n      Context.sol like Ownable.sol does for simplification.\n @author Origin Protocol Inc"
							},
							"fullyImplemented": true,
							"id": 901,
							"linearizedBaseContracts": [
								901
							],
							"name": "Governable",
							"nameLocation": "370:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 690,
									"mutability": "constant",
									"name": "governorPosition",
									"nameLocation": "520:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 901,
									"src": "495:119:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 688,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307837626561313338393566613739643238333165306139653238656465646533303039393030356135306436353264383935376366386136303765653663613461",
										"id": 689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "548:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_56048057425666810188752082616944818219155651917637142059693061807260393982538_by_1",
											"typeString": "int_const 5604...(69 digits omitted)...2538"
										},
										"value": "0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 693,
									"mutability": "constant",
									"name": "pendingGovernorPosition",
									"nameLocation": "692:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 901,
									"src": "667:126:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 691,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "667:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834346334643330623265616164353133306164373063336261363937323733303536366633653633353961623833653830306439303563363162316335316462",
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "727:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31105032298311905643374494432355501752964520468510919922994212410675129242075_by_1",
											"typeString": "int_const 3110...(69 digits omitted)...2075"
										},
										"value": "0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 696,
									"mutability": "constant",
									"name": "reentryStatusPosition",
									"nameLocation": "869:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 901,
									"src": "844:124:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 694,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "844:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835336266343233653438656439306539376430326162306562616231336232613233356136626662653963333231383437643563313735333333616334353335",
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "902:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37879891416239577192351676265510261015593290603114627883703428043940859495733_by_1",
											"typeString": "int_const 3787...(69 digits omitted)...5733"
										},
										"value": "0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 699,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1050:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 901,
									"src": "1033:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 697,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1033:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 698,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1065:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 702,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1090:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 901,
									"src": "1073:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 700,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1073:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 701,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1101:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 708,
									"name": "PendingGovernorshipTransfer",
									"nameLocation": "1117:27:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousGovernor",
												"nameLocation": "1171:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1155:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "1214:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1198:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:88:3"
									},
									"src": "1111:122:3"
								},
								{
									"anonymous": false,
									"id": 714,
									"name": "GovernorshipTransferred",
									"nameLocation": "1247:23:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousGovernor",
												"nameLocation": "1297:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1281:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "1340:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1324:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:88:3"
									},
									"src": "1241:118:3"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "1483:107:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1507:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1507:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 718,
														"name": "_setGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1494:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1494:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "1494:24:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1566:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1558:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 724,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1558:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1558:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 728,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "1570:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1570:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 723,
														"name": "GovernorshipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "1534:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "EmitStatement",
												"src": "1529:53:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1367:96:3",
										"text": " @dev Initializes the contract setting the deployer as the initial Governor."
									},
									"id": 733,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:2:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1483:0:3"
									},
									"scope": 901,
									"src": "1469:121:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "1724:37:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 739,
														"name": "_governor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "1742:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 738,
												"id": 741,
												"nodeType": "Return",
												"src": "1735:18:3"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "1598:70:3",
										"text": " @dev Returns the address of the current Governor."
									},
									"functionSelector": "0c340a24",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "governor",
									"nameLocation": "1683:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:2:3"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1715:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:9:3"
									},
									"scope": 901,
									"src": "1674:87:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "1910:129:3",
										"statements": [
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1929:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 754,
														"src": "1921:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 749,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"id": 751,
													"name": "governorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "1940:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:35:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1976:56:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1991:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2012:8:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2006:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:15:3"
															},
															"variableNames": [
																{
																	"name": "governorOut",
																	"nodeType": "YulIdentifier",
																	"src": "1991:11:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 747,
														"isOffset": false,
														"isSlot": false,
														"src": "1991:11:3",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "2012:8:3",
														"valueSize": 1
													}
												],
												"id": 753,
												"nodeType": "InlineAssembly",
												"src": "1967:65:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1769:70:3",
										"text": " @dev Returns the address of the current Governor."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_governor",
									"nameLocation": "1854:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1863:2:3"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "governorOut",
												"nameLocation": "1897:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "1889:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:21:3"
									},
									"scope": 901,
									"src": "1845:194:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2231:140:3",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2250:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "2242:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 761,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2242:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"id": 763,
													"name": "pendingGovernorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 693,
													"src": "2261:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:42:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2304:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2319:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2344:8:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2338:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:15:3"
															},
															"variableNames": [
																{
																	"name": "pendingGovernor",
																	"nodeType": "YulIdentifier",
																	"src": "2319:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "2319:15:3",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "2344:8:3",
														"valueSize": 1
													}
												],
												"id": 765,
												"nodeType": "InlineAssembly",
												"src": "2295:69:3"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2047:70:3",
										"text": " @dev Returns the address of the pending Governor."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_pendingGovernor",
									"nameLocation": "2132:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:2:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "pendingGovernor",
												"nameLocation": "2209:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2201:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:25:3"
									},
									"scope": 901,
									"src": "2123:248:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2491:82:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 771,
																"name": "isGovernor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "2510:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2510:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742074686520476f7665726e6f72",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2524:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b",
																"typeString": "literal_string \"Caller is not the Governor\""
															},
															"value": "Caller is not the Governor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b",
																"typeString": "literal_string \"Caller is not the Governor\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2502:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2502:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "2502:51:3"
											},
											{
												"id": 776,
												"nodeType": "PlaceholderStatement",
												"src": "2564:1:3"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2379:82:3",
										"text": " @dev Throws if called by any account other than the Governor."
									},
									"id": 778,
									"name": "onlyGovernor",
									"nameLocation": "2476:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2488:2:3"
									},
									"src": "2467:106:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "2713:51:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 784,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2731:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2731:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 786,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2745:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2745:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2731:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 783,
												"id": 789,
												"nodeType": "Return",
												"src": "2724:32:3"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2581:77:3",
										"text": " @dev Returns true if the caller is the current Governor."
									},
									"functionSelector": "c7af3352",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGovernor",
									"nameLocation": "2673:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:2:3"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2707:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2707:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:6:3"
									},
									"scope": 901,
									"src": "2664:100:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2824:128:3",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2843:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "2835:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 796,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2835:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"id": 798,
													"name": "governorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "2854:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2835:35:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2890:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2912:8:3"
																	},
																	{
																		"name": "newGovernor",
																		"nodeType": "YulIdentifier",
																		"src": "2922:11:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2905:29:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2905:29:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 793,
														"isOffset": false,
														"isSlot": false,
														"src": "2922:11:3",
														"valueSize": 1
													},
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "2912:8:3",
														"valueSize": 1
													}
												],
												"id": 800,
												"nodeType": "InlineAssembly",
												"src": "2881:64:3"
											}
										]
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setGovernor",
									"nameLocation": "2781:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "2802:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2794:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2793:21:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2824:0:3"
									},
									"scope": 901,
									"src": "2772:180:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "3360:674:3",
										"statements": [
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "3379:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "3371:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 805,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3371:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"id": 807,
													"name": "reentryStatusPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "3390:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3371:40:3"
											},
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "_reentry_status",
														"nameLocation": "3430:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "3422:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3422:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"nodeType": "VariableDeclarationStatement",
												"src": "3422:23:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3465:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3480:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "3505:8:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "3499:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:15:3"
															},
															"variableNames": [
																{
																	"name": "_reentry_status",
																	"nodeType": "YulIdentifier",
																	"src": "3480:15:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 810,
														"isOffset": false,
														"isSlot": false,
														"src": "3480:15:3",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "3505:8:3",
														"valueSize": 1
													}
												],
												"id": 812,
												"nodeType": "InlineAssembly",
												"src": "3456:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "_reentry_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "3617:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 815,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "3636:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3617:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e742063616c6c",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3646:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb",
																"typeString": "literal_string \"Reentrant call\""
															},
															"value": "Reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb",
																"typeString": "literal_string \"Reentrant call\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3609:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "3609:54:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "3772:8:3"
																	},
																	{
																		"name": "_ENTERED",
																		"nodeType": "YulIdentifier",
																		"src": "3782:8:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3765:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:26:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3765:26:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "3782:8:3",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "3772:8:3",
														"valueSize": 1
													}
												],
												"id": 820,
												"nodeType": "InlineAssembly",
												"src": "3741:61:3"
											},
											{
												"id": 821,
												"nodeType": "PlaceholderStatement",
												"src": "3814:1:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3971:56:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "3993:8:3"
																	},
																	{
																		"name": "_NOT_ENTERED",
																		"nodeType": "YulIdentifier",
																		"src": "4003:12:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3986:30:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "4003:12:3",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "3993:8:3",
														"valueSize": 1
													}
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "3962:65:3"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2960:370:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 824,
									"name": "nonReentrant",
									"nameLocation": "3345:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3357:2:3"
									},
									"src": "3336:698:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "4101:135:3",
										"statements": [
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "4120:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "4112:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 829,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4112:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 832,
												"initialValue": {
													"id": 831,
													"name": "pendingGovernorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 693,
													"src": "4131:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4112:42:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4174:55:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "4196:8:3"
																	},
																	{
																		"name": "newGovernor",
																		"nodeType": "YulIdentifier",
																		"src": "4206:11:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:29:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4189:29:3"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 826,
														"isOffset": false,
														"isSlot": false,
														"src": "4206:11:3",
														"valueSize": 1
													},
													{
														"declaration": 830,
														"isOffset": false,
														"isSlot": false,
														"src": "4196:8:3",
														"valueSize": 1
													}
												],
												"id": 833,
												"nodeType": "InlineAssembly",
												"src": "4165:64:3"
											}
										]
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPendingGovernor",
									"nameLocation": "4051:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "4079:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4071:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4071:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:21:3"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4101:0:3"
									},
									"scope": 901,
									"src": "4042:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "4563:122:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4594:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 843,
														"name": "_setPendingGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "4574:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4574:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "4574:33:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 848,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "4651:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4651:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "4664:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 847,
														"name": "PendingGovernorshipTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "4623:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4623:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "EmitStatement",
												"src": "4618:59:3"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "4244:241:3",
										"text": " @dev Transfers Governance of the contract to a new account (`newGovernor`).\n Can only be called by the current Governor. Must be claimed for this to complete\n @param _newGovernor Address of the new Governor"
									},
									"functionSelector": "d38bfff4",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 841,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 840,
												"name": "onlyGovernor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 778,
												"src": "4550:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4550:12:3"
										}
									],
									"name": "transferGovernance",
									"nameLocation": "4500:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "4527:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4519:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4518:22:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4563:0:3"
									},
									"scope": 901,
									"src": "4491:194:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "4875:187:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 859,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4908:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4908:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 861,
																	"name": "_pendingGovernor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "4922:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4922:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4908:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f6d706c6574652074686520636c61696d",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4955:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a",
																"typeString": "literal_string \"Only the pending Governor can complete the claim\""
															},
															"value": "Only the pending Governor can complete the claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a",
																"typeString": "literal_string \"Only the pending Governor can complete the claim\""
															}
														],
														"id": 858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4886:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:130:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "4886:130:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 868,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5043:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5043:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 867,
														"name": "_changeGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "5027:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5027:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "5027:27:3"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "4693:140:3",
										"text": " @dev Claim Governance of the contract to a new account (`newGovernor`).\n Can only be called by the new Governor."
									},
									"functionSelector": "5d36b190",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimGovernance",
									"nameLocation": "4848:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:2:3"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4875:0:3"
									},
									"scope": 901,
									"src": "4839:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "5281:187:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 880,
																"name": "_newGovernor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "5300:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5324:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5316:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 881,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5316:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5316:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5300:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720476f7665726e6f722069732061646472657373283029",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5328:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62",
																"typeString": "literal_string \"New Governor is address(0)\""
															},
															"value": "New Governor is address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62",
																"typeString": "literal_string \"New Governor is address(0)\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5292:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5292:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "5292:65:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 890,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "5397:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5397:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "5410:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 889,
														"name": "GovernorshipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5373:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "EmitStatement",
												"src": "5368:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "5447:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 895,
														"name": "_setGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "5434:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5434:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "5434:26:3"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "5070:149:3",
										"text": " @dev Change Governance of the contract to a new account (`newGovernor`).\n @param _newGovernor Address of the new Governor"
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeGovernor",
									"nameLocation": "5234:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "5258:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5250:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:22:3"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5281:0:3"
									},
									"scope": 901,
									"src": "5225:243:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 902,
							"src": "361:5110:3",
							"usedErrors": []
						}
					],
					"src": "38:5435:3"
				},
				"id": 3
			},
			"contracts/contracts/token/OUSD.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/OUSD.sol",
					"exportedSymbols": {
						"Address": [
							372
						],
						"Governable": [
							901
						],
						"Initializable": [
							2135
						],
						"InitializableERC20Detailed": [
							2203
						],
						"OUSD": [
							2086
						],
						"SafeMath": [
							684
						],
						"StableMath": [
							2362
						]
					},
					"id": 2087,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 903,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 685,
							"src": "220:75:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 904,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "229:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 373,
							"src": "297:68:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 906,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "306:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 909,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 2136,
							"src": "369:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 908,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "378:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/utils/InitializableERC20Detailed.sol",
							"file": "../utils/InitializableERC20Detailed.sol",
							"id": 911,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 2204,
							"src": "430:85:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 910,
										"name": "InitializableERC20Detailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "439:26:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/utils/StableMath.sol",
							"file": "../utils/StableMath.sol",
							"id": 913,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 2363,
							"src": "517:53:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 912,
										"name": "StableMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "526:10:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/governance/Governable.sol",
							"file": "../governance/Governable.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 902,
							"src": "572:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 914,
										"name": "Governable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "581:10:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2135,
										"src": "880:13:4"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "880:13:4"
								},
								{
									"baseName": {
										"id": 919,
										"name": "InitializableERC20Detailed",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "895:26:4"
									},
									"id": 920,
									"nodeType": "InheritanceSpecifier",
									"src": "895:26:4"
								},
								{
									"baseName": {
										"id": 921,
										"name": "Governable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 901,
										"src": "923:10:4"
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "923:10:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "634:225:4",
								"text": " NOTE that this is an ERC20 token but the invariant that the sum of\n balanceOf(x) for all x is not >= totalSupply(). This is a consequence of the\n rebasing design. Any integrations with OUSD should be aware."
							},
							"fullyImplemented": true,
							"id": 2086,
							"linearizedBaseContracts": [
								2086,
								901,
								2203,
								77,
								2135
							],
							"name": "OUSD",
							"nameLocation": "872:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 925,
									"libraryName": {
										"id": 923,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 684,
										"src": "947:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "941:27:4",
									"typeName": {
										"id": 924,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "960:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 928,
									"libraryName": {
										"id": 926,
										"name": "StableMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2362,
										"src": "980:10:4"
									},
									"nodeType": "UsingForDirective",
									"src": "974:29:4",
									"typeName": {
										"id": 927,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "995:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 936,
									"name": "TotalSupplyUpdatedHighres",
									"nameLocation": "1017:25:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "1061:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1053:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebasingCredits",
												"nameLocation": "1091:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1083:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": false,
												"mutability": "mutable",
												"name": "rebasingCreditsPerToken",
												"nameLocation": "1125:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1117:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:113:4"
									},
									"src": "1011:145:4"
								},
								{
									"canonicalName": "OUSD.RebaseOptions",
									"id": 940,
									"members": [
										{
											"id": 937,
											"name": "NotSet",
											"nameLocation": "1194:6:4",
											"nodeType": "EnumValue",
											"src": "1194:6:4"
										},
										{
											"id": 938,
											"name": "OptOut",
											"nameLocation": "1211:6:4",
											"nodeType": "EnumValue",
											"src": "1211:6:4"
										},
										{
											"id": 939,
											"name": "OptIn",
											"nameLocation": "1228:5:4",
											"nodeType": "EnumValue",
											"src": "1228:5:4"
										}
									],
									"name": "RebaseOptions",
									"nameLocation": "1169:13:4",
									"nodeType": "EnumDefinition",
									"src": "1164:76:4"
								},
								{
									"constant": true,
									"id": 947,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "1273:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1248:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 941,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1248:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "1286:11:4",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1295:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 943,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1287:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint128_$",
													"typeString": "type(uint128)"
												},
												"typeName": {
													"id": 942,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:4",
													"typeDescriptions": {}
												}
											},
											"id": 945,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1287:10:4",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3eaaf86b",
									"id": 949,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1334:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1319:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1319:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 955,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1409:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1353:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 954,
										"keyType": {
											"id": 950,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1361:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1353:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 953,
											"keyType": {
												"id": 951,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1380:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1372:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 952,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1391:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "430bf08a",
									"id": 961,
									"mutability": "mutable",
									"name": "vaultAddress",
									"nameLocation": "1442:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1427:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 956,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1427:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 959,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1465:1:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 958,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1457:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 957,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1457:7:4",
												"typeDescriptions": {}
											}
										},
										"id": 960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1457:10:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 965,
									"mutability": "mutable",
									"name": "_creditBalances",
									"nameLocation": "1510:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1474:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 964,
										"keyType": {
											"id": 962,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1482:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1474:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 963,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1493:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 967,
									"mutability": "mutable",
									"name": "_rebasingCredits",
									"nameLocation": "1548:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1532:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 966,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1532:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 969,
									"mutability": "mutable",
									"name": "_rebasingCreditsPerToken",
									"nameLocation": "1587:24:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1571:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 968,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1571:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e696393a",
									"id": 971,
									"mutability": "mutable",
									"name": "nonRebasingSupply",
									"nameLocation": "1775:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1760:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 970,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1760:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "609350cd",
									"id": 975,
									"mutability": "mutable",
									"name": "nonRebasingCreditsPerToken",
									"nameLocation": "1834:26:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1799:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 974,
										"keyType": {
											"id": 972,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1807:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1799:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 973,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1818:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "456ee286",
									"id": 980,
									"mutability": "mutable",
									"name": "rebaseState",
									"nameLocation": "1908:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1867:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_RebaseOptions_$940_$",
										"typeString": "mapping(address => enum OUSD.RebaseOptions)"
									},
									"typeName": {
										"id": 979,
										"keyType": {
											"id": 976,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1875:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1867:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_RebaseOptions_$940_$",
											"typeString": "mapping(address => enum OUSD.RebaseOptions)"
										},
										"valueType": {
											"id": 978,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 977,
												"name": "RebaseOptions",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 940,
												"src": "1886:13:4"
											},
											"referencedDeclaration": 940,
											"src": "1886:13:4",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_RebaseOptions_$940",
												"typeString": "enum OUSD.RebaseOptions"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95ef84b9",
									"id": 984,
									"mutability": "mutable",
									"name": "isUpgraded",
									"nameLocation": "1961:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1926:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 983,
										"keyType": {
											"id": 981,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1934:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1926:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 982,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1945:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 987,
									"mutability": "constant",
									"name": "RESOLUTION_INCREASE",
									"nameLocation": "2005:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "1980:50:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 985,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1980:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316539",
										"id": 986,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2027:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"value": "1e9"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "2204:164:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "_nameArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "2254:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 1004,
															"name": "_symbolArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "2264:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"hexValue": "3138",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2276:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															}
														],
														"expression": {
															"id": 1000,
															"name": "InitializableERC20Detailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "2215:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_InitializableERC20Detailed_$2203_$",
																"typeString": "type(contract InitializableERC20Detailed)"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2175,
														"src": "2215:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
															"typeString": "function (string memory,string memory,uint8)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2215:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "2215:64:4"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "_rebasingCreditsPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2290:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653138",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2317:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "2290:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2290:31:4"
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1012,
														"name": "vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "2332:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1013,
														"name": "_vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "2347:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2332:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "2332:28:4"
											}
										]
									},
									"functionSelector": "077f224a",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 995,
												"name": "onlyGovernor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 778,
												"src": "2179:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2179:12:4"
										},
										{
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2130,
												"src": "2192:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2192:11:4"
										}
									],
									"name": "initialize",
									"nameLocation": "2048:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "_nameArg",
												"nameLocation": "2085:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2069:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2069:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "_symbolArg",
												"nameLocation": "2120:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2104:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2104:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "_vaultAddress",
												"nameLocation": "2149:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2141:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:111:4"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2204:0:4"
									},
									"scope": 2086,
									"src": "2039:329:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "2475:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "vaultAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "2494:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1022,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2510:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2510:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2494:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865205661756c74",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0849845f914f07adde3d3cbcfba0b83d83ccda38f916f4825f70ce179f185f56",
																"typeString": "literal_string \"Caller is not the Vault\""
															},
															"value": "Caller is not the Vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0849845f914f07adde3d3cbcfba0b83d83ccda38f916f4825f70ce179f185f56",
																"typeString": "literal_string \"Caller is not the Vault\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2486:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2486:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "2486:62:4"
											},
											{
												"id": 1028,
												"nodeType": "PlaceholderStatement",
												"src": "2559:1:4"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "2376:72:4",
										"text": " @dev Verifies that the caller is the Vault contract"
									},
									"id": 1030,
									"name": "onlyVault",
									"nameLocation": "2463:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2472:2:4"
									},
									"src": "2454:114:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2698:38:4",
										"statements": [
											{
												"expression": {
													"id": 1037,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "2716:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "2709:19:4"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "2576:54:4",
										"text": " @return The total supply of OUSD."
									},
									"functionSelector": "18160ddd",
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2645:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:4"
									},
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2689:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:9:4"
									},
									"scope": 2086,
									"src": "2636:100:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "2882:72:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "_rebasingCreditsPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "2900:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1047,
														"name": "RESOLUTION_INCREASE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "2927:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2900:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "2893:53:4"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2744:67:4",
										"text": " @return Low resolution rebasingCreditsPerToken"
									},
									"functionSelector": "6691cb3d",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebasingCreditsPerToken",
									"nameLocation": "2826:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2849:2:4"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2873:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2872:9:4"
									},
									"scope": 2086,
									"src": "2817:137:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "3101:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1057,
														"name": "_rebasingCredits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "3119:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1058,
														"name": "RESOLUTION_INCREASE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3138:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3119:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1056,
												"id": 1060,
												"nodeType": "Return",
												"src": "3112:45:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "2962:76:4",
										"text": " @return Low resolution total number of rebasing credits"
									},
									"functionSelector": "077f22b7",
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebasingCredits",
									"nameLocation": "3053:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3068:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "3092:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3091:9:4"
									},
									"scope": 2086,
									"src": "3044:121:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "3319:50:4",
										"statements": [
											{
												"expression": {
													"id": 1068,
													"name": "_rebasingCreditsPerToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 969,
													"src": "3337:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1069,
												"nodeType": "Return",
												"src": "3330:31:4"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "3173:68:4",
										"text": " @return High resolution rebasingCreditsPerToken"
									},
									"functionSelector": "7a46a9c5",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebasingCreditsPerTokenHighres",
									"nameLocation": "3256:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:2:4"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "3310:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3310:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3309:9:4"
									},
									"scope": 2086,
									"src": "3247:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "3524:42:4",
										"statements": [
											{
												"expression": {
													"id": 1077,
													"name": "_rebasingCredits",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 967,
													"src": "3542:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1076,
												"id": 1078,
												"nodeType": "Return",
												"src": "3535:23:4"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "3377:77:4",
										"text": " @return High resolution total number of rebasing credits"
									},
									"functionSelector": "7d0d66ff",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rebasingCreditsHighres",
									"nameLocation": "3469:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3491:2:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3515:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3515:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3514:9:4"
									},
									"scope": 2086,
									"src": "3460:106:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "3934:160:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1089,
															"name": "_creditBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3949:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1091,
														"indexExpression": {
															"id": 1090,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3965:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3949:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3978:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3949:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "IfStatement",
												"src": "3945:44:4",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3988:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1088,
													"id": 1095,
													"nodeType": "Return",
													"src": "3981:8:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1102,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "4076:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1101,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "4059:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4059:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1097,
																"name": "_creditBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "4020:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1099,
															"indexExpression": {
																"id": 1098,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "4036:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4020:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "divPrecisely",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2361,
														"src": "4020:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4020:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1105,
												"nodeType": "Return",
												"src": "4000:86:4"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "3574:237:4",
										"text": " @dev Gets the balance of the specified address.\n @param _account Address to query the balance of.\n @return A uint256 representing the amount of base units owned by the\n         specified address."
									},
									"functionSelector": "70a08231",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3826:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1085,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3893:8:4"
									},
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3844:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3836:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:18:4"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "3920:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3919:9:4"
									},
									"scope": 2086,
									"src": "3817:277:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "4533:556:4",
										"statements": [
											{
												"assignments": [
													1118
												],
												"declarations": [
													{
														"constant": false,
														"id": 1118,
														"mutability": "mutable",
														"name": "cpt",
														"nameLocation": "4552:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "4544:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4544:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"arguments": [
														{
															"id": 1120,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "4575:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1119,
														"name": "_creditsPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "4558:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4558:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4544:40:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "cpt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "4599:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31653237",
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4606:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000000"
														},
														"value": "1e27"
													},
													"src": "4599:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "4923:159:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1133,
																				"name": "_creditBalances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 965,
																				"src": "4964:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1135,
																			"indexExpression": {
																				"id": 1134,
																				"name": "_account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "4980:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4964:25:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1136,
																			"name": "RESOLUTION_INCREASE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "4992:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4964:47:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1138,
																			"name": "cpt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "5030:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1139,
																			"name": "RESOLUTION_INCREASE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "5036:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5030:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4945:125:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 1116,
															"id": 1142,
															"nodeType": "Return",
															"src": "4938:132:4"
														}
													]
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "4595:487:4",
												"trueBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "4612:305:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"baseExpression": {
																			"id": 1126,
																			"name": "_creditBalances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "4874:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1128,
																		"indexExpression": {
																			"id": 1127,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "4890:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4874:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "cpt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "4901:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4873:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 1116,
															"id": 1131,
															"nodeType": "Return",
															"src": "4866:39:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "4102:310:4",
										"text": " @dev Gets the credits balance of the specified address.\n @dev Backwards compatible with old low res credits per token.\n @param _account The address to query the balance of.\n @return (uint256, uint256) Credit balance and credits per token of the\n         address"
									},
									"functionSelector": "f9854bfc",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "creditsBalanceOf",
									"nameLocation": "4427:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4452:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4444:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4443:18:4"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4510:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4519:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:18:4"
									},
									"scope": 2086,
									"src": "4418:671:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "5540:158:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 1158,
																"name": "_creditBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "5573:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1160,
															"indexExpression": {
																"id": 1159,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "5589:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5573:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1162,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "5630:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1161,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "5613:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5613:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1164,
																	"name": "isUpgraded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "5654:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1166,
																"indexExpression": {
																	"id": 1165,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "5665:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5654:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5678:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "5654:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1169,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5558:132:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1170,
												"nodeType": "Return",
												"src": "5551:139:4"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "5097:259:4",
										"text": " @dev Gets the credits balance of the specified address.\n @param _account The address to query the balance of.\n @return (uint256, uint256, bool) Credit balance, credits per token of the\n         address, and isUpgraded"
									},
									"functionSelector": "e5c4fffe",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "creditsBalanceOfHighres",
									"nameLocation": "5371:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "5403:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "5395:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5394:18:4"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "5475:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "5497:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "5519:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5519:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:74:4"
									},
									"scope": 2086,
									"src": "5362:336:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "6019:323:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "6038:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6053:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6045:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1185,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6045:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6045:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6038:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f207a65726f2061646472657373",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6057:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																"typeString": "literal_string \"Transfer to zero address\""
															},
															"value": "Transfer to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																"typeString": "literal_string \"Transfer to zero address\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6030:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6030:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "6030:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1194,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "6117:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1196,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6137:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6137:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1195,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "6127:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6127:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6117:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722067726561746572207468616e2062616c616e6365",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6163:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0",
																"typeString": "literal_string \"Transfer greater than balance\""
															},
															"value": "Transfer greater than balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0",
																"typeString": "literal_string \"Transfer greater than balance\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6095:110:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "6095:110:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6235:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6235:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "6247:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6252:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "_executeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "6218:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6218:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "6218:41:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6286:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6286:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "6298:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "6303:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6277:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6277:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "EmitStatement",
												"src": "6272:38:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6330:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1182,
												"id": 1218,
												"nodeType": "Return",
												"src": "6323:11:4"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "5706:197:4",
										"text": " @dev Transfer tokens to a specified address.\n @param _to the address to transfer to.\n @param _value the amount to be transferred.\n @return true on success."
									},
									"functionSelector": "a9059cbb",
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5918:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1179,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5981:8:4"
									},
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5935:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "5927:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5948:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "5940:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5926:29:4"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "6008:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6008:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:6:4"
									},
									"scope": 2086,
									"src": "5909:433:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "6738:383:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1234,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "6757:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6772:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6764:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1235,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6764:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6764:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6757:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f207a65726f2061646472657373",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6776:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																"typeString": "literal_string \"Transfer to zero address\""
															},
															"value": "Transfer to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																"typeString": "literal_string \"Transfer to zero address\""
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6749:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "6749:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "6822:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1246,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "6842:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1245,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "6832:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6832:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6822:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722067726561746572207468616e2062616c616e6365",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6850:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0",
																"typeString": "literal_string \"Transfer greater than balance\""
															},
															"value": "Transfer greater than balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c8f70b11527b301db60d355886dec6a75c6e6d45211832ade7c0a93a36779a0",
																"typeString": "literal_string \"Transfer greater than balance\""
															}
														],
														"id": 1243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6814:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6814:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "6814:68:4"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1252,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "6895:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1256,
															"indexExpression": {
																"id": 1253,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "6907:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6895:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1257,
														"indexExpression": {
															"expression": {
																"id": 1254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6914:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6914:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6895:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1265,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "6977:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1258,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "6928:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1260,
																	"indexExpression": {
																		"id": 1259,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "6940:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6928:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1263,
																"indexExpression": {
																	"expression": {
																		"id": 1261,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6947:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6947:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6928:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 563,
															"src": "6928:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6928:66:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6895:99:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "6895:99:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "7024:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "7031:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1272,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "7036:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1269,
														"name": "_executeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "7007:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7007:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "7007:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1276,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "7070:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "7077:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "7082:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1275,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7061:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7061:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "EmitStatement",
												"src": "7056:33:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7109:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1232,
												"id": 1282,
												"nodeType": "Return",
												"src": "7102:11:4"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "6350:251:4",
										"text": " @dev Transfer tokens from one address to another.\n @param _from The address you want to send tokens from.\n @param _to The address you want to transfer to.\n @param _value The amount of tokens to be transferred."
									},
									"functionSelector": "23b872dd",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6616:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6714:8:4"
									},
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6647:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6639:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6671:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6663:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "6693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:78:4"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "6732:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6732:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6731:6:4"
									},
									"scope": 2086,
									"src": "6607:514:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "7508:1475:4",
										"statements": [
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "isNonRebasingTo",
														"nameLocation": "7524:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "7519:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1294,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7519:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"arguments": [
														{
															"id": 1297,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "7564:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1296,
														"name": "_isNonRebasingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "7542:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7542:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7519:49:4"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "isNonRebasingFrom",
														"nameLocation": "7584:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "7579:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1300,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7579:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"arguments": [
														{
															"id": 1303,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "7626:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1302,
														"name": "_isNonRebasingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "7604:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7604:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7579:53:4"
											},
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "creditsCredited",
														"nameLocation": "7784:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "7776:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7776:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1311,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "7838:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1310,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "7821:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7821:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1308,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "7802:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulTruncate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2280,
														"src": "7802:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7802:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7776:67:4"
											},
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "creditsDeducted",
														"nameLocation": "7862:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1387,
														"src": "7854:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7854:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1320,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "7916:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1319,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "7899:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7899:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1317,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "7880:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulTruncate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2280,
														"src": "7880:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7880:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7854:69:4"
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1324,
															"name": "_creditBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "7936:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1326,
														"indexExpression": {
															"id": 1325,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "7952:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7936:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1331,
																"name": "creditsDeducted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "8002:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "5472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8032:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8b189f21d1893cc7b623479ef5c70d8b66a358ee6faf2498c3a0015a8b6f8d54",
																	"typeString": "literal_string \"Transfer amount exceeds balance\""
																},
																"value": "Transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8b189f21d1893cc7b623479ef5c70d8b66a358ee6faf2498c3a0015a8b6f8d54",
																	"typeString": "literal_string \"Transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1327,
																	"name": "_creditBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "7961:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1329,
																"indexExpression": {
																	"id": 1328,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "7977:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7961:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 633,
															"src": "7961:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7961:115:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7936:140:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "7936:140:4"
											},
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1336,
															"name": "_creditBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8087:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1338,
														"indexExpression": {
															"id": 1337,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "8103:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8087:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1343,
																"name": "creditsCredited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "8135:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1339,
																	"name": "_creditBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "8110:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1341,
																"indexExpression": {
																	"id": 1340,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "8126:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8110:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "8110:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8110:41:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8087:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "8087:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "isNonRebasingTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "8168:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8187:18:4",
														"subExpression": {
															"id": 1348,
															"name": "isNonRebasingFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "8188:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8168:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8574:16:4",
															"subExpression": {
																"id": 1366,
																"name": "isNonRebasingTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "8575:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 1368,
															"name": "isNonRebasingFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "8594:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8574:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1385,
													"nodeType": "IfStatement",
													"src": "8570:406:4",
													"trueBody": {
														"id": 1384,
														"nodeType": "Block",
														"src": "8613:363:4",
														"statements": [
															{
																"expression": {
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1370,
																		"name": "nonRebasingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "8775:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1373,
																				"name": "_value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "8817:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1371,
																				"name": "nonRebasingSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "8795:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 563,
																			"src": "8795:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8795:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8775:49:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1376,
																"nodeType": "ExpressionStatement",
																"src": "8775:49:4"
															},
															{
																"expression": {
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1377,
																		"name": "_rebasingCredits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "8908:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1380,
																				"name": "creditsCredited",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "8948:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1378,
																				"name": "_rebasingCredits",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "8927:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 548,
																			"src": "8927:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8927:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8908:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1383,
																"nodeType": "ExpressionStatement",
																"src": "8908:56:4"
															}
														]
													}
												},
												"id": 1386,
												"nodeType": "IfStatement",
												"src": "8164:812:4",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "8207:357:4",
													"statements": [
														{
															"expression": {
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1351,
																	"name": "nonRebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "8358:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1354,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1291,
																			"src": "8400:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1352,
																			"name": "nonRebasingSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "8378:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "8378:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:29:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8358:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1357,
															"nodeType": "ExpressionStatement",
															"src": "8358:49:4"
														},
														{
															"expression": {
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1358,
																	"name": "_rebasingCredits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "8496:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1361,
																			"name": "creditsDeducted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1316,
																			"src": "8536:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1359,
																			"name": "_rebasingCredits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "8515:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 563,
																		"src": "8515:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8515:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8496:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1364,
															"nodeType": "ExpressionStatement",
															"src": "8496:56:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "7129:260:4",
										"text": " @dev Update the count of non rebasing credits in response to a transfer\n @param _from The address you want to send tokens from.\n @param _to The address you want to transfer to.\n @param _value Amount of OUSD to transfer"
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeTransfer",
									"nameLocation": "7404:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7439:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "7431:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7463:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "7455:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "7485:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "7477:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7420:78:4"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7508:0:4"
									},
									"scope": 2086,
									"src": "7395:1588:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "9437:55:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1399,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "9455:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1401,
														"indexExpression": {
															"id": 1400,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "9467:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9455:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1403,
													"indexExpression": {
														"id": 1402,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "9475:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9455:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1404,
												"nodeType": "Return",
												"src": "9448:36:4"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "8991:307:4",
										"text": " @dev Function to check the amount of tokens that _owner has allowed to\n      `_spender`.\n @param _owner The address which owns the funds.\n @param _spender The address which will spend the funds.\n @return The number of tokens still available for the _spender."
									},
									"functionSelector": "dd62ed3e",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9313:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9396:8:4"
									},
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "9331:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "9323:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9323:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "9347:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "9339:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9322:34:4"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "9423:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9422:9:4"
									},
									"scope": 2086,
									"src": "9304:188:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "10305:137:4",
										"statements": [
											{
												"expression": {
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1417,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "10316:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1421,
															"indexExpression": {
																"expression": {
																	"id": 1418,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10328:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10316:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1422,
														"indexExpression": {
															"id": 1420,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "10340:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10316:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1423,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "10352:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10316:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "10316:42:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1427,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10383:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10383:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "10395:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1430,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "10405:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1426,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "10374:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10374:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "EmitStatement",
												"src": "10369:43:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10430:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1416,
												"id": 1434,
												"nodeType": "Return",
												"src": "10423:11:4"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "9500:685:4",
										"text": " @dev Approve the passed address to spend the specified amount of tokens\n      on behalf of msg.sender. This method is included for ERC20\n      compatibility. `increaseAllowance` and `decreaseAllowance` should be\n      used instead.\n      Changing an allowance with this method brings the risk that someone\n      may transfer both the old and the new allowance - if they are both\n      greater than zero - if a transfer transaction is mined before the\n      later approve() call is mined.\n @param _spender The address which will spend the funds.\n @param _value The amount of tokens to be spent."
									},
									"functionSelector": "095ea7b3",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "10200:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10267:8:4"
									},
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "10216:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "10208:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10208:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "10234:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "10226:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10207:34:4"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "10294:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10294:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10293:6:4"
									},
									"scope": 2086,
									"src": "10191:251:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "10952:222:4",
										"statements": [
											{
												"expression": {
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1446,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "10963:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1450,
															"indexExpression": {
																"expression": {
																	"id": 1447,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10975:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10975:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10963:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1451,
														"indexExpression": {
															"id": 1449,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "10987:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10963:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1459,
																"name": "_addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "11051:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1452,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "10999:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1455,
																	"indexExpression": {
																		"expression": {
																			"id": 1453,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11011:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11011:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10999:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1457,
																"indexExpression": {
																	"id": 1456,
																	"name": "_spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "11023:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10999:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "10999:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10999:64:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10963:100:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "10963:100:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11088:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11088:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "11100:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1467,
																	"name": "_allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "11110:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1470,
																"indexExpression": {
																	"expression": {
																		"id": 1468,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11122:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11122:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11110:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1472,
															"indexExpression": {
																"id": 1471,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "11134:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11110:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1463,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "11079:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11079:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "EmitStatement",
												"src": "11074:70:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11162:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1445,
												"id": 1476,
												"nodeType": "Return",
												"src": "11155:11:4"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "10450:385:4",
										"text": " @dev Increase the amount of tokens that an owner has allowed to\n      `_spender`.\n      This method should be used instead of approve() to avoid the double\n      approval vulnerability described above.\n @param _spender The address which will spend the funds.\n @param _addedValue The amount of tokens to increase the allowance by."
									},
									"functionSelector": "39509351",
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10850:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "10876:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "10868:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_addedValue",
												"nameLocation": "10894:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "10886:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10867:39:4"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "10941:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10941:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10940:6:4"
									},
									"scope": 2086,
									"src": "10841:333:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "11575:381:4",
										"statements": [
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "oldValue",
														"nameLocation": "11594:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "11586:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11586:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1490,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "11605:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1493,
														"indexExpression": {
															"expression": {
																"id": 1491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11617:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11617:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11605:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1495,
													"indexExpression": {
														"id": 1494,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "11629:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11605:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11586:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "_subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "11653:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1498,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "11673:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11653:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "11753:93:4",
													"statements": [
														{
															"expression": {
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1510,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "11768:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1514,
																		"indexExpression": {
																			"expression": {
																				"id": 1511,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11780:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11780:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11768:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1515,
																	"indexExpression": {
																		"id": 1513,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "11792:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11768:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1518,
																			"name": "_subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "11817:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1516,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "11804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 563,
																		"src": "11804:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11804:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11768:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1521,
															"nodeType": "ExpressionStatement",
															"src": "11768:66:4"
														}
													]
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "11649:197:4",
												"trueBody": {
													"id": 1509,
													"nodeType": "Block",
													"src": "11683:64:4",
													"statements": [
														{
															"expression": {
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1500,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "11698:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1504,
																		"indexExpression": {
																			"expression": {
																				"id": 1501,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "11710:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "11710:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11698:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1505,
																	"indexExpression": {
																		"id": 1503,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "11722:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11698:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11734:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11698:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "11698:37:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11870:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11870:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "11882:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1528,
																	"name": "_allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "11892:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1531,
																"indexExpression": {
																	"expression": {
																		"id": 1529,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11904:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11904:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11892:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1533,
															"indexExpression": {
																"id": 1532,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "11916:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11892:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1524,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "11861:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11861:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "EmitStatement",
												"src": "11856:70:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11944:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1487,
												"id": 1537,
												"nodeType": "Return",
												"src": "11937:11:4"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "11182:271:4",
										"text": " @dev Decrease the amount of tokens that an owner has allowed to\n`_spender`.\n @param _spender The address which will spend the funds.\n @param _subtractedValue The amount of tokens to decrease the allowance\n        by."
									},
									"functionSelector": "a457c2d7",
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "11468:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "11494:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "11486:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_subtractedValue",
												"nameLocation": "11512:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "11504:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11504:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11485:44:4"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "11564:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11564:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11563:6:4"
									},
									"scope": 2086,
									"src": "11459:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "12105:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1550,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "12122:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "12132:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "12116:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12116:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "12116:24:4"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "11964:67:4",
										"text": " @dev Mints new tokens, increasing totalSupply."
									},
									"functionSelector": "40c10f19",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1546,
												"name": "onlyVault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "12095:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "12095:9:4"
										}
									],
									"name": "mint",
									"nameLocation": "12046:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "12059:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "12051:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12051:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12077:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "12069:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12050:35:4"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12105:0:4"
									},
									"scope": 2086,
									"src": "12037:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "12511:835:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1566,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "12530:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12550:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12542:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1567,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12542:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12542:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12530:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e7420746f20746865207a65726f2061646472657373",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12554:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587",
																"typeString": "literal_string \"Mint to the zero address\""
															},
															"value": "Mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfc0ec7f03e5010fc5e60d5e839b5983d0c776856dba6d5f0635b73a9b29e587",
																"typeString": "literal_string \"Mint to the zero address\""
															}
														],
														"id": 1565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12522:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12522:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "12522:59:4"
											},
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "isNonRebasingAccount",
														"nameLocation": "12599:20:4",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "12594:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12594:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"arguments": [
														{
															"id": 1578,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "12644:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1577,
														"name": "_isNonRebasingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "12622:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12622:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12594:59:4"
											},
											{
												"assignments": [
													1582
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "creditAmount",
														"nameLocation": "12674:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "12666:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12666:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1586,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "12726:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1585,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "12709:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12709:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1583,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "12689:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulTruncate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2280,
														"src": "12689:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12689:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12666:70:4"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1590,
															"name": "_creditBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "12747:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1592,
														"indexExpression": {
															"id": 1591,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "12763:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12747:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1597,
																"name": "creditAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "12805:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1593,
																	"name": "_creditBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "12775:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1595,
																"indexExpression": {
																	"id": 1594,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "12791:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12775:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "12775:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12775:43:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12747:71:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "12747:71:4"
											},
											{
												"condition": {
													"id": 1601,
													"name": "isNonRebasingAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1576,
													"src": "12983:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1617,
													"nodeType": "Block",
													"src": "13088:80:4",
													"statements": [
														{
															"expression": {
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1610,
																	"name": "_rebasingCredits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "13103:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1613,
																			"name": "creditAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "13143:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1611,
																			"name": "_rebasingCredits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "13122:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "13122:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13122:34:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13103:53:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "13103:53:4"
														}
													]
												},
												"id": 1618,
												"nodeType": "IfStatement",
												"src": "12979:189:4",
												"trueBody": {
													"id": 1609,
													"nodeType": "Block",
													"src": "13005:77:4",
													"statements": [
														{
															"expression": {
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1602,
																	"name": "nonRebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "13020:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1605,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "13062:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1603,
																			"name": "nonRebasingSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "13040:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "13040:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13040:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13020:50:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1608,
															"nodeType": "ExpressionStatement",
															"src": "13020:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1619,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "13180:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1622,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "13212:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1620,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "13195:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "13195:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13195:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13180:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "13180:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1627,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "13241:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1628,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "13256:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13241:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c79",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13268:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b0197ca1a0ca783775c6c4d4922c6e7ba472242093c308b3907998d1f28f1c2",
																"typeString": "literal_string \"Max supply\""
															},
															"value": "Max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b0197ca1a0ca783775c6c4d4922c6e7ba472242093c308b3907998d1f28f1c2",
																"typeString": "literal_string \"Max supply\""
															}
														],
														"id": 1626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13233:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13233:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "13233:48:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13316:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13308:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13308:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13308:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1638,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "13320:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1639,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "13330:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13299:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13299:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "EmitStatement",
												"src": "13294:44:4"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "12156:277:4",
										"text": " @dev Creates `_amount` tokens and assigns them to `_account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1563,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1562,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "12498:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "12498:12:4"
										}
									],
									"name": "_mint",
									"nameLocation": "12448:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "12462:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "12454:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12480:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "12472:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12453:35:4"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12511:0:4"
									},
									"scope": 2086,
									"src": "12439:907:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "13489:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1654,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "13506:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "13515:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "13500:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13500:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "13500:22:4"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "13354:63:4",
										"text": " @dev Burns tokens, decreasing totalSupply."
									},
									"functionSelector": "9dc29fac",
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1651,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1650,
												"name": "onlyVault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "13479:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "13479:9:4"
										}
									],
									"name": "burn",
									"nameLocation": "13432:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13445:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "13437:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13462:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "13454:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13454:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13436:33:4"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13489:0:4"
									},
									"scope": 2086,
									"src": "13423:107:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "13939:1233:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "13958:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13978:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13970:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13970:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13970:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13958:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13982:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5efea9b97bb0c0350137dfc11c89f12801f13899dde247b01e9b8116d87d3b9c",
																"typeString": "literal_string \"Burn from the zero address\""
															},
															"value": "Burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5efea9b97bb0c0350137dfc11c89f12801f13899dde247b01e9b8116d87d3b9c",
																"typeString": "literal_string \"Burn from the zero address\""
															}
														],
														"id": 1669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13950:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13950:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "13950:61:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1679,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "14026:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14037:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14026:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1684,
												"nodeType": "IfStatement",
												"src": "14022:51:4",
												"trueBody": {
													"id": 1683,
													"nodeType": "Block",
													"src": "14040:33:4",
													"statements": [
														{
															"functionReturnParameters": 1668,
															"id": 1682,
															"nodeType": "Return",
															"src": "14055:7:4"
														}
													]
												}
											},
											{
												"assignments": [
													1686
												],
												"declarations": [
													{
														"constant": false,
														"id": 1686,
														"mutability": "mutable",
														"name": "isNonRebasingAccount",
														"nameLocation": "14090:20:4",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "14085:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1685,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14085:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1690,
												"initialValue": {
													"arguments": [
														{
															"id": 1688,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "14135:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1687,
														"name": "_isNonRebasingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "14113:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14113:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14085:59:4"
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "creditAmount",
														"nameLocation": "14163:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "14155:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14155:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1696,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "14215:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1695,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "14198:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14198:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1693,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "14178:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulTruncate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2280,
														"src": "14178:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14178:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14155:70:4"
											},
											{
												"assignments": [
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "currentCredits",
														"nameLocation": "14244:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "14236:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14236:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"initialValue": {
													"baseExpression": {
														"id": 1702,
														"name": "_creditBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "14261:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1704,
													"indexExpression": {
														"id": 1703,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "14277:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14261:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14236:50:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1706,
															"name": "currentCredits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "14373:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1707,
															"name": "creditAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "14391:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14373:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "currentCredits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "14407:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14407:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1712,
															"name": "creditAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "14429:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14407:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14373:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1722,
															"name": "currentCredits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "14561:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1723,
															"name": "creditAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "14578:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14561:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1741,
														"nodeType": "Block",
														"src": "14728:59:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "52656d6f766520657863656564732062616c616e6365",
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14750:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_db4e28494f4730e74127f0f165a2684823f8d8099fc8529ee26a8be235d175bc",
																				"typeString": "literal_string \"Remove exceeds balance\""
																			},
																			"value": "Remove exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_db4e28494f4730e74127f0f165a2684823f8d8099fc8529ee26a8be235d175bc",
																				"typeString": "literal_string \"Remove exceeds balance\""
																			}
																		],
																		"id": 1737,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "14743:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14743:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1740,
																"nodeType": "ExpressionStatement",
																"src": "14743:32:4"
															}
														]
													},
													"id": 1742,
													"nodeType": "IfStatement",
													"src": "14557:230:4",
													"trueBody": {
														"id": 1736,
														"nodeType": "Block",
														"src": "14592:130:4",
														"statements": [
															{
																"expression": {
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1725,
																			"name": "_creditBalances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "14607:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1727,
																		"indexExpression": {
																			"id": 1726,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1662,
																			"src": "14623:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "14607:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1732,
																				"name": "creditAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1692,
																				"src": "14683:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 1728,
																					"name": "_creditBalances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 965,
																					"src": "14635:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1730,
																				"indexExpression": {
																					"id": 1729,
																					"name": "_account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1662,
																					"src": "14651:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14635:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 563,
																			"src": "14635:29:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14635:75:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14607:103:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1735,
																"nodeType": "ExpressionStatement",
																"src": "14607:103:4"
															}
														]
													}
												},
												"id": 1743,
												"nodeType": "IfStatement",
												"src": "14355:432:4",
												"trueBody": {
													"id": 1721,
													"nodeType": "Block",
													"src": "14453:98:4",
													"statements": [
														{
															"expression": {
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1715,
																		"name": "_creditBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14510:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1717,
																	"indexExpression": {
																		"id": 1716,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1662,
																		"src": "14526:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14510:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14538:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14510:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1720,
															"nodeType": "ExpressionStatement",
															"src": "14510:29:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1744,
													"name": "isNonRebasingAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1686,
													"src": "14870:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1760,
													"nodeType": "Block",
													"src": "14975:80:4",
													"statements": [
														{
															"expression": {
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1753,
																	"name": "_rebasingCredits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "14990:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1756,
																			"name": "creditAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "15030:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1754,
																			"name": "_rebasingCredits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "15009:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 563,
																		"src": "15009:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15009:34:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14990:53:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1759,
															"nodeType": "ExpressionStatement",
															"src": "14990:53:4"
														}
													]
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "14866:189:4",
												"trueBody": {
													"id": 1752,
													"nodeType": "Block",
													"src": "14892:77:4",
													"statements": [
														{
															"expression": {
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1745,
																	"name": "nonRebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "14907:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1748,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1664,
																			"src": "14949:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1746,
																			"name": "nonRebasingSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "14927:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 563,
																		"src": "14927:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14927:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14907:50:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1751,
															"nodeType": "ExpressionStatement",
															"src": "14907:50:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "15067:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1765,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "15099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1763,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "15082:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 563,
															"src": "15082:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15082:25:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15067:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "15067:40:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1770,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "15134:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15152:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15144:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15144:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15144:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1775,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "15156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1769,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "15125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15125:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "EmitStatement",
												"src": "15120:44:4"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "13538:323:4",
										"text": " @dev Destroys `_amount` tokens from `_account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `_account` cannot be the zero address.\n - `_account` must have at least `_amount` tokens."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "13926:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "13926:12:4"
										}
									],
									"name": "_burn",
									"nameLocation": "13876:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "13890:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "13882:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13908:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "13900:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13881:35:4"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13939:0:4"
									},
									"scope": 2086,
									"src": "13867:1305:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "15477:199:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1787,
															"name": "nonRebasingCreditsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "15492:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1789,
														"indexExpression": {
															"id": 1788,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "15519:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15492:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15532:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15492:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1799,
													"nodeType": "Block",
													"src": "15611:58:4",
													"statements": [
														{
															"expression": {
																"id": 1797,
																"name": "_rebasingCreditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "15633:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1786,
															"id": 1798,
															"nodeType": "Return",
															"src": "15626:31:4"
														}
													]
												},
												"id": 1800,
												"nodeType": "IfStatement",
												"src": "15488:181:4",
												"trueBody": {
													"id": 1796,
													"nodeType": "Block",
													"src": "15535:70:4",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1792,
																	"name": "nonRebasingCreditsPerToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "15557:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1794,
																"indexExpression": {
																	"id": 1793,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "15584:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15557:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1786,
															"id": 1795,
															"nodeType": "Return",
															"src": "15550:43:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "15180:183:4",
										"text": " @dev Get the credits per token for an account. Returns a fixed amount\n      if the account is non-rebasing.\n @param _account Address of the account."
									},
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_creditsPerToken",
									"nameLocation": "15378:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "15403:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "15395:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15395:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15394:18:4"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "15463:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15463:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15462:9:4"
									},
									"scope": 2086,
									"src": "15369:307:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "15984:259:4",
										"statements": [
											{
												"assignments": [
													1811
												],
												"declarations": [
													{
														"constant": false,
														"id": 1811,
														"mutability": "mutable",
														"name": "isContract",
														"nameLocation": "16000:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "15995:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1810,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15995:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1816,
												"initialValue": {
													"arguments": [
														{
															"id": 1814,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "16032:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1812,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "16013:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$372_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "16013:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16013:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15995:46:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1817,
														"name": "isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "16056:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_RebaseOptions_$940",
															"typeString": "enum OUSD.RebaseOptions"
														},
														"id": 1823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1818,
																"name": "rebaseState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "16070:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_enum$_RebaseOptions_$940_$",
																	"typeString": "mapping(address => enum OUSD.RebaseOptions)"
																}
															},
															"id": 1820,
															"indexExpression": {
																"id": 1819,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "16082:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16070:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RebaseOptions_$940",
																"typeString": "enum OUSD.RebaseOptions"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1821,
																"name": "RebaseOptions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "16095:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RebaseOptions_$940_$",
																	"typeString": "type(enum OUSD.RebaseOptions)"
																}
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "NotSet",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 937,
															"src": "16095:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RebaseOptions_$940",
																"typeString": "enum OUSD.RebaseOptions"
															}
														},
														"src": "16070:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16056:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1830,
												"nodeType": "IfStatement",
												"src": "16052:126:4",
												"trueBody": {
													"id": 1829,
													"nodeType": "Block",
													"src": "16117:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1826,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "16157:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1825,
																	"name": "_ensureRebasingMigration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "16132:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16132:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1828,
															"nodeType": "ExpressionStatement",
															"src": "16132:34:4"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1831,
															"name": "nonRebasingCreditsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "16195:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1833,
														"indexExpression": {
															"id": 1832,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "16222:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16195:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16234:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16195:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1809,
												"id": 1836,
												"nodeType": "Return",
												"src": "16188:47:4"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "15684:221:4",
										"text": " @dev Is an account using rebasing accounting or non-rebasing accounting?\n      Also, ensure contracts are non-rebasing if they have not opted in.\n @param _account Address of the account."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isNonRebasingAccount",
									"nameLocation": "15920:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "15950:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "15942:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15942:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15941:18:4"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "15978:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15978:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15977:6:4"
									},
									"scope": 2086,
									"src": "15911:332:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "16486:880:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1844,
															"name": "nonRebasingCreditsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "16501:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1846,
														"indexExpression": {
															"id": 1845,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "16528:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16501:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16541:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16501:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1888,
												"nodeType": "IfStatement",
												"src": "16497:862:4",
												"trueBody": {
													"id": 1887,
													"nodeType": "Block",
													"src": "16544:815:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1849,
																		"name": "_creditBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "16563:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1851,
																	"indexExpression": {
																		"id": 1850,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "16579:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16563:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16563:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1885,
																"nodeType": "Block",
																"src": "16839:509:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1861,
																					"name": "nonRebasingCreditsPerToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 975,
																					"src": "16974:26:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1863,
																				"indexExpression": {
																					"id": 1862,
																					"name": "_account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1841,
																					"src": "17001:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "16974:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1864,
																				"name": "_rebasingCreditsPerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "17013:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16974:63:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1866,
																		"nodeType": "ExpressionStatement",
																		"src": "16974:63:4"
																	},
																	{
																		"expression": {
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1867,
																				"name": "nonRebasingSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "17103:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1871,
																								"name": "_account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1841,
																								"src": "17155:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 1870,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1107,
																							"src": "17145:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 1872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "17145:19:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1868,
																						"name": "nonRebasingSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 971,
																						"src": "17123:17:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 548,
																					"src": "17123:21:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17123:42:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17103:62:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1875,
																		"nodeType": "ExpressionStatement",
																		"src": "17103:62:4"
																	},
																	{
																		"expression": {
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1876,
																				"name": "_rebasingCredits",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "17226:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1879,
																							"name": "_creditBalances",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 965,
																							"src": "17288:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1881,
																						"indexExpression": {
																							"id": 1880,
																							"name": "_account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1841,
																							"src": "17304:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "17288:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1877,
																						"name": "_rebasingCredits",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 967,
																						"src": "17245:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1878,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 563,
																					"src": "17245:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17245:87:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17226:106:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1884,
																		"nodeType": "ExpressionStatement",
																		"src": "17226:106:4"
																	}
																]
															},
															"id": 1886,
															"nodeType": "IfStatement",
															"src": "16559:789:4",
															"trueBody": {
																"id": 1860,
																"nodeType": "Block",
																"src": "16595:238:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1854,
																					"name": "nonRebasingCreditsPerToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 975,
																					"src": "16774:26:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1856,
																				"indexExpression": {
																					"id": 1855,
																					"name": "_account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1841,
																					"src": "16801:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "16774:36:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31653237",
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16813:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000000000000"
																				},
																				"value": "1e27"
																			},
																			"src": "16774:43:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1859,
																		"nodeType": "ExpressionStatement",
																		"src": "16774:43:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "16251:168:4",
										"text": " @dev Ensures internal account for rebasing and non-rebasing credits and\n      supply is updated following deployment of frozen yield change."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ensureRebasingMigration",
									"nameLocation": "16434:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "16467:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "16459:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16459:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16458:18:4"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16486:0:4"
									},
									"scope": 2086,
									"src": "16425:941:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "17625:858:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1898,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "17666:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "17666:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1897,
																"name": "_isNonRebasingAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "17644:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) returns (bool)"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17644:33:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420686173206e6f74206f70746564206f7574",
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17679:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_112bd22677775ff97cbd7ee72cb1a83f74dc695059c76ad87c6b357ae986d6c2",
																"typeString": "literal_string \"Account has not opted out\""
															},
															"value": "Account has not opted out"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_112bd22677775ff97cbd7ee72cb1a83f74dc695059c76ad87c6b357ae986d6c2",
																"typeString": "literal_string \"Account has not opted out\""
															}
														],
														"id": 1896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17636:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17636:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "17636:71:4"
											},
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "newCreditBalance",
														"nameLocation": "17806:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1961,
														"src": "17798:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17798:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1919,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1915,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "17932:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "17932:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1914,
																"name": "_creditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "17915:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17915:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1911,
																	"name": "_rebasingCreditsPerToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "17871:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 1906,
																		"name": "_creditBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "17825:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1909,
																	"indexExpression": {
																		"expression": {
																			"id": 1907,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "17841:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "17841:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17825:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 578,
																"src": "17825:45:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17825:71:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 593,
														"src": "17825:89:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17825:119:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17798:146:4"
											},
											{
												"expression": {
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1920,
														"name": "nonRebasingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "18000:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1924,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18052:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1923,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "18042:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18042:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1921,
																"name": "nonRebasingSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "18020:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 563,
															"src": "18020:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18020:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18000:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "18000:64:4"
											},
											{
												"expression": {
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1930,
															"name": "_creditBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "18077:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1933,
														"indexExpression": {
															"expression": {
																"id": 1931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18093:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18093:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18077:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1934,
														"name": "newCreditBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "18107:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18077:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "18077:46:4"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1937,
														"name": "_rebasingCredits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "18244:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1940,
																	"name": "_creditBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "18284:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1943,
																"indexExpression": {
																	"expression": {
																		"id": 1941,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18300:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18300:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18284:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1938,
																"name": "_rebasingCredits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "18263:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "18263:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18263:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18244:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "18244:68:4"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1947,
															"name": "rebaseState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "18325:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_RebaseOptions_$940_$",
																"typeString": "mapping(address => enum OUSD.RebaseOptions)"
															}
														},
														"id": 1950,
														"indexExpression": {
															"expression": {
																"id": 1948,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18337:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18337:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18325:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RebaseOptions_$940",
															"typeString": "enum OUSD.RebaseOptions"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1951,
															"name": "RebaseOptions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "18351:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RebaseOptions_$940_$",
																"typeString": "type(enum OUSD.RebaseOptions)"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "OptIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "18351:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RebaseOptions_$940",
															"typeString": "enum OUSD.RebaseOptions"
														}
													},
													"src": "18325:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RebaseOptions_$940",
														"typeString": "enum OUSD.RebaseOptions"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "18325:45:4"
											},
											{
												"expression": {
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "18430:45:4",
													"subExpression": {
														"baseExpression": {
															"id": 1955,
															"name": "nonRebasingCreditsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "18437:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1958,
														"indexExpression": {
															"expression": {
																"id": 1956,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18464:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18464:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18437:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "18430:45:4"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "17374:202:4",
										"text": " @dev Add a contract address to the non-rebasing exception list. The\n address's balance will be part of rebases and the account will be exposed\n to upside and downside."
									},
									"functionSelector": "f51b0fd4",
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1893,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "17612:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "17612:12:4"
										}
									],
									"name": "rebaseOptIn",
									"nameLocation": "17591:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17602:2:4"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17625:0:4"
									},
									"scope": 2086,
									"src": "17582:901:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "18615:623:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18634:34:4",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1970,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18657:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18657:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1969,
																	"name": "_isNonRebasingAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "18635:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) returns (bool)"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18635:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420686173206e6f74206f7074656420696e",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18670:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89eb3a9b2784e42fd3c77b73f3ef39a40aba009f80d03872e249eedd5ef0102a",
																"typeString": "literal_string \"Account has not opted in\""
															},
															"value": "Account has not opted in"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89eb3a9b2784e42fd3c77b73f3ef39a40aba009f80d03872e249eedd5ef0102a",
																"typeString": "literal_string \"Account has not opted in\""
															}
														],
														"id": 1968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18626:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18626:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "18626:71:4"
											},
											{
												"expression": {
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1977,
														"name": "nonRebasingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "18751:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 1981,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18803:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18803:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1980,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "18793:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18793:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1978,
																"name": "nonRebasingSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "18771:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "18771:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18771:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18751:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1986,
												"nodeType": "ExpressionStatement",
												"src": "18751:64:4"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1987,
															"name": "nonRebasingCreditsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "18866:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1990,
														"indexExpression": {
															"expression": {
																"id": 1988,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18893:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18893:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18866:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1991,
														"name": "_rebasingCreditsPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "18907:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18866:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "18866:65:4"
											},
											{
												"expression": {
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1994,
														"name": "_rebasingCredits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "19053:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1997,
																	"name": "_creditBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "19093:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2000,
																"indexExpression": {
																	"expression": {
																		"id": 1998,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "19109:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "19109:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19093:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1995,
																"name": "_rebasingCredits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "19072:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 563,
															"src": "19072:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19072:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19053:68:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "19053:68:4"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2004,
															"name": "rebaseState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "19184:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_RebaseOptions_$940_$",
																"typeString": "mapping(address => enum OUSD.RebaseOptions)"
															}
														},
														"id": 2007,
														"indexExpression": {
															"expression": {
																"id": 2005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19196:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19196:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19184:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RebaseOptions_$940",
															"typeString": "enum OUSD.RebaseOptions"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2008,
															"name": "RebaseOptions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "19210:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RebaseOptions_$940_$",
																"typeString": "type(enum OUSD.RebaseOptions)"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "OptOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "19210:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RebaseOptions_$940",
															"typeString": "enum OUSD.RebaseOptions"
														}
													},
													"src": "19184:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RebaseOptions_$940",
														"typeString": "enum OUSD.RebaseOptions"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "19184:46:4"
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "18491:74:4",
										"text": " @dev Explicitly mark that an address is non-rebasing."
									},
									"functionSelector": "c2376dff",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1966,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1965,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "18602:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "18602:12:4"
										}
									],
									"name": "rebaseOptOut",
									"nameLocation": "18580:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18592:2:4"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18615:0:4"
									},
									"scope": 2086,
									"src": "18571:667:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "19598:929:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2024,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "19617:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19632:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19617:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420696e637265617365203020737570706c79",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19635:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f64f34ea67d55cbad94432fe44d6e3d14d2f697f9122f608cd7c329d2fc6e799",
																"typeString": "literal_string \"Cannot increase 0 supply\""
															},
															"value": "Cannot increase 0 supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f64f34ea67d55cbad94432fe44d6e3d14d2f697f9122f608cd7c329d2fc6e799",
																"typeString": "literal_string \"Cannot increase 0 supply\""
															}
														],
														"id": 2023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19609:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19609:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "19609:53:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2030,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "19679:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2031,
														"name": "_newTotalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "19695:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19679:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "IfStatement",
												"src": "19675:239:4",
												"trueBody": {
													"id": 2040,
													"nodeType": "Block",
													"src": "19712:202:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2034,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "19776:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2035,
																		"name": "_rebasingCredits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "19807:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2036,
																		"name": "_rebasingCreditsPerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "19842:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2033,
																	"name": "TotalSupplyUpdatedHighres",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "19732:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19732:149:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2038,
															"nodeType": "EmitStatement",
															"src": "19727:154:4"
														},
														{
															"functionReturnParameters": 2022,
															"id": 2039,
															"nodeType": "Return",
															"src": "19896:7:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2042,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "19926:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2043,
																"name": "_newTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "19941:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2044,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "19959:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19941:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 2047,
															"name": "_newTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "20011:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "19941:85:4",
														"trueExpression": {
															"id": 2046,
															"name": "MAX_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "19985:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19926:100:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "19926:100:4"
											},
											{
												"expression": {
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2051,
														"name": "_rebasingCreditsPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "20039:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2056,
																		"name": "nonRebasingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "20127:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2054,
																		"name": "_totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "20110:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 563,
																	"src": "20110:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20110:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2052,
																"name": "_rebasingCredits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "20066:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "divPrecisely",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2361,
															"src": "20066:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20066:90:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20039:117:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "20039:117:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2062,
																"name": "_rebasingCreditsPerToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "20177:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20204:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20177:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206368616e676520696e20737570706c79",
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20207:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a405d266ddbd60e705d4f0f39fc0b4b7754f13b0a418911fb09a0ca2f14ca3b",
																"typeString": "literal_string \"Invalid change in supply\""
															},
															"value": "Invalid change in supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a405d266ddbd60e705d4f0f39fc0b4b7754f13b0a418911fb09a0ca2f14ca3b",
																"typeString": "literal_string \"Invalid change in supply\""
															}
														],
														"id": 2061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20169:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20169:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "20169:65:4"
											},
											{
												"expression": {
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2068,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "20247:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2074,
																"name": "nonRebasingSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "20350:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2071,
																		"name": "_rebasingCreditsPerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "20306:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2069,
																		"name": "_rebasingCredits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "20262:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "divPrecisely",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2361,
																	"src": "20262:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20262:69:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "20262:87:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20262:106:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20247:121:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "20247:121:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2079,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "20426:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2080,
															"name": "_rebasingCredits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "20453:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2081,
															"name": "_rebasingCreditsPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "20484:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2078,
														"name": "TotalSupplyUpdatedHighres",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "20386:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20386:133:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "EmitStatement",
												"src": "20381:138:4"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "19246:235:4",
										"text": " @dev Modify the supply without minting new tokens. This uses a change in\n      the exchange rate between \"credits\" and OUSD tokens to change balances.\n @param _newTotalSupply New total supply of OUSD."
									},
									"functionSelector": "39a7919f",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2019,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2018,
												"name": "onlyVault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "19561:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "19561:9:4"
										},
										{
											"id": 2021,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2020,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 824,
												"src": "19580:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "19580:12:4"
										}
									],
									"name": "changeSupply",
									"nameLocation": "19496:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "_newTotalSupply",
												"nameLocation": "19517:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "19509:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19508:25:4"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19598:0:4"
									},
									"scope": 2086,
									"src": "19487:1040:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2087,
							"src": "863:19667:4",
							"usedErrors": []
						}
					],
					"src": "38:20494:4"
				},
				"id": 4
			},
			"contracts/contracts/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							2135
						]
					},
					"id": 2136,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2088,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2135,
							"linearizedBaseContracts": [
								2135
							],
							"name": "Initializable",
							"nameLocation": "83:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "104:75:5",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 2091,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "198:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2135,
									"src": "185:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2090,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "185:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "218:93:5",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 2094,
									"mutability": "mutable",
									"name": "initializing",
									"nameLocation": "330:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 2135,
									"src": "317:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2093,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "317:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "475:393:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2098,
																"name": "initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2094,
																"src": "508:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "524:12:5",
																"subExpression": {
																	"id": 2099,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "525:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "508:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "551:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 2097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "486:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:124:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "486:124:5"
											},
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "628:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 2129,
														"src": "623:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2105,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "623:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "645:13:5",
													"subExpression": {
														"id": 2107,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "646:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "623:35:5"
											},
											{
												"condition": {
													"id": 2110,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2106,
													"src": "673:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2120,
												"nodeType": "IfStatement",
												"src": "669:99:5",
												"trueBody": {
													"id": 2119,
													"nodeType": "Block",
													"src": "689:79:5",
													"statements": [
														{
															"expression": {
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2111,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "719:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "704:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "704:19:5"
														},
														{
															"expression": {
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2115,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2091,
																	"src": "738:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "752:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "738:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2118,
															"nodeType": "ExpressionStatement",
															"src": "738:18:5"
														}
													]
												}
											},
											{
												"id": 2121,
												"nodeType": "PlaceholderStatement",
												"src": "780:1:5"
											},
											{
												"condition": {
													"id": 2122,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2106,
													"src": "798:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2128,
												"nodeType": "IfStatement",
												"src": "794:67:5",
												"trueBody": {
													"id": 2127,
													"nodeType": "Block",
													"src": "814:47:5",
													"statements": [
														{
															"expression": {
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2123,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "829:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "844:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "829:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2126,
															"nodeType": "ExpressionStatement",
															"src": "829:20:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "351:95:5",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 2130,
									"name": "initializer",
									"nameLocation": "461:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:5"
									},
									"src": "452:416:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2134,
									"mutability": "mutable",
									"name": "______gap",
									"nameLocation": "896:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2135,
									"src": "876:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "876:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2133,
										"length": {
											"hexValue": "3530",
											"id": 2132,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "884:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "876:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2136,
							"src": "65:844:5",
							"usedErrors": []
						}
					],
					"src": "38:873:5"
				},
				"id": 5
			},
			"contracts/contracts/utils/InitializableERC20Detailed.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/InitializableERC20Detailed.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"InitializableERC20Detailed": [
							2203
						]
					},
					"id": 2204,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 78,
							"src": "65:72:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2138,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "74:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2141,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "324:6:6"
									},
									"id": 2142,
									"nodeType": "InheritanceSpecifier",
									"src": "324:6:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2140,
								"nodeType": "StructuredDocumentation",
								"src": "141:133:6",
								"text": " @dev Optional functions from the ERC20 standard.\n Converted from openzeppelin/contracts/token/ERC20/ERC20Detailed.sol"
							},
							"fullyImplemented": false,
							"id": 2203,
							"linearizedBaseContracts": [
								2203,
								77
							],
							"name": "InitializableERC20Detailed",
							"nameLocation": "294:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2146,
									"mutability": "mutable",
									"name": "_____gap",
									"nameLocation": "420:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "399:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$100_storage",
										"typeString": "uint256[100]"
									},
									"typeName": {
										"baseType": {
											"id": 2143,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "399:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2145,
										"length": {
											"hexValue": "313030",
											"id": 2144,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "407:3:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "ArrayTypeName",
										"src": "399:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$100_storage_ptr",
											"typeString": "uint256[100]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2148,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "452:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "437:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2147,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "437:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2150,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "479:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "464:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2149,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "464:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2152,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "507:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2203,
									"src": "493:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2151,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "493:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "926:98:6",
										"statements": [
											{
												"expression": {
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2162,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "937:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2163,
														"name": "nameArg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "945:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "937:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "937:15:6"
											},
											{
												"expression": {
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2166,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "963:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2167,
														"name": "symbolArg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2157,
														"src": "973:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "963:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "963:19:6"
											},
											{
												"expression": {
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2170,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "993:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2171,
														"name": "decimalsArg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "1005:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "993:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "993:23:6"
											}
										]
									},
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "525:264:6",
										"text": " @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n these values are immutable: they can only be set once during\n construction.\n @notice To avoid variable shadowing appended `Arg` after arguments name."
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initialize",
									"nameLocation": "804:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "nameArg",
												"nameLocation": "840:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "826:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "826:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "symbolArg",
												"nameLocation": "872:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "858:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "858:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "decimalsArg",
												"nameLocation": "898:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "892:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2158,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "892:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:101:6"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:6"
									},
									"scope": 2203,
									"src": "795:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "1146:31:6",
										"statements": [
											{
												"expression": {
													"id": 2181,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2148,
													"src": "1164:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2180,
												"id": 2182,
												"nodeType": "Return",
												"src": "1157:12:6"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "1032:56:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1103:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:6"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1131:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1131:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:15:6"
									},
									"scope": 2203,
									"src": "1094:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "1350:33:6",
										"statements": [
											{
												"expression": {
													"id": 2190,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2150,
													"src": "1368:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2191,
												"nodeType": "Return",
												"src": "1361:14:6"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "1185:105:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1305:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:2:6"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "1335:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:15:6"
									},
									"scope": 2203,
									"src": "1296:87:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "1994:35:6",
										"statements": [
											{
												"expression": {
													"id": 2199,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2152,
													"src": "2012:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2198,
												"id": 2200,
												"nodeType": "Return",
												"src": "2005:16:6"
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "1391:549:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1955:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1963:2:6"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "1987:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2196,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1987:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:7:6"
									},
									"scope": 2203,
									"src": "1946:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2204,
							"src": "276:1756:6",
							"usedErrors": []
						}
					],
					"src": "38:1996:6"
				},
				"id": 6
			},
			"contracts/contracts/utils/StableMath.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/StableMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							684
						],
						"StableMath": [
							2362
						]
					},
					"id": 2363,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2363,
							"sourceUnit": 685,
							"src": "65:75:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2206,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "74:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2362,
							"linearizedBaseContracts": [
								2362
							],
							"name": "StableMath",
							"nameLocation": "301:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2210,
									"libraryName": {
										"id": 2208,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 684,
										"src": "325:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "319:27:7",
									"typeName": {
										"id": 2209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "354:128:7",
										"text": " @dev Scaling unit for use in specific calculations,\n where 1 * 10**18, or 1e18 represents a unit '1'"
									},
									"id": 2214,
									"mutability": "constant",
									"name": "FULL_SCALE",
									"nameLocation": "513:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 2362,
									"src": "488:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 2213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "526:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "927:179:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2226,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "942:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2227,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "947:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "942:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2242,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "1016:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2243,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "1021:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1016:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2258,
													"nodeType": "IfStatement",
													"src": "1012:68:7",
													"trueBody": {
														"id": 2257,
														"nodeType": "Block",
														"src": "1027:53:7",
														"statements": [
															{
																"expression": {
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2245,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2217,
																		"src": "1042:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1052:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2251,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2249,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2221,
																								"src": "1057:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2250,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2219,
																								"src": "1064:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1057:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2252,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1056:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1052:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2246,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2217,
																				"src": "1046:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 593,
																			"src": "1046:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1046:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1042:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2256,
																"nodeType": "ExpressionStatement",
																"src": "1042:26:7"
															}
														]
													}
												},
												"id": 2259,
												"nodeType": "IfStatement",
												"src": "938:142:7",
												"trueBody": {
													"id": 2241,
													"nodeType": "Block",
													"src": "953:53:7",
													"statements": [
														{
															"expression": {
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2229,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "968:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "978:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2235,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2233,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2219,
																							"src": "983:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2234,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "988:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "983:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2236,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "982:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "978:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2230,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2217,
																			"src": "972:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 578,
																		"src": "972:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "972:22:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "968:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2240,
															"nodeType": "ExpressionStatement",
															"src": "968:26:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2260,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2217,
													"src": "1097:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2225,
												"id": 2261,
												"nodeType": "Return",
												"src": "1090:8:7"
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "663:138:7",
										"text": " @dev Adjust the scale of an integer\n @param to Decimals to scale to\n @param from Decimals to scale from"
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "scaleBy",
									"nameLocation": "816:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "842:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "834:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "862:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "854:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "883:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "875:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:71:7"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "918:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:7"
									},
									"scope": 2362,
									"src": "807:299:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "1635:60:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2274,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "1670:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2275,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "1673:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2276,
															"name": "FULL_SCALE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "1676:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2273,
														"name": "mulTruncateScale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "1653:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1653:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2272,
												"id": 2278,
												"nodeType": "Return",
												"src": "1646:41:7"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "1244:310:7",
										"text": " @dev Multiplies two precise units, and then truncates by the full scale\n @param x Left hand input to multiplication\n @param y Right hand input to multiplication\n @return Result after multiplying the two inputs and then dividing by the shared\n         scale unit"
									},
									"id": 2280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulTruncate",
									"nameLocation": "1569:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1589:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "1581:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1600:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "1592:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:22:7"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "1626:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:9:7"
									},
									"scope": 2362,
									"src": "1560:135:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "2279:185:7",
										"statements": [
											{
												"assignments": [
													2293
												],
												"declarations": [
													{
														"constant": false,
														"id": 2293,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "2376:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2304,
														"src": "2368:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2298,
												"initialValue": {
													"arguments": [
														{
															"id": 2296,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "2386:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2283,
															"src": "2380:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "2380:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2368:20:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2301,
															"name": "scale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "2450:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2299,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "2444:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 593,
														"src": "2444:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2303,
												"nodeType": "Return",
												"src": "2437:19:7"
											}
										]
									},
									"documentation": {
										"id": 2281,
										"nodeType": "StructuredDocumentation",
										"src": "1703:441:7",
										"text": " @dev Multiplies two precise units, and then truncates by the given scale. For example,\n when calculating 90% of 10e18, (10e18 * 9e17) / 1e18 = (9e36) / 1e18 = 9e18\n @param x Left hand input to multiplication\n @param y Right hand input to multiplication\n @param scale Scale unit\n @return Result after multiplying the two inputs and then dividing by the shared\n         scale unit"
									},
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulTruncateScale",
									"nameLocation": "2159:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2194:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2186:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2214:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2206:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "scale",
												"nameLocation": "2234:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2226:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:71:7"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "2270:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:9:7"
									},
									"scope": 2362,
									"src": "2150:314:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "2962:321:7",
										"statements": [
											{
												"assignments": [
													2316
												],
												"declarations": [
													{
														"constant": false,
														"id": 2316,
														"mutability": "mutable",
														"name": "scaled",
														"nameLocation": "3035:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "3027:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3027:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2321,
												"initialValue": {
													"arguments": [
														{
															"id": 2319,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "3050:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2317,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "3044:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "3044:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3044:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3027:25:7"
											},
											{
												"assignments": [
													2323
												],
												"declarations": [
													{
														"constant": false,
														"id": 2323,
														"mutability": "mutable",
														"name": "ceil",
														"nameLocation": "3141:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "3133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3133:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3174:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	}
																],
																"expression": {
																	"id": 2326,
																	"name": "FULL_SCALE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2214,
																	"src": "3159:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 563,
																"src": "3159:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3159:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2324,
															"name": "scaled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "3148:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "3148:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3148:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3133:44:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2334,
															"name": "FULL_SCALE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "3264:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2332,
															"name": "ceil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "3255:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 593,
														"src": "3255:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3255:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2314,
												"id": 2336,
												"nodeType": "Return",
												"src": "3248:27:7"
											}
										]
									},
									"documentation": {
										"id": 2306,
										"nodeType": "StructuredDocumentation",
										"src": "2472:373:7",
										"text": " @dev Multiplies two precise units, and then truncates by the full scale, rounding up the result\n @param x Left hand input to multiplication\n @param y Right hand input to multiplication\n @return Result after multiplying the two inputs and then dividing by the shared\n          scale unit, rounded up to the closest base unit."
									},
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulTruncateCeil",
									"nameLocation": "2860:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2884:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "2876:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2895:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "2887:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:22:7"
									},
									"returnParameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "2948:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2948:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2947:9:7"
									},
									"scope": 2362,
									"src": "2851:432:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "3817:147:7",
										"statements": [
											{
												"assignments": [
													2349
												],
												"declarations": [
													{
														"constant": false,
														"id": 2349,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "3872:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 2360,
														"src": "3864:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3864:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2354,
												"initialValue": {
													"arguments": [
														{
															"id": 2352,
															"name": "FULL_SCALE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "3882:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2350,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "3876:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "3876:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3876:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3864:29:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2357,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "3954:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2355,
															"name": "z",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "3948:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 593,
														"src": "3948:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3948:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2347,
												"id": 2359,
												"nodeType": "Return",
												"src": "3941:15:7"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "3291:412:7",
										"text": " @dev Precisely divides two units, by first scaling the left hand operand. Useful\n      for finding percentage weightings, i.e. 8e18/10e18 = 80% (or 8e17)\n @param x Left hand input to division\n @param y Right hand input to division\n @return Result after multiplying the left operand by the scale, and\n         executing the division on the right hand input."
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divPrecisely",
									"nameLocation": "3718:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3739:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "3731:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3750:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "3742:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:22:7"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "3803:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:9:7"
									},
									"scope": 2362,
									"src": "3709:255:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2363,
							"src": "293:3674:7",
							"usedErrors": []
						}
					],
					"src": "38:3931:7"
				},
				"id": 7
			}
		}
	}
}