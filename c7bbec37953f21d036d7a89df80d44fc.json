{
	"id": "c7bbec37953f21d036d7a89df80d44fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\nimport { Governable } from \"../governance/Governable.sol\";\r\n\r\n/**\r\n * @title BaseGovernedUpgradeabilityProxy\r\n * @dev This contract combines an upgradeability proxy with our governor system.\r\n * It is based on an older version of OpenZeppelins BaseUpgradeabilityProxy\r\n * with Solidity ^0.8.0.\r\n * @author Origin Protocol Inc\r\n */\r\ncontract InitializeGovernedUpgradeabilityProxy is Governable {\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     * @param implementation Address of the new implementation.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Contract initializer with Governor enforcement\r\n     * @param _logic Address of the initial implementation.\r\n     * @param _initGovernor Address of the initial Governor.\r\n     * @param _data Data to send as msg.data to the implementation to initialize\r\n     * the proxied contract.\r\n     * It should include the signature and the parameters of the function to be\r\n     * called, as described in\r\n     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n     * This parameter is optional, if no data is given the initialization call\r\n     * to proxied contract will be skipped.\r\n     */\r\n    function initialize(\r\n        address _logic,\r\n        address _initGovernor,\r\n        bytes memory _data\r\n    ) public payable onlyGovernor {\r\n        require(_implementation() == address(0), \"implementation already set\");\r\n        assert(\r\n            IMPLEMENTATION_SLOT ==\r\n                bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)\r\n        );\r\n        _changeGovernor(_initGovernor);\r\n        _setImplementation(_logic);\r\n        if (_data.length > 0) {\r\n            (bool success, ) = _logic.delegatecall(_data);\r\n            require(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return The address of the proxy admin/it's also the governor.\r\n     */\r\n    function admin() external view returns (address) {\r\n        return _governor();\r\n    }\r\n\r\n    /**\r\n     * @return The address of the implementation.\r\n     */\r\n    function implementation() external view returns (address) {\r\n        return _implementation();\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the backing implementation of the proxy.\r\n     * Only the admin can call this function.\r\n     * @param newImplementation Address of the new implementation.\r\n     */\r\n    function upgradeTo(address newImplementation) external onlyGovernor {\r\n        _upgradeTo(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the backing implementation of the proxy and call a function\r\n     * on the new implementation.\r\n     * This is useful to initialize the proxied contract.\r\n     * @param newImplementation Address of the new implementation.\r\n     * @param data Data to send as msg.data in the low level call.\r\n     * It should include the signature and the parameters of the function to be called, as described in\r\n     * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\r\n        external\r\n        payable\r\n        onlyGovernor\r\n    {\r\n        _upgradeTo(newImplementation);\r\n        (bool success, ) = newImplementation.delegatecall(data);\r\n        require(success);\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function.\r\n     * Implemented entirely in `_fallback`.\r\n     */\r\n    fallback() external payable {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Delegates execution to an implementation contract.\r\n     * This is a low level function that doesn't return to its internal call site.\r\n     * It will return to the external caller whatever the implementation returns.\r\n     * @param _impl Address to delegate.\r\n     */\r\n    function _delegate(address _impl) internal {\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Function that is run as the first thing in the fallback function.\r\n     * Can be redefined in derived contracts to add functionality.\r\n     * Redefinitions must call super._willFallback().\r\n     */\r\n    function _willFallback() internal {}\r\n\r\n    /**\r\n     * @dev fallback implementation.\r\n     * Extracted to enable manual triggering.\r\n     */\r\n    function _fallback() internal {\r\n        _willFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant IMPLEMENTATION_SLOT =\r\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev Returns the current implementation.\r\n     * @return impl Address of the current implementation\r\n     */\r\n    function _implementation() internal view returns (address impl) {\r\n        bytes32 slot = IMPLEMENTATION_SLOT;\r\n        assembly {\r\n            impl := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the proxy to a new implementation.\r\n     * @param newImplementation Address of the new implementation.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the implementation address of the proxy.\r\n     * @param newImplementation Address of the new implementation.\r\n     */\r\n    function _setImplementation(address newImplementation) internal {\r\n        require(\r\n            Address.isContract(newImplementation),\r\n            \"Cannot set a proxy implementation to a non-contract address\"\r\n        );\r\n\r\n        bytes32 slot = IMPLEMENTATION_SLOT;\r\n\r\n        assembly {\r\n            sstore(slot, newImplementation)\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/contracts/governance/Governable.sol": {
				"content": "// SPDX-License-Identifier: agpl-3.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title OUSD Governable Contract\r\n * @dev Copy of the openzeppelin Ownable.sol contract with nomenclature change\r\n *      from owner to governor and renounce methods removed. Does not use\r\n *      Context.sol like Ownable.sol does for simplification.\r\n * @author Origin Protocol Inc\r\n */\r\ncontract Governable {\r\n    // Storage position of the owner and pendingOwner of the contract\r\n    // keccak256(\"OUSD.governor\");\r\n    bytes32 private constant governorPosition =\r\n        0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a;\r\n\r\n    // keccak256(\"OUSD.pending.governor\");\r\n    bytes32 private constant pendingGovernorPosition =\r\n        0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db;\r\n\r\n    // keccak256(\"OUSD.reentry.status\");\r\n    bytes32 private constant reentryStatusPosition =\r\n        0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535;\r\n\r\n    // See OpenZeppelin ReentrancyGuard implementation\r\n    uint256 constant _NOT_ENTERED = 1;\r\n    uint256 constant _ENTERED = 2;\r\n\r\n    event PendingGovernorshipTransfer(\r\n        address indexed previousGovernor,\r\n        address indexed newGovernor\r\n    );\r\n\r\n    event GovernorshipTransferred(\r\n        address indexed previousGovernor,\r\n        address indexed newGovernor\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial Governor.\r\n     */\r\n    constructor() {\r\n        _setGovernor(msg.sender);\r\n        emit GovernorshipTransferred(address(0), _governor());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current Governor.\r\n     */\r\n    function governor() public view returns (address) {\r\n        return _governor();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current Governor.\r\n     */\r\n    function _governor() internal view returns (address governorOut) {\r\n        bytes32 position = governorPosition;\r\n        assembly {\r\n            governorOut := sload(position)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the pending Governor.\r\n     */\r\n    function _pendingGovernor()\r\n        internal\r\n        view\r\n        returns (address pendingGovernor)\r\n    {\r\n        bytes32 position = pendingGovernorPosition;\r\n        assembly {\r\n            pendingGovernor := sload(position)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the Governor.\r\n     */\r\n    modifier onlyGovernor() {\r\n        require(isGovernor(), \"Caller is not the Governor\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current Governor.\r\n     */\r\n    function isGovernor() public view returns (bool) {\r\n        return msg.sender == _governor();\r\n    }\r\n\r\n    function _setGovernor(address newGovernor) internal {\r\n        bytes32 position = governorPosition;\r\n        assembly {\r\n            sstore(position, newGovernor)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        bytes32 position = reentryStatusPosition;\r\n        uint256 _reentry_status;\r\n        assembly {\r\n            _reentry_status := sload(position)\r\n        }\r\n\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_reentry_status != _ENTERED, \"Reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        assembly {\r\n            sstore(position, _ENTERED)\r\n        }\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        assembly {\r\n            sstore(position, _NOT_ENTERED)\r\n        }\r\n    }\r\n\r\n    function _setPendingGovernor(address newGovernor) internal {\r\n        bytes32 position = pendingGovernorPosition;\r\n        assembly {\r\n            sstore(position, newGovernor)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers Governance of the contract to a new account (`newGovernor`).\r\n     * Can only be called by the current Governor. Must be claimed for this to complete\r\n     * @param _newGovernor Address of the new Governor\r\n     */\r\n    function transferGovernance(address _newGovernor) external onlyGovernor {\r\n        _setPendingGovernor(_newGovernor);\r\n        emit PendingGovernorshipTransfer(_governor(), _newGovernor);\r\n    }\r\n\r\n    /**\r\n     * @dev Claim Governance of the contract to a new account (`newGovernor`).\r\n     * Can only be called by the new Governor.\r\n     */\r\n    function claimGovernance() external {\r\n        require(\r\n            msg.sender == _pendingGovernor(),\r\n            \"Only the pending Governor can complete the claim\"\r\n        );\r\n        _changeGovernor(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Change Governance of the contract to a new account (`newGovernor`).\r\n     * @param _newGovernor Address of the new Governor\r\n     */\r\n    function _changeGovernor(address _newGovernor) internal {\r\n        require(_newGovernor != address(0), \"New Governor is address(0)\");\r\n        emit GovernorshipTransferred(_governor(), _newGovernor);\r\n        _setGovernor(_newGovernor);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH27 0x94CC23A4A11DC63306218F061CC43EF4B659696DAAD48B230124A7 BASEFEE DUP5 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7a94cc23a4a11dc63306218f061cc43ef4b659696daad48b230124a74884a064736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/governance/Governable.sol": {
				"Governable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "GovernorshipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "PendingGovernorshipTransfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isGovernor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "transferGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Origin Protocol Inc",
						"details": "Copy of the openzeppelin Ownable.sol contract with nomenclature change      from owner to governor and renounce methods removed. Does not use      Context.sol like Ownable.sol does for simplification.",
						"kind": "dev",
						"methods": {
							"claimGovernance()": {
								"details": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor."
							},
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial Governor."
							},
							"governor()": {
								"details": "Returns the address of the current Governor."
							},
							"isGovernor()": {
								"details": "Returns true if the caller is the current Governor."
							},
							"transferGovernance(address)": {
								"details": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete",
								"params": {
									"_newGovernor": "Address of the new Governor"
								}
							}
						},
						"title": "OUSD Governable Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/governance/Governable.sol\":361:5471  contract Governable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/governance/Governable.sol\":1469:1590  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\n  tag_4\n    /* \"contracts/contracts/governance/Governable.sol\":1507:1517  msg.sender */\n  caller\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n  sstore\n    /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n  jump\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\ntag_4:\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n  sload\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  0x00\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  dup3\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  log3\n    /* \"contracts/contracts/governance/Governable.sol\":361:5471  contract Governable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\nsub_0: assembly {\n        /* \"contracts/contracts/governance/Governable.sol\":361:5471  contract Governable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c340a24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5d36b190\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc7af3352\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd38bfff4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":678:692   */\n      swap1\n      iszero\n        /* \"#utility.yul\":671:693   */\n      iszero\n        /* \"#utility.yul\":653:694   */\n      dup2\n      mstore\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      tag_9\n        /* \"#utility.yul\":513:700   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_6:\n      tag_11\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_8:\n        /* \"contracts/contracts/governance/Governable.sol\":1715:1722  address */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n      tag_22\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n    tag_22:\n        /* \"contracts/contracts/governance/Governable.sol\":1735:1753  return _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_12:\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":2338:2353  sload(position) */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4918  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      tag_27\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1617:1619   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1599:1620   */\n      mstore\n        /* \"#utility.yul\":1656:1658   */\n      0x30\n        /* \"#utility.yul\":1636:1654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1629:1659   */\n      mstore\n        /* \"#utility.yul\":1695:1729   */\n      0x4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f\n        /* \"#utility.yul\":1675:1693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1668:1730   */\n      mstore\n      shl(0x80, 0x6d706c6574652074686520636c61696d)\n        /* \"#utility.yul\":1746:1764   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1739:1785   */\n      mstore\n        /* \"#utility.yul\":1802:1821   */\n      0x84\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      tag_30\n        /* \"contracts/contracts/governance/Governable.sol\":5043:5053  msg.sender */\n      caller\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5042  _changeGovernor */\n      tag_31\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      jump\t// in\n    tag_30:\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_14:\n        /* \"contracts/contracts/governance/Governable.sol\":2707:2711  bool */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n      tag_33\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2741  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":2724:2756  return msg.sender == _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_20:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_35\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_14\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_35:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":889:910   */\n      mstore\n        /* \"#utility.yul\":946:948   */\n      0x1a\n        /* \"#utility.yul\":926:944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":919:949   */\n      mstore\n        /* \"#utility.yul\":985:1013   */\n      0x43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000\n        /* \"#utility.yul\":965:983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":958:1014   */\n      mstore\n        /* \"#utility.yul\":1031:1049   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_28\n        /* \"#utility.yul\":705:1055   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n    tag_36:\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n      tag_40\n        /* \"contracts/contracts/governance/Governable.sol\":4594:4606  _newGovernor */\n      dup2\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":4189:4218  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":4042:4236  function _setPendingGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n    tag_40:\n        /* \"contracts/contracts/governance/Governable.sol\":4664:4676  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n      tag_42\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n      0xa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5300:5326  _newGovernor != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1262:1264   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1244:1265   */\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x1a\n        /* \"#utility.yul\":1281:1299   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1274:1304   */\n      mstore\n        /* \"#utility.yul\":1340:1368   */\n      0x4e657720476f7665726e6f722069732061646472657373283029000000000000\n        /* \"#utility.yul\":1320:1338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1313:1369   */\n      mstore\n        /* \"#utility.yul\":1386:1404   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_28\n        /* \"#utility.yul\":1060:1410   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n    tag_46:\n        /* \"contracts/contracts/governance/Governable.sol\":5410:5422  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n      tag_49\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n      0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n      tag_50\n        /* \"contracts/contracts/governance/Governable.sol\":5447:5459  _newGovernor */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n    tag_50:\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_19:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_56:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_57:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\n    auxdata: 0xa2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_governor_365": {
									"entryPoint": null,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100273360008051602061043f83398151915255565b60008051602061043f833981519152546040516001600160a01b03909116906000907fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a908290a36103c28061007d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c340a24146100515780635d36b19014610076578063c7af335214610080578063d38bfff414610098575b600080fd5b6100596100ab565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100c8565b005b610088610173565b604051901515815260200161006d565b61007e6100a636600461033c565b6101a4565b60006100c360008051602061036d8339815191525490565b905090565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b0316146101685760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084015b60405180910390fd5b61017133610278565b565b600061018b60008051602061036d8339815191525490565b6001600160a01b0316336001600160a01b031614905090565b6101ac610173565b6101f85760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604482015260640161015f565b610220817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b031661024060008051602061036d8339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166102ce5760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f722069732061646472657373283029000000000000604482015260640161015f565b806001600160a01b03166102ee60008051602061036d8339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a36103398160008051602061036d83398151915255565b50565b60006020828403121561034e57600080fd5b81356001600160a01b038116811461036557600080fd5b939250505056fe7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c634300080700337bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x43F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x3C2 DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC340A24 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH2 0x7E PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171 CALLER PUSH2 0x278 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x173 JUMP JUMPDEST PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x220 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x240 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x339 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH28 0xEA13895FA79D2831E0A9E28EDEDE30099005A50D652D8957CF8A607E 0xE6 0xCA 0x4A LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 GT SGT 0xD9 PUSH26 0xFEDADE869DB399BB142BBADAB96CE22EA1649C528B3E74F46736 PUSH31 0x64736F6C634300080700337BEA13895FA79D2831E0A9E28EDEDE30099005A5 0xD PUSH6 0x2D8957CF8A60 PUSH31 0xE6CA4A00000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "361:5110:1:-:0;;;1469:121;;;;;;;;;-1:-1:-1;1494:24:1;1507:10;-1:-1:-1;;;;;;;;;;;2905:29:1;2772:180;1494:24;-1:-1:-1;;;;;;;;;;;2006:15:1;1534:48;;-1:-1:-1;;;;;1534:48:1;;;;1566:1;;1534:48;;1566:1;;1534:48;361:5110;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_changeGovernor_510": {
									"entryPoint": 632,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_governor_365": {
									"entryPoint": null,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pendingGovernor_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPendingGovernor_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimGovernance_483": {
									"entryPoint": 200,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@governor_353": {
									"entryPoint": 171,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isGovernor_401": {
									"entryPoint": 371,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferGovernance_464": {
									"entryPoint": 420,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1829:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:3",
														"type": ""
													}
												],
												"src": "305:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "630:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "618:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "678:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "671:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "577:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "588:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "599:4:3",
														"type": ""
													}
												],
												"src": "513:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "896:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:3"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742074686520476f7665726e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "985:28:3",
																		"type": "",
																		"value": "Caller is not the Governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1023:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1023:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "856:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "870:4:3",
														"type": ""
													}
												],
												"src": "705:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1234:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1244:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1244:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1285:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1281:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:18:3"
																	},
																	{
																		"hexValue": "4e657720476f7665726e6f722069732061646472657373283029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1340:28:3",
																		"type": "",
																		"value": "New Governor is address(0)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1378:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1390:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1378:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1211:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1225:4:3",
														"type": ""
													}
												],
												"src": "1060:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:238:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1617:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:3",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1629:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1690:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1675:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:18:3"
																	},
																	{
																		"hexValue": "4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1695:34:3",
																		"type": "",
																		"value": "Only the pending Governor can co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1750:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1761:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1746:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:18:3"
																	},
																	{
																		"hexValue": "6d706c6574652074686520636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1766:18:3",
																		"type": "",
																		"value": "mplete the claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1794:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1566:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1580:4:3",
														"type": ""
													}
												],
												"src": "1415:412:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not the Governor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"New Governor is address(0)\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Only the pending Governor can co\")\n        mstore(add(headStart, 96), \"mplete the claim\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c340a24146100515780635d36b19014610076578063c7af335214610080578063d38bfff414610098575b600080fd5b6100596100ab565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100c8565b005b610088610173565b604051901515815260200161006d565b61007e6100a636600461033c565b6101a4565b60006100c360008051602061036d8339815191525490565b905090565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b0316146101685760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084015b60405180910390fd5b61017133610278565b565b600061018b60008051602061036d8339815191525490565b6001600160a01b0316336001600160a01b031614905090565b6101ac610173565b6101f85760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604482015260640161015f565b610220817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b031661024060008051602061036d8339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166102ce5760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f722069732061646472657373283029000000000000604482015260640161015f565b806001600160a01b03166102ee60008051602061036d8339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a36103398160008051602061036d83398151915255565b50565b60006020828403121561034e57600080fd5b81356001600160a01b038116811461036557600080fd5b939250505056fe7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC340A24 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6D JUMP JUMPDEST PUSH2 0x7E PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171 CALLER PUSH2 0x278 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x173 JUMP JUMPDEST PUSH2 0x1F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST PUSH2 0x220 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x240 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x339 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x36D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH28 0xEA13895FA79D2831E0A9E28EDEDE30099005A50D652D8957CF8A607E 0xE6 0xCA 0x4A LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 GT SGT 0xD9 PUSH26 0xFEDADE869DB399BB142BBADAB96CE22EA1649C528B3E74F46736 PUSH31 0x64736F6C634300080700330000000000000000000000000000000000000000 ",
							"sourceMap": "361:5110:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:87;;;:::i;:::-;;;-1:-1:-1;;;;;469:32:3;;;451:51;;439:2;424:18;1674:87:1;;;;;;;;4839:223;;;:::i;:::-;;2664:100;;;:::i;:::-;;;678:14:3;;671:22;653:41;;641:2;626:18;2664:100:1;513:187:3;4491:194:1;;;;;;:::i;:::-;;:::i;1674:87::-;1715:7;1742:11;-1:-1:-1;;;;;;;;;;;2006:15:1;;1845:194;1742:11;1735:18;;1674:87;:::o;4839:223::-;727:66;2338:15;-1:-1:-1;;;;;4908:32:1;:10;-1:-1:-1;;;;;4908:32:1;;4886:130;;;;-1:-1:-1;;;4886:130:1;;1617:2:3;4886:130:1;;;1599:21:3;1656:2;1636:18;;;1629:30;1695:34;1675:18;;;1668:62;-1:-1:-1;;;1746:18:3;;;1739:46;1802:19;;4886:130:1;;;;;;;;;5027:27;5043:10;5027:15;:27::i;:::-;4839:223::o;2664:100::-;2707:4;2745:11;-1:-1:-1;;;;;;;;;;;2006:15:1;;1845:194;2745:11;-1:-1:-1;;;;;2731:25:1;:10;-1:-1:-1;;;;;2731:25:1;;2724:32;;2664:100;:::o;4491:194::-;2510:12;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:1;;907:2:3;2502:51:1;;;889:21:3;946:2;926:18;;;919:30;985:28;965:18;;;958:56;1031:18;;2502:51:1;705:350:3;2502:51:1;4574:33:::1;4594:12;727:66:::0;4189:29;4042:194;4574:33:::1;4664:12;-1:-1:-1::0;;;;;4623:54:1::1;4651:11;-1:-1:-1::0;;;;;;;;;;;2006:15:1;;1845:194;4651:11:::1;-1:-1:-1::0;;;;;4623:54:1::1;;;;;;;;;;;4491:194:::0;:::o;5225:243::-;-1:-1:-1;;;;;5300:26:1;;5292:65;;;;-1:-1:-1;;;5292:65:1;;1262:2:3;5292:65:1;;;1244:21:3;1301:2;1281:18;;;1274:30;1340:28;1320:18;;;1313:56;1386:18;;5292:65:1;1060:350:3;5292:65:1;5410:12;-1:-1:-1;;;;;5373:50:1;5397:11;-1:-1:-1;;;;;;;;;;;2006:15:1;;1845:194;5397:11;-1:-1:-1;;;;;5373:50:1;;;;;;;;;;;5434:26;5447:12;-1:-1:-1;;;;;;;;;;;2905:29:1;2772:180;5434:26;5225:243;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "192400",
								"executionCost": "26075",
								"totalCost": "218475"
							},
							"external": {
								"claimGovernance()": "28233",
								"governor()": "infinite",
								"isGovernor()": "infinite",
								"transferGovernance(address)": "infinite"
							},
							"internal": {
								"_changeGovernor(address)": "infinite",
								"_governor()": "infinite",
								"_pendingGovernor()": "infinite",
								"_setGovernor(address)": "infinite",
								"_setPendingGovernor(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1507,
									"end": 1517,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2905,
									"end": 2934,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2772,
									"end": 2952,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2021,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 1,
									"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 361,
									"end": 5471,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b91113d979fedade869db399bb142bbadab96ce22ea1649c528b3e74f467367e64736f6c63430008070033",
									".code": [
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "C340A24"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "5D36B190"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "C7AF3352"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "D38BFFF4"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 5471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 692,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 671,
											"end": 693,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 653,
											"end": 694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 653,
											"end": 694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 513,
											"end": 700,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 2338,
											"end": 2353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4918,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1729,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1730,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D706C6574652074686520636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2741,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 889,
											"end": 910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 949,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 958,
											"end": 1014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1031,
											"end": 1049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 705,
											"end": 1055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 4189,
											"end": 4218,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4236,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "A39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1368,
											"name": "PUSH",
											"source": 3,
											"value": "4E657720476F7665726E6F722069732061646472657373283029000000000000"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1060,
											"end": 1410,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2934,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2952,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
									}
								},
								"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
							}
						},
						"methodIdentifiers": {
							"claimGovernance()": "5d36b190",
							"governor()": "0c340a24",
							"isGovernor()": "c7af3352",
							"transferGovernance(address)": "d38bfff4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorshipTransfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origin Protocol Inc\",\"details\":\"Copy of the openzeppelin Ownable.sol contract with nomenclature change      from owner to governor and renounce methods removed. Does not use      Context.sol like Ownable.sol does for simplification.\",\"kind\":\"dev\",\"methods\":{\"claimGovernance()\":{\"details\":\"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.\"},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial Governor.\"},\"governor()\":{\"details\":\"Returns the address of the current Governor.\"},\"isGovernor()\":{\"details\":\"Returns true if the caller is the current Governor.\"},\"transferGovernance(address)\":{\"details\":\"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete\",\"params\":{\"_newGovernor\":\"Address of the new Governor\"}}},\"title\":\"OUSD Governable Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/governance/Governable.sol\":\"Governable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/governance/Governable.sol\":{\"keccak256\":\"0xe5e82e9c9b2611b9cc82e2a047cb7fed850133eecc5a070ee61093c348bcc976\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://752df48fe4a3578b2a08f7518a261eb340bc7940ecb3d24929d7c2af1ed24c91\",\"dweb:/ipfs/QmbHseRzFZqTuoKzavEgWSZveBMPT5hjgcZP2xWUUgaTTU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol": {
				"InitializeGovernedUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "GovernorshipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousGovernor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGovernor",
									"type": "address"
								}
							],
							"name": "PendingGovernorshipTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initGovernor",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isGovernor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGovernor",
									"type": "address"
								}
							],
							"name": "transferGovernance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Origin Protocol Inc",
						"details": "This contract combines an upgradeability proxy with our governor system. It is based on an older version of OpenZeppelins BaseUpgradeabilityProxy with Solidity ^0.8.0.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded.",
								"params": {
									"implementation": "Address of the new implementation."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"admin()": {
								"returns": {
									"_0": "The address of the proxy admin/it's also the governor."
								}
							},
							"claimGovernance()": {
								"details": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor."
							},
							"governor()": {
								"details": "Returns the address of the current Governor."
							},
							"implementation()": {
								"returns": {
									"_0": "The address of the implementation."
								}
							},
							"initialize(address,address,bytes)": {
								"details": "Contract initializer with Governor enforcement",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_initGovernor": "Address of the initial Governor.",
									"_logic": "Address of the initial implementation."
								}
							},
							"isGovernor()": {
								"details": "Returns true if the caller is the current Governor."
							},
							"transferGovernance(address)": {
								"details": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete",
								"params": {
									"_newGovernor": "Address of the new Governor"
								}
							},
							"upgradeTo(address)": {
								"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
								"params": {
									"newImplementation": "Address of the new implementation."
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
								"params": {
									"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
									"newImplementation": "Address of the new implementation."
								}
							}
						},
						"stateVariables": {
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"title": "BaseGovernedUpgradeabilityProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":469:6801  contract InitializeGovernedUpgradeabilityProxy is Governable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\n  tag_4\n    /* \"contracts/contracts/governance/Governable.sol\":1507:1517  msg.sender */\n  caller\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n  sstore\n    /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n  jump\n    /* \"contracts/contracts/governance/Governable.sol\":1494:1518  _setGovernor(msg.sender) */\ntag_4:\n  0x00\n  dup1\n  mload\n  0x20\n  data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n  sload\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  0x00\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1566:1567  0 */\n  dup3\n  swap1\n    /* \"contracts/contracts/governance/Governable.sol\":1534:1582  GovernorshipTransferred(address(0), _governor()) */\n  log3\n    /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":469:6801  contract InitializeGovernedUpgradeabilityProxy is Governable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\nsub_0: assembly {\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":469:6801  contract InitializeGovernedUpgradeabilityProxy is Governable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5d36b190\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x5d36b190\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc7af3352\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcf7a1d77\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd38bfff4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_3\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x0c340a24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3626:3637  _fallback() */\n      tag_15\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3626:3635  _fallback */\n      tag_16\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3626:3637  _fallback() */\n      jump\t// in\n    tag_15:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":469:6801  contract InitializeGovernedUpgradeabilityProxy is Governable {\r... */\n      stop\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2998:3030   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2980:3031   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2968:2970   */\n      0x20\n        /* \"#utility.yul\":2953:2971   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2543:2659  function upgradeTo(address newImplementation) external onlyGovernor {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_15\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3207:3484  function upgradeToAndCall(address newImplementation, bytes calldata data)\r... */\n    tag_5:\n      tag_15\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2239:2340  function implementation() external view returns (address) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_18\n      tag_33\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_15\n      tag_37\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":3207:3221   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3200:3222   */\n      iszero\n        /* \"#utility.yul\":3182:3223   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"#utility.yul\":3155:3173   */\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      tag_20\n        /* \"#utility.yul\":3042:3229   */\n      jump\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1390:1979  function initialize(\r... */\n    tag_9:\n      tag_15\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_15\n      tag_49\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5211:5314  function _fallback() internal {\r... */\n    tag_16:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5278:5306  _delegate(_implementation()) */\n      tag_58\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5288:5305  _implementation() */\n      tag_59\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5956:5967  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5804:5985  function _implementation() internal view returns (address impl) {\r... */\n      jump\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5288:5305  _implementation() */\n    tag_59:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5278:5287  _delegate */\n      tag_61\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5278:5306  _delegate(_implementation()) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5211:5314  function _fallback() internal {\r... */\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n    tag_19:\n        /* \"contracts/contracts/governance/Governable.sol\":1715:1722  address */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n      tag_63\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":1742:1753  _governor() */\n    tag_63:\n        /* \"contracts/contracts/governance/Governable.sol\":1735:1753  return _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":1674:1761  function governor() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2543:2659  function upgradeTo(address newImplementation) external onlyGovernor {\r... */\n    tag_26:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_66\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_40\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2622:2651  _upgradeTo(newImplementation) */\n      tag_71\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2633:2650  newImplementation */\n      dup2\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2622:2632  _upgradeTo */\n      tag_72\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2622:2651  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2543:2659  function upgradeTo(address newImplementation) external onlyGovernor {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3207:3484  function upgradeToAndCall(address newImplementation, bytes calldata data)\r... */\n    tag_30:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_74\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_40\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_75:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3354:3383  _upgradeTo(newImplementation) */\n      tag_78\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3365:3382  newImplementation */\n      dup4\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3354:3364  _upgradeTo */\n      tag_72\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3354:3383  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3395:3407  bool success */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3413:3430  newImplementation */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3413:3443  newImplementation.delegatecall */\n      and\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3444:3448  data */\n      dup4\n      dup4\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3413:3449  newImplementation.delegatecall(data) */\n      mload(0x40)\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_83\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_82)\n    tag_83:\n      0x60\n      swap2\n      pop\n    tag_82:\n      pop\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3394:3449  (bool success, ) = newImplementation.delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3468:3475  success */\n      dup1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3460:3476  require(success) */\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3343:3484  {\r... */\n      pop\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3207:3484  function upgradeToAndCall(address newImplementation, bytes calldata data)\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2239:2340  function implementation() external view returns (address) {\r... */\n    tag_33:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2288:2295  address */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":2315:2332  _implementation() */\n      tag_63\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5956:5967  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5804:5985  function _implementation() internal view returns (address impl) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4839:5062  function claimGovernance() external {\r... */\n    tag_37:\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":2338:2353  sload(position) */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4918  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4908:4940  msg.sender == _pendingGovernor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4929:4931   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4911:4932   */\n      mstore\n        /* \"#utility.yul\":4968:4970   */\n      0x30\n        /* \"#utility.yul\":4948:4966   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4941:4971   */\n      mstore\n        /* \"#utility.yul\":5007:5041   */\n      0x4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f\n        /* \"#utility.yul\":4987:5005   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4980:5042   */\n      mstore\n      shl(0x80, 0x6d706c6574652074686520636c61696d)\n        /* \"#utility.yul\":5058:5076   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5051:5097   */\n      mstore\n        /* \"#utility.yul\":5114:5133   */\n      0x84\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n      tag_68\n        /* \"#utility.yul\":4727:5139   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4886:5016  require(\r... */\n    tag_90:\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      tag_58\n        /* \"contracts/contracts/governance/Governable.sol\":5043:5053  msg.sender */\n      caller\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5042  _changeGovernor */\n      tag_94\n        /* \"contracts/contracts/governance/Governable.sol\":5027:5054  _changeGovernor(msg.sender) */\n      jump\t// in\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/contracts/governance/Governable.sol\":2707:2711  bool */\n      0x00\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n      tag_96\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":2745:2756  _governor() */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2741  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":2731:2756  msg.sender == _governor() */\n      and\n      eq\n        /* \"contracts/contracts/governance/Governable.sol\":2724:2756  return msg.sender == _governor() */\n      swap1\n      pop\n        /* \"contracts/contracts/governance/Governable.sol\":2664:2764  function isGovernor() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1390:1979  function initialize(\r... */\n    tag_46:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_98\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_40\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_99:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1579:1580  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1550:1567  _implementation() */\n      tag_102\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5956:5967  sload(slot) */\n      sload\n      swap1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":5804:5985  function _implementation() internal view returns (address impl) {\r... */\n      jump\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1550:1567  _implementation() */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1550:1581  _implementation() == address(0) */\n      and\n      eq\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1542:1612  require(_implementation() == address(0), \"implementation already set\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3791:3793   */\n      0x20\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1542:1612  require(_implementation() == address(0), \"implementation already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3773:3794   */\n      mstore\n        /* \"#utility.yul\":3830:3832   */\n      0x1a\n        /* \"#utility.yul\":3810:3828   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3803:3833   */\n      mstore\n        /* \"#utility.yul\":3869:3897   */\n      0x696d706c656d656e746174696f6e20616c726561647920736574000000000000\n        /* \"#utility.yul\":3849:3867   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3842:3898   */\n      mstore\n        /* \"#utility.yul\":3915:3933   */\n      0x64\n      add\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1542:1612  require(_implementation() == address(0), \"implementation already set\") */\n      tag_68\n        /* \"#utility.yul\":3589:3939   */\n      jump\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1542:1612  require(_implementation() == address(0), \"implementation already set\") */\n    tag_103:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1692:1746  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n      tag_106\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1745:1746  1 */\n      0x01\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1700:1741  keccak256(\"eip1967.proxy.implementation\") */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1692:1746  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n      tag_107\n      jump\t// in\n    tag_106:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1644:1747  IMPLEMENTATION_SLOT ==\r... */\n      eq\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1623:1758  assert(\r... */\n      tag_109\n      jumpi\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1769:1799  _changeGovernor(_initGovernor) */\n      tag_111\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1785:1798  _initGovernor */\n      dup3\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1769:1784  _changeGovernor */\n      tag_94\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1769:1799  _changeGovernor(_initGovernor) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1810:1836  _setImplementation(_logic) */\n      tag_112\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1829:1835  _logic */\n      dup4\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1810:1828  _setImplementation */\n      tag_113\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1810:1836  _setImplementation(_logic) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1851:1863  _data.length */\n      dup1\n      mload\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1851:1867  _data.length > 0 */\n      iszero\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1847:1972  if (_data.length > 0) {\r... */\n      tag_114\n      jumpi\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1885:1897  bool success */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1903:1909  _logic */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1903:1922  _logic.delegatecall */\n      and\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1923:1928  _data */\n      dup3\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1903:1929  _logic.delegatecall(_data) */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1847:1972  if (_data.length > 0) {\r... */\n    tag_114:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":1390:1979  function initialize(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n    tag_50:\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      tag_122\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2520  isGovernor */\n      tag_40\n        /* \"contracts/contracts/governance/Governable.sol\":2510:2522  isGovernor() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/contracts/governance/Governable.sol\":2502:2553  require(isGovernor(), \"Caller is not the Governor\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_123:\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n      tag_126\n        /* \"contracts/contracts/governance/Governable.sol\":4594:4606  _newGovernor */\n      dup2\n        /* \"contracts/contracts/governance/Governable.sol\":727:793  0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db */\n      0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db\n        /* \"contracts/contracts/governance/Governable.sol\":4189:4218  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":4042:4236  function _setPendingGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4574:4607  _setPendingGovernor(_newGovernor) */\n    tag_126:\n        /* \"contracts/contracts/governance/Governable.sol\":4664:4676  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n      tag_128\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":4651:4662  _governor() */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":4623:4677  PendingGovernorshipTransfer(_governor(), _newGovernor) */\n      and\n      0xa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":4491:4685  function transferGovernance(address _newGovernor) external onlyGovernor {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":3944:4836  function _delegate(address _impl) internal {\r... */\n    tag_61:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4270:4284  calldatasize() */\n      calldatasize\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4267:4268  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4264:4265  0 */\n      dup1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4251:4285  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4479:4480  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4476:4477  0 */\n      dup1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4460:4474  calldatasize() */\n      calldatasize\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4457:4458  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4450:4455  _impl */\n      dup5\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4443:4448  gas() */\n      gas\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4430:4481  delegatecall(gas(), _impl, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4558:4574  returndatasize() */\n      returndatasize\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4555:4556  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4552:4553  0 */\n      dup1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4537:4575  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4598:4604  result */\n      dup1\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4667:4735  case 0 {\r... */\n      dup1\n      iszero\n      tag_135\n      jumpi\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4786:4802  returndatasize() */\n      returndatasize\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4783:4784  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4776:4803  return(0, returndatasize()) */\n      return\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4667:4735  case 0 {\r... */\n    tag_135:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4703:4719  returndatasize() */\n      returndatasize\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4700:4701  0 */\n      0x00\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":4693:4720  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6136:6291  function _upgradeTo(address newImplementation) internal {\r... */\n    tag_72:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6203:6240  _setImplementation(newImplementation) */\n      tag_138\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6222:6239  newImplementation */\n      dup2\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6203:6221  _setImplementation */\n      tag_113\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6203:6240  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6256:6283  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6136:6291  function _upgradeTo(address newImplementation) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/governance/Governable.sol\":5225:5468  function _changeGovernor(address _newGovernor) internal {\r... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5300:5326  _newGovernor != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4146:4148   */\n      0x20\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4128:4149   */\n      mstore\n        /* \"#utility.yul\":4185:4187   */\n      0x1a\n        /* \"#utility.yul\":4165:4183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4158:4188   */\n      mstore\n        /* \"#utility.yul\":4224:4252   */\n      0x4e657720476f7665726e6f722069732061646472657373283029000000000000\n        /* \"#utility.yul\":4204:4222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4197:4253   */\n      mstore\n        /* \"#utility.yul\":4270:4288   */\n      0x64\n      add\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n      tag_68\n        /* \"#utility.yul\":3944:4294   */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5292:5357  require(_newGovernor != address(0), \"New Governor is address(0)\") */\n    tag_141:\n        /* \"contracts/contracts/governance/Governable.sol\":5410:5422  _newGovernor */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n      tag_144\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2006:2021  sload(position) */\n      sload\n      swap1\n        /* \"contracts/contracts/governance/Governable.sol\":1845:2039  function _governor() internal view returns (address governorOut) {\r... */\n      jump\n        /* \"contracts/contracts/governance/Governable.sol\":5397:5408  _governor() */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/governance/Governable.sol\":5373:5423  GovernorshipTransferred(_governor(), _newGovernor) */\n      and\n      0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/governance/Governable.sol\":5434:5460  _setGovernor(_newGovernor) */\n      tag_71\n        /* \"contracts/contracts/governance/Governable.sol\":5447:5459  _newGovernor */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/governance/Governable.sol\":2905:2934  sstore(position, newGovernor) */\n      sstore\n        /* \"contracts/contracts/governance/Governable.sol\":2772:2952  function _setGovernor(address newGovernor) internal {\r... */\n      jump\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6444:6798  function _setImplementation(address newImplementation) internal {\r... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6519:6665  require(\r... */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4501:4503   */\n      0x20\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6519:6665  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4483:4504   */\n      mstore\n        /* \"#utility.yul\":4540:4542   */\n      0x3b\n        /* \"#utility.yul\":4520:4538   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4513:4543   */\n      mstore\n        /* \"#utility.yul\":4579:4613   */\n      0x43616e6e6f742073657420612070726f787920696d706c656d656e746174696f\n        /* \"#utility.yul\":4559:4577   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4552:4614   */\n      mstore\n        /* \"#utility.yul\":4650:4679   */\n      0x6e20746f2061206e6f6e2d636f6e747261637420616464726573730000000000\n        /* \"#utility.yul\":4630:4648   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4623:4680   */\n      mstore\n        /* \"#utility.yul\":4697:4716   */\n      0x84\n      add\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6519:6665  require(\r... */\n      tag_68\n        /* \"#utility.yul\":4299:4722   */\n      jump\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6519:6665  require(\r... */\n    tag_150:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6749:6780  sstore(slot, newImplementation) */\n      sstore\n        /* \"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":6444:6798  function _setImplementation(address newImplementation) internal {\r... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_157:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_159:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_25:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_161:\n        /* \"#utility.yul\":343:372   */\n      tag_162\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_157\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:1452   */\n    tag_45:\n        /* \"#utility.yul\":469:475   */\n      0x00\n        /* \"#utility.yul\":477:483   */\n      dup1\n        /* \"#utility.yul\":485:491   */\n      0x00\n        /* \"#utility.yul\":538:540   */\n      0x60\n        /* \"#utility.yul\":526:535   */\n      dup5\n        /* \"#utility.yul\":517:524   */\n      dup7\n        /* \"#utility.yul\":513:536   */\n      sub\n        /* \"#utility.yul\":509:541   */\n      slt\n        /* \"#utility.yul\":506:558   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":554:555   */\n      0x00\n        /* \"#utility.yul\":551:552   */\n      dup1\n        /* \"#utility.yul\":544:556   */\n      revert\n        /* \"#utility.yul\":506:558   */\n    tag_164:\n        /* \"#utility.yul\":577:606   */\n      tag_165\n        /* \"#utility.yul\":596:605   */\n      dup5\n        /* \"#utility.yul\":577:606   */\n      tag_157\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":567:606   */\n      swap3\n      pop\n        /* \"#utility.yul\":625:663   */\n      tag_166\n        /* \"#utility.yul\":659:661   */\n      0x20\n        /* \"#utility.yul\":648:657   */\n      dup6\n        /* \"#utility.yul\":644:662   */\n      add\n        /* \"#utility.yul\":625:663   */\n      tag_157\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":615:663   */\n      swap2\n      pop\n        /* \"#utility.yul\":714:716   */\n      0x40\n        /* \"#utility.yul\":703:712   */\n      dup5\n        /* \"#utility.yul\":699:717   */\n      add\n        /* \"#utility.yul\":686:718   */\n      calldataload\n        /* \"#utility.yul\":737:755   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":778:780   */\n      dup1\n        /* \"#utility.yul\":770:776   */\n      dup3\n        /* \"#utility.yul\":767:781   */\n      gt\n        /* \"#utility.yul\":764:798   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":794:795   */\n      0x00\n        /* \"#utility.yul\":791:792   */\n      dup1\n        /* \"#utility.yul\":784:796   */\n      revert\n        /* \"#utility.yul\":764:798   */\n    tag_167:\n        /* \"#utility.yul\":832:838   */\n      dup2\n        /* \"#utility.yul\":821:830   */\n      dup7\n        /* \"#utility.yul\":817:839   */\n      add\n        /* \"#utility.yul\":807:839   */\n      swap2\n      pop\n        /* \"#utility.yul\":877:884   */\n      dup7\n        /* \"#utility.yul\":870:874   */\n      0x1f\n        /* \"#utility.yul\":866:868   */\n      dup4\n        /* \"#utility.yul\":862:875   */\n      add\n        /* \"#utility.yul\":858:885   */\n      slt\n        /* \"#utility.yul\":848:903   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":899:900   */\n      0x00\n        /* \"#utility.yul\":896:897   */\n      dup1\n        /* \"#utility.yul\":889:901   */\n      revert\n        /* \"#utility.yul\":848:903   */\n    tag_168:\n        /* \"#utility.yul\":935:937   */\n      dup2\n        /* \"#utility.yul\":922:938   */\n      calldataload\n        /* \"#utility.yul\":957:959   */\n      dup2\n        /* \"#utility.yul\":953:955   */\n      dup2\n        /* \"#utility.yul\":950:960   */\n      gt\n        /* \"#utility.yul\":947:983   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":963:981   */\n      tag_170\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1038:1040   */\n      0x40\n        /* \"#utility.yul\":1032:1041   */\n      mload\n        /* \"#utility.yul\":1006:1008   */\n      0x1f\n        /* \"#utility.yul\":1092:1105   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1088:1110   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1112:1114   */\n      0x3f\n        /* \"#utility.yul\":1084:1115   */\n      add\n        /* \"#utility.yul\":1080:1120   */\n      and\n        /* \"#utility.yul\":1068:1121   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1136:1154   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1156:1178   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1133:1179   */\n      or\n        /* \"#utility.yul\":1130:1202   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1182:1200   */\n      tag_173\n      tag_171\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1222:1232   */\n      dup2\n        /* \"#utility.yul\":1218:1220   */\n      0x40\n        /* \"#utility.yul\":1211:1233   */\n      mstore\n        /* \"#utility.yul\":1257:1259   */\n      dup3\n        /* \"#utility.yul\":1249:1255   */\n      dup2\n        /* \"#utility.yul\":1242:1260   */\n      mstore\n        /* \"#utility.yul\":1297:1304   */\n      dup10\n        /* \"#utility.yul\":1292:1294   */\n      0x20\n        /* \"#utility.yul\":1287:1289   */\n      dup5\n        /* \"#utility.yul\":1283:1285   */\n      dup8\n        /* \"#utility.yul\":1279:1290   */\n      add\n        /* \"#utility.yul\":1275:1295   */\n      add\n        /* \"#utility.yul\":1272:1305   */\n      gt\n        /* \"#utility.yul\":1269:1322   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1318:1319   */\n      0x00\n        /* \"#utility.yul\":1315:1316   */\n      dup1\n        /* \"#utility.yul\":1308:1320   */\n      revert\n        /* \"#utility.yul\":1269:1322   */\n    tag_174:\n        /* \"#utility.yul\":1374:1376   */\n      dup3\n        /* \"#utility.yul\":1369:1371   */\n      0x20\n        /* \"#utility.yul\":1365:1367   */\n      dup7\n        /* \"#utility.yul\":1361:1372   */\n      add\n        /* \"#utility.yul\":1356:1358   */\n      0x20\n        /* \"#utility.yul\":1348:1354   */\n      dup4\n        /* \"#utility.yul\":1344:1359   */\n      add\n        /* \"#utility.yul\":1331:1377   */\n      calldatacopy\n        /* \"#utility.yul\":1419:1420   */\n      0x00\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1409:1411   */\n      dup5\n        /* \"#utility.yul\":1401:1407   */\n      dup4\n        /* \"#utility.yul\":1397:1412   */\n      add\n        /* \"#utility.yul\":1393:1417   */\n      add\n        /* \"#utility.yul\":1386:1421   */\n      mstore\n        /* \"#utility.yul\":1440:1446   */\n      dup1\n        /* \"#utility.yul\":1430:1446   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:1452   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1457:2122   */\n    tag_29:\n        /* \"#utility.yul\":1536:1542   */\n      0x00\n        /* \"#utility.yul\":1544:1550   */\n      dup1\n        /* \"#utility.yul\":1552:1558   */\n      0x00\n        /* \"#utility.yul\":1605:1607   */\n      0x40\n        /* \"#utility.yul\":1593:1602   */\n      dup5\n        /* \"#utility.yul\":1584:1591   */\n      dup7\n        /* \"#utility.yul\":1580:1603   */\n      sub\n        /* \"#utility.yul\":1576:1608   */\n      slt\n        /* \"#utility.yul\":1573:1625   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1621:1622   */\n      0x00\n        /* \"#utility.yul\":1618:1619   */\n      dup1\n        /* \"#utility.yul\":1611:1623   */\n      revert\n        /* \"#utility.yul\":1573:1625   */\n    tag_176:\n        /* \"#utility.yul\":1644:1673   */\n      tag_177\n        /* \"#utility.yul\":1663:1672   */\n      dup5\n        /* \"#utility.yul\":1644:1673   */\n      tag_157\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1634:1673   */\n      swap3\n      pop\n        /* \"#utility.yul\":1724:1726   */\n      0x20\n        /* \"#utility.yul\":1713:1722   */\n      dup5\n        /* \"#utility.yul\":1709:1727   */\n      add\n        /* \"#utility.yul\":1696:1728   */\n      calldataload\n        /* \"#utility.yul\":1747:1765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1788:1790   */\n      dup1\n        /* \"#utility.yul\":1780:1786   */\n      dup3\n        /* \"#utility.yul\":1777:1791   */\n      gt\n        /* \"#utility.yul\":1774:1808   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":1804:1805   */\n      0x00\n        /* \"#utility.yul\":1801:1802   */\n      dup1\n        /* \"#utility.yul\":1794:1806   */\n      revert\n        /* \"#utility.yul\":1774:1808   */\n    tag_178:\n        /* \"#utility.yul\":1842:1848   */\n      dup2\n        /* \"#utility.yul\":1831:1840   */\n      dup7\n        /* \"#utility.yul\":1827:1849   */\n      add\n        /* \"#utility.yul\":1817:1849   */\n      swap2\n      pop\n        /* \"#utility.yul\":1887:1894   */\n      dup7\n        /* \"#utility.yul\":1880:1884   */\n      0x1f\n        /* \"#utility.yul\":1876:1878   */\n      dup4\n        /* \"#utility.yul\":1872:1885   */\n      add\n        /* \"#utility.yul\":1868:1895   */\n      slt\n        /* \"#utility.yul\":1858:1913   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1906:1907   */\n      dup1\n        /* \"#utility.yul\":1899:1911   */\n      revert\n        /* \"#utility.yul\":1858:1913   */\n    tag_179:\n        /* \"#utility.yul\":1949:1951   */\n      dup2\n        /* \"#utility.yul\":1936:1952   */\n      calldataload\n        /* \"#utility.yul\":1975:1977   */\n      dup2\n        /* \"#utility.yul\":1967:1973   */\n      dup2\n        /* \"#utility.yul\":1964:1978   */\n      gt\n        /* \"#utility.yul\":1961:1995   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1991:1992   */\n      0x00\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1981:1993   */\n      revert\n        /* \"#utility.yul\":1961:1995   */\n    tag_180:\n        /* \"#utility.yul\":2036:2043   */\n      dup8\n        /* \"#utility.yul\":2031:2033   */\n      0x20\n        /* \"#utility.yul\":2022:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2020   */\n      dup6\n        /* \"#utility.yul\":2014:2029   */\n      add\n        /* \"#utility.yul\":2010:2034   */\n      add\n        /* \"#utility.yul\":2007:2044   */\n      gt\n        /* \"#utility.yul\":2004:2061   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2057:2058   */\n      0x00\n        /* \"#utility.yul\":2054:2055   */\n      dup1\n        /* \"#utility.yul\":2047:2059   */\n      revert\n        /* \"#utility.yul\":2004:2061   */\n    tag_181:\n        /* \"#utility.yul\":2088:2090   */\n      0x20\n        /* \"#utility.yul\":2084:2086   */\n      dup4\n        /* \"#utility.yul\":2080:2091   */\n      add\n        /* \"#utility.yul\":2070:2091   */\n      swap5\n      pop\n        /* \"#utility.yul\":2110:2116   */\n      dup1\n        /* \"#utility.yul\":2100:2116   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1457:2122   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2127:2398   */\n    tag_80:\n        /* \"#utility.yul\":2310:2316   */\n      dup2\n        /* \"#utility.yul\":2302:2308   */\n      dup4\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2284:2317   */\n      calldatacopy\n        /* \"#utility.yul\":2266:2269   */\n      0x00\n        /* \"#utility.yul\":2336:2352   */\n      swap2\n      add\n        /* \"#utility.yul\":2361:2374   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2336:2352   */\n      swap2\n        /* \"#utility.yul\":2127:2398   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2403:2829   */\n    tag_116:\n        /* \"#utility.yul\":2532:2535   */\n      0x00\n        /* \"#utility.yul\":2570:2576   */\n      dup3\n        /* \"#utility.yul\":2564:2577   */\n      mload\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2605:2734   */\n    tag_184:\n        /* \"#utility.yul\":2619:2625   */\n      dup2\n        /* \"#utility.yul\":2616:2617   */\n      dup2\n        /* \"#utility.yul\":2613:2626   */\n      lt\n        /* \"#utility.yul\":2605:2734   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2717:2721   */\n      0x20\n        /* \"#utility.yul\":2701:2715   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":2697:2722   */\n      dup2\n      add\n        /* \"#utility.yul\":2691:2723   */\n      mload\n        /* \"#utility.yul\":2678:2689   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":2671:2724   */\n      mstore\n        /* \"#utility.yul\":2634:2646   */\n      add\n        /* \"#utility.yul\":2605:2734   */\n      jump(tag_184)\n    tag_186:\n        /* \"#utility.yul\":2752:2758   */\n      dup2\n        /* \"#utility.yul\":2749:2750   */\n      dup2\n        /* \"#utility.yul\":2746:2759   */\n      gt\n        /* \"#utility.yul\":2743:2791   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":2787:2788   */\n      0x00\n        /* \"#utility.yul\":2778:2784   */\n      dup3\n        /* \"#utility.yul\":2773:2776   */\n      dup6\n        /* \"#utility.yul\":2769:2785   */\n      add\n        /* \"#utility.yul\":2762:2789   */\n      mstore\n        /* \"#utility.yul\":2743:2791   */\n    tag_187:\n      pop\n        /* \"#utility.yul\":2807:2823   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2403:2829   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3234:3584   */\n    tag_69:\n        /* \"#utility.yul\":3436:3438   */\n      0x20\n        /* \"#utility.yul\":3418:3439   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3475:3477   */\n      0x1a\n        /* \"#utility.yul\":3455:3473   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3448:3478   */\n      mstore\n        /* \"#utility.yul\":3514:3542   */\n      0x43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000\n        /* \"#utility.yul\":3509:3511   */\n      0x40\n        /* \"#utility.yul\":3494:3512   */\n      dup3\n      add\n        /* \"#utility.yul\":3487:3543   */\n      mstore\n        /* \"#utility.yul\":3575:3577   */\n      0x60\n        /* \"#utility.yul\":3560:3578   */\n      add\n      swap1\n        /* \"#utility.yul\":3234:3584   */\n      jump\t// out\n        /* \"#utility.yul\":5144:5366   */\n    tag_107:\n        /* \"#utility.yul\":5184:5188   */\n      0x00\n        /* \"#utility.yul\":5212:5213   */\n      dup3\n        /* \"#utility.yul\":5209:5210   */\n      dup3\n        /* \"#utility.yul\":5206:5214   */\n      lt\n        /* \"#utility.yul\":5203:5334   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":5256:5266   */\n      0x4e487b71\n        /* \"#utility.yul\":5251:5254   */\n      0xe0\n        /* \"#utility.yul\":5247:5267   */\n      shl\n        /* \"#utility.yul\":5244:5245   */\n      0x00\n        /* \"#utility.yul\":5237:5268   */\n      mstore\n        /* \"#utility.yul\":5291:5295   */\n      0x11\n        /* \"#utility.yul\":5288:5289   */\n      0x04\n        /* \"#utility.yul\":5281:5296   */\n      mstore\n        /* \"#utility.yul\":5319:5323   */\n      0x24\n        /* \"#utility.yul\":5316:5317   */\n      0x00\n        /* \"#utility.yul\":5309:5324   */\n      revert\n        /* \"#utility.yul\":5203:5334   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":5351:5360   */\n      sub\n      swap1\n        /* \"#utility.yul\":5144:5366   */\n      jump\t// out\n        /* \"#utility.yul\":5371:5498   */\n    tag_110:\n        /* \"#utility.yul\":5432:5442   */\n      0x4e487b71\n        /* \"#utility.yul\":5427:5430   */\n      0xe0\n        /* \"#utility.yul\":5423:5443   */\n      shl\n        /* \"#utility.yul\":5420:5421   */\n      0x00\n        /* \"#utility.yul\":5413:5444   */\n      mstore\n        /* \"#utility.yul\":5463:5467   */\n      0x01\n        /* \"#utility.yul\":5460:5461   */\n      0x04\n        /* \"#utility.yul\":5453:5468   */\n      mstore\n        /* \"#utility.yul\":5487:5491   */\n      0x24\n        /* \"#utility.yul\":5484:5485   */\n      0x00\n        /* \"#utility.yul\":5477:5492   */\n      revert\n        /* \"#utility.yul\":5503:5630   */\n    tag_171:\n        /* \"#utility.yul\":5564:5574   */\n      0x4e487b71\n        /* \"#utility.yul\":5559:5562   */\n      0xe0\n        /* \"#utility.yul\":5555:5575   */\n      shl\n        /* \"#utility.yul\":5552:5553   */\n      0x00\n        /* \"#utility.yul\":5545:5576   */\n      mstore\n        /* \"#utility.yul\":5595:5599   */\n      0x41\n        /* \"#utility.yul\":5592:5593   */\n      0x04\n        /* \"#utility.yul\":5585:5600   */\n      mstore\n        /* \"#utility.yul\":5619:5623   */\n      0x24\n        /* \"#utility.yul\":5616:5617   */\n      0x00\n        /* \"#utility.yul\":5609:5624   */\n      revert\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_b21729280315b05b5209e280f80abc0024d9412a0bcfd98da242c4e2094faad4 7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a\n\n    auxdata: 0xa26469706673582212200955d8d5d169546bd126b39b667e9518eb12a47803b48a36f91fb7dda8dcd9ae64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_governor_365": {
									"entryPoint": null,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002733600080516020610a3983398151915255565b600080516020610a39833981519152546040516001600160a01b03909116906000907fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a908290a36109bc8061007d6000396000f3fe6080604052600436106100865760003560e01c80635d36b190116100595780635d36b1901461010a578063c7af33521461011f578063cf7a1d7714610144578063d38bfff414610157578063f851a4401461009057610086565b80630c340a24146100905780633659cfe6146100c25780634f1ef286146100e25780635c60da1b146100f5575b61008e610177565b005b34801561009c57600080fd5b506100a5610197565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ce57600080fd5b5061008e6100dd3660046106fc565b6101b4565b61008e6100f03660046107f0565b6101ed565b34801561010157600080fd5b506100a561028a565b34801561011657600080fd5b5061008e6102a2565b34801561012b57600080fd5b50610134610346565b60405190151581526020016100b9565b61008e61015236600461071e565b610377565b34801561016357600080fd5b5061008e6101723660046106fc565b610488565b6101956101906000805160206109478339815191525490565b61052c565b565b60006101af6000805160206109678339815191525490565b905090565b6101bc610346565b6101e15760405162461bcd60e51b81526004016101d8906108be565b60405180910390fd5b6101ea81610550565b50565b6101f5610346565b6102115760405162461bcd60e51b81526004016101d8906108be565b61021a83610550565b6000836001600160a01b03168383604051610236929190610873565b600060405180830381855af49150503d8060008114610271576040519150601f19603f3d011682016040523d82523d6000602084013e610276565b606091505b505090508061028457600080fd5b50505050565b60006101af6000805160206109478339815191525490565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b03161461033d5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084016101d8565b61019533610590565b600061035e6000805160206109678339815191525490565b6001600160a01b0316336001600160a01b031614905090565b61037f610346565b61039b5760405162461bcd60e51b81526004016101d8906108be565b60006103b36000805160206109478339815191525490565b6001600160a01b0316146104095760405162461bcd60e51b815260206004820152601a60248201527f696d706c656d656e746174696f6e20616c72656164792073657400000000000060448201526064016101d8565b61043460017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6108f5565b600080516020610947833981519152146104505761045061091a565b61045982610590565b61046283610651565b805115610483576000836001600160a01b0316826040516102369190610883565b505050565b610490610346565b6104ac5760405162461bcd60e51b81526004016101d8906108be565b6104d4817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b03166104f46000805160206109678339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b3660008037600080366000845af43d6000803e80801561054b573d6000f35b3d6000fd5b61055981610651565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381166105e65760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f72206973206164647265737328302900000000000060448201526064016101d8565b806001600160a01b03166106066000805160206109678339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a36101ea8160008051602061096783398151915255565b6001600160a01b0381163b6106ce5760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060648201526084016101d8565b60008051602061094783398151915255565b80356001600160a01b03811681146106f757600080fd5b919050565b60006020828403121561070e57600080fd5b610717826106e0565b9392505050565b60008060006060848603121561073357600080fd5b61073c846106e0565b925061074a602085016106e0565b9150604084013567ffffffffffffffff8082111561076757600080fd5b818601915086601f83011261077b57600080fd5b81358181111561078d5761078d610930565b604051601f8201601f19908116603f011681019083821181831017156107b5576107b5610930565b816040528281528960208487010111156107ce57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060006040848603121561080557600080fd5b61080e846106e0565b9250602084013567ffffffffffffffff8082111561082b57600080fd5b818601915086601f83011261083f57600080fd5b81358181111561084e57600080fd5b87602082850101111561086057600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b6000825160005b818110156108a4576020818601810151858301520161088a565b818111156108b3576000828501525b509190910192915050565b6020808252601a908201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604082015260600190565b60008282101561091557634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa26469706673582212200955d8d5d169546bd126b39b667e9518eb12a47803b48a36f91fb7dda8dcd9ae64736f6c634300080700337bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27 CALLER PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x9BC DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D36B190 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xCF7A1D77 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x90 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH2 0x8E PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x8E PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x28A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x8E PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x190 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x346 JUMP JUMPDEST PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x550 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x21A DUP4 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x276 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x195 CALLER PUSH2 0x590 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x37F PUSH2 0x346 JUMP JUMPDEST PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696D706C656D656E746174696F6E20616C726561647920736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x434 PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x459 DUP3 PUSH2 0x590 JUMP JUMPDEST PUSH2 0x462 DUP4 PUSH2 0x651 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x490 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x4D4 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x54B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x559 DUP2 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x606 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1EA DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420612070726F787920696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP5 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x74A PUSH1 0x20 DUP6 ADD PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78D PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7B5 JUMPI PUSH2 0x7B5 PUSH2 0x930 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80E DUP5 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x88A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x915 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC7BEA13895FA79D2831E0A9 0xE2 DUP15 0xDE 0xDE ADDRESS MULMOD SWAP1 SDIV 0xA5 0xD PUSH6 0x2D8957CF8A60 PUSH31 0xE6CA4AA26469706673582212200955D8D5D169546BD126B39B667E9518EB12 LOG4 PUSH25 0x3B48A36F91FB7DDA8DCD9AE64736F6C634300080700337BEA SGT DUP10 0x5F 0xA7 SWAP14 0x28 BALANCE 0xE0 0xA9 0xE2 DUP15 0xDE 0xDE ADDRESS MULMOD SWAP1 SDIV 0xA5 0xD PUSH6 0x2D8957CF8A60 PUSH31 0xE6CA4A00000000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "469:6332:2:-:0;;;;;;;;;;;;-1:-1:-1;1494:24:1;1507:10;-1:-1:-1;;;;;;;;;;;2905:29:1;2772:180;1494:24;-1:-1:-1;;;;;;;;;;;2006:15:1;1534:48;;-1:-1:-1;;;;;1534:48:1;;;;1566:1;;1534:48;;1566:1;;1534:48;469:6332:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_657": {
									"entryPoint": null,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_changeGovernor_510": {
									"entryPoint": 1424,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_delegate_665": {
									"entryPoint": 1324,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_683": {
									"entryPoint": 375,
									"id": 683,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_governor_365": {
									"entryPoint": null,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_699": {
									"entryPoint": null,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pendingGovernor_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setGovernor_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_734": {
									"entryPoint": 1617,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPendingGovernor_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeTo_714": {
									"entryPoint": 1360,
									"id": 714,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_willFallback_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@admin_600": {
									"entryPoint": null,
									"id": 600,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@claimGovernance_483": {
									"entryPoint": 674,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@governor_353": {
									"entryPoint": 407,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@implementation_610": {
									"entryPoint": 650,
									"id": 610,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_590": {
									"entryPoint": 887,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isGovernor_401": {
									"entryPoint": 838,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferGovernance_464": {
									"entryPoint": 1160,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_649": {
									"entryPoint": 493,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@upgradeTo_623": {
									"entryPoint": 436,
									"id": 623,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44b666870f7297022b4ffea50218b9ff77211d5280e86bcb20acf4c17ec37506__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5632:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:3"
															},
															"nodeType": "YulIf",
															"src": "111:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "14:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:3"
															},
															"nodeType": "YulIf",
															"src": "272:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:3",
														"type": ""
													}
												],
												"src": "192:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:956:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "542:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "554:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "544:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "544:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "544:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "517:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "526:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "513:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "513:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "509:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:32:3"
															},
															"nodeType": "YulIf",
															"src": "506:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "567:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "577:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "567:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "615:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "648:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "659:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "644:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "625:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "615:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "672:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "703:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "714:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "699:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "686:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "686:32:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "676:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "727:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "737:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "731:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "782:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "791:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "794:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "784:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "784:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "770:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "778:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:14:3"
															},
															"nodeType": "YulIf",
															"src": "764:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "807:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "821:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "832:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "817:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "811:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "887:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "899:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "889:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "889:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "889:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "866:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "870:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "862:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "862:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "877:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "858:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "858:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "851:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:35:3"
															},
															"nodeType": "YulIf",
															"src": "848:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "912:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "935:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "916:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "961:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "963:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "963:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "963:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "953:2:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "957:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "950:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:10:3"
															},
															"nodeType": "YulIf",
															"src": "947:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "992:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1006:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1002:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:7:3"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "996:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1018:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1038:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1032:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1022:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1072:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1096:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1100:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1092:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1092:13:3"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1107:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1088:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1088:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1084:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1084:31:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1117:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1068:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1054:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1180:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1182:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1182:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1182:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1139:10:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1151:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1136:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1159:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1171:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1156:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1156:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1133:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:46:3"
															},
															"nodeType": "YulIf",
															"src": "1130:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1222:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1211:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1249:6:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1257:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:18:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1306:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1315:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1318:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1308:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1308:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1308:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1283:2:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1287:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1279:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1279:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1297:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:33:3"
															},
															"nodeType": "YulIf",
															"src": "1269:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1344:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1344:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1365:2:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1361:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1361:11:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1374:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1331:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1401:6:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1409:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1397:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1397:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1393:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1393:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1430:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1440:6:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1430:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "446:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "457:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "469:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "477:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "485:6:3",
														"type": ""
													}
												],
												"src": "383:1069:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:559:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1609:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1584:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1593:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1576:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:32:3"
															},
															"nodeType": "YulIf",
															"src": "1573:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1634:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1663:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1644:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1644:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1713:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1724:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1709:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1709:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:32:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1686:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1737:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1747:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1741:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1792:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1801:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1794:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1794:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1794:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1780:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1788:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1777:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:14:3"
															},
															"nodeType": "YulIf",
															"src": "1774:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1817:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1827:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1827:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1821:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1897:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1906:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1899:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1899:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1876:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1880:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1872:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1872:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1887:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1868:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1868:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:35:3"
															},
															"nodeType": "YulIf",
															"src": "1858:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1922:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1949:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1936:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:16:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1926:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1979:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1988:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1991:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1981:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1981:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1967:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1975:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1964:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:14:3"
															},
															"nodeType": "YulIf",
															"src": "1961:34:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2045:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2057:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2047:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2047:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2018:2:3"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2022:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2014:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2014:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2031:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2010:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2010:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2036:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2007:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:37:3"
															},
															"nodeType": "YulIf",
															"src": "2004:57:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2070:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2084:2:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:11:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2100:16:3",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2110:6:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2100:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1513:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1524:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1536:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1544:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1552:6:3",
														"type": ""
													}
												],
												"src": "1457:665:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:124:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2310:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:33:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2326:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2340:3:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2336:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:16:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2330:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2368:2:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2372:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:13:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2361:13:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:9:3",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "2390:2:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2242:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2247:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2266:3:3",
														"type": ""
													}
												],
												"src": "2127:271:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2540:289:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2550:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2570:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2564:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2554:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2586:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2595:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2590:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2657:77:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2682:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2687:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2678:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2678:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2705:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2713:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2701:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2701:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2717:4:3",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2697:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2697:25:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2691:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2691:32:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2671:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2671:53:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2671:53:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2616:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2627:21:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2629:17:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2638:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2641:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2634:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2634:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2629:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2609:3:3",
																"statements": []
															},
															"src": "2605:129:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2760:31:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2773:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2778:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2769:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2769:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2787:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2762:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2749:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2746:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2746:13:3"
															},
															"nodeType": "YulIf",
															"src": "2743:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2800:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2816:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2807:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2800:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2516:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2521:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2532:3:3",
														"type": ""
													}
												],
												"src": "2403:426:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2935:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2945:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2957:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2968:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2945:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2987:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3018:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3023:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3014:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3014:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3027:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3010:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3010:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2998:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2998:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2980:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2980:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2904:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2915:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2926:4:3",
														"type": ""
													}
												],
												"src": "2834:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3147:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3147:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3189:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3214:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3207:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3207:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3200:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3106:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3117:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3128:4:3",
														"type": ""
													}
												],
												"src": "3042:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3408:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3418:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3418:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3459:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3470:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3455:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3475:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3448:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3448:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3498:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3509:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3494:18:3"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742074686520476f7665726e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3514:28:3",
																		"type": "",
																		"value": "Caller is not the Governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3552:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3564:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3575:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3552:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3385:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3399:4:3",
														"type": ""
													}
												],
												"src": "3234:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3763:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3780:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3791:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3773:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3814:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3825:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3830:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3803:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3803:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3853:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3864:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:18:3"
																	},
																	{
																		"hexValue": "696d706c656d656e746174696f6e20616c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3869:28:3",
																		"type": "",
																		"value": "implementation already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3907:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3919:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3907:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44b666870f7297022b4ffea50218b9ff77211d5280e86bcb20acf4c17ec37506__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3740:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3754:4:3",
														"type": ""
													}
												],
												"src": "3589:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4135:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4146:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4128:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4169:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4180:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4165:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4158:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4208:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4219:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4204:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4204:18:3"
																	},
																	{
																		"hexValue": "4e657720476f7665726e6f722069732061646472657373283029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4224:28:3",
																		"type": "",
																		"value": "New Governor is address(0)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4197:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4197:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4197:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4262:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4274:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4285:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4270:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4262:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4095:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4109:4:3",
														"type": ""
													}
												],
												"src": "3944:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:249:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4490:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4501:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4483:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4524:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4535:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4520:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4540:2:3",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4563:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4574:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4559:18:3"
																	},
																	{
																		"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4579:34:3",
																		"type": "",
																		"value": "Cannot set a proxy implementatio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4552:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4645:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4630:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4630:18:3"
																	},
																	{
																		"hexValue": "6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4650:29:3",
																		"type": "",
																		"value": "n to a non-contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4623:57:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4689:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4712:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4689:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4450:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4464:4:3",
														"type": ""
													}
												],
												"src": "4299:423:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4901:238:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4918:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4929:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4911:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4952:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4963:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4948:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4948:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4968:2:3",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4941:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4941:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4941:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4991:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5002:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4987:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4987:18:3"
																	},
																	{
																		"hexValue": "4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5007:34:3",
																		"type": "",
																		"value": "Only the pending Governor can co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4980:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5062:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5073:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5058:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5058:18:3"
																	},
																	{
																		"hexValue": "6d706c6574652074686520636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5078:18:3",
																		"type": "",
																		"value": "mplete the claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5051:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5106:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5118:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5129:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5106:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4878:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4892:4:3",
														"type": ""
													}
												],
												"src": "4727:412:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5193:173:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5223:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5244:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5251:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5256:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5247:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5247:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5237:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5237:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5237:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5288:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5291:4:3",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5281:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5316:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5319:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5309:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5309:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5309:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5209:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5212:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5206:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:8:3"
															},
															"nodeType": "YulIf",
															"src": "5203:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5343:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5355:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5358:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5343:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5175:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5178:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5184:4:3",
														"type": ""
													}
												],
												"src": "5144:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5403:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5420:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5427:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5432:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5423:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5423:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5413:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5460:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5463:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5453:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5453:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5484:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5487:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5477:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5477:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5477:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "5371:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5535:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5559:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5564:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5555:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5555:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5545:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5592:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5595:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5585:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5585:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5616:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5619:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5609:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5609:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5503:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Caller is not the Governor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_44b666870f7297022b4ffea50218b9ff77211d5280e86bcb20acf4c17ec37506__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"implementation already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"New Governor is address(0)\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"Cannot set a proxy implementatio\")\n        mstore(add(headStart, 96), \"n to a non-contract address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Only the pending Governor can co\")\n        mstore(add(headStart, 96), \"mplete the claim\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100865760003560e01c80635d36b190116100595780635d36b1901461010a578063c7af33521461011f578063cf7a1d7714610144578063d38bfff414610157578063f851a4401461009057610086565b80630c340a24146100905780633659cfe6146100c25780634f1ef286146100e25780635c60da1b146100f5575b61008e610177565b005b34801561009c57600080fd5b506100a5610197565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100ce57600080fd5b5061008e6100dd3660046106fc565b6101b4565b61008e6100f03660046107f0565b6101ed565b34801561010157600080fd5b506100a561028a565b34801561011657600080fd5b5061008e6102a2565b34801561012b57600080fd5b50610134610346565b60405190151581526020016100b9565b61008e61015236600461071e565b610377565b34801561016357600080fd5b5061008e6101723660046106fc565b610488565b6101956101906000805160206109478339815191525490565b61052c565b565b60006101af6000805160206109678339815191525490565b905090565b6101bc610346565b6101e15760405162461bcd60e51b81526004016101d8906108be565b60405180910390fd5b6101ea81610550565b50565b6101f5610346565b6102115760405162461bcd60e51b81526004016101d8906108be565b61021a83610550565b6000836001600160a01b03168383604051610236929190610873565b600060405180830381855af49150503d8060008114610271576040519150601f19603f3d011682016040523d82523d6000602084013e610276565b606091505b505090508061028457600080fd5b50505050565b60006101af6000805160206109478339815191525490565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b03161461033d5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084016101d8565b61019533610590565b600061035e6000805160206109678339815191525490565b6001600160a01b0316336001600160a01b031614905090565b61037f610346565b61039b5760405162461bcd60e51b81526004016101d8906108be565b60006103b36000805160206109478339815191525490565b6001600160a01b0316146104095760405162461bcd60e51b815260206004820152601a60248201527f696d706c656d656e746174696f6e20616c72656164792073657400000000000060448201526064016101d8565b61043460017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6108f5565b600080516020610947833981519152146104505761045061091a565b61045982610590565b61046283610651565b805115610483576000836001600160a01b0316826040516102369190610883565b505050565b610490610346565b6104ac5760405162461bcd60e51b81526004016101d8906108be565b6104d4817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b03166104f46000805160206109678339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b3660008037600080366000845af43d6000803e80801561054b573d6000f35b3d6000fd5b61055981610651565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6001600160a01b0381166105e65760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f72206973206164647265737328302900000000000060448201526064016101d8565b806001600160a01b03166106066000805160206109678339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a36101ea8160008051602061096783398151915255565b6001600160a01b0381163b6106ce5760405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e74726163742061646472657373000000000060648201526084016101d8565b60008051602061094783398151915255565b80356001600160a01b03811681146106f757600080fd5b919050565b60006020828403121561070e57600080fd5b610717826106e0565b9392505050565b60008060006060848603121561073357600080fd5b61073c846106e0565b925061074a602085016106e0565b9150604084013567ffffffffffffffff8082111561076757600080fd5b818601915086601f83011261077b57600080fd5b81358181111561078d5761078d610930565b604051601f8201601f19908116603f011681019083821181831017156107b5576107b5610930565b816040528281528960208487010111156107ce57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60008060006040848603121561080557600080fd5b61080e846106e0565b9250602084013567ffffffffffffffff8082111561082b57600080fd5b818601915086601f83011261083f57600080fd5b81358181111561084e57600080fd5b87602082850101111561086057600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b6000825160005b818110156108a4576020818601810151858301520161088a565b818111156108b3576000828501525b509190910192915050565b6020808252601a908201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604082015260600190565b60008282101561091557634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa26469706673582212200955d8d5d169546bd126b39b667e9518eb12a47803b48a36f91fb7dda8dcd9ae64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D36B190 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x5D36B190 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xC7AF3352 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xCF7A1D77 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xD38BFFF4 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x90 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0xC340A24 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH2 0x8E PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x8E PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA5 PUSH2 0x28A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x2A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x8E PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x190 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x346 JUMP JUMPDEST PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EA DUP2 PUSH2 0x550 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x21A DUP4 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x236 SWAP3 SWAP2 SWAP1 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x276 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6D706C6574652074686520636C61696D PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x195 CALLER PUSH2 0x590 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x37F PUSH2 0x346 JUMP JUMPDEST PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696D706C656D656E746174696F6E20616C726561647920736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH2 0x434 PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x459 DUP3 PUSH2 0x590 JUMP JUMPDEST PUSH2 0x462 DUP4 PUSH2 0x651 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x883 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x490 PUSH2 0x346 JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x4D4 DUP2 PUSH32 0x44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x54B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x559 DUP2 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720476F7665726E6F722069732061646472657373283029000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x606 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1EA DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x967 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073657420612070726F787920696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x947 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP5 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x74A PUSH1 0x20 DUP6 ADD PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78D PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x7B5 JUMPI PUSH2 0x7B5 PUSH2 0x930 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x80E DUP5 PUSH2 0x6E0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x88A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x915 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC7BEA13895FA79D2831E0A9 0xE2 DUP15 0xDE 0xDE ADDRESS MULMOD SWAP1 SDIV 0xA5 0xD PUSH6 0x2D8957CF8A60 PUSH31 0xE6CA4AA26469706673582212200955D8D5D169546BD126B39B667E9518EB12 LOG4 PUSH25 0x3B48A36F91FB7DDA8DCD9AE64736F6C634300080700330000 ",
							"sourceMap": "469:6332:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3626:11;:9;:11::i;:::-;469:6332;1674:87:1;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2998:32:3;;;2980:51;;2968:2;2953:18;1674:87:1;;;;;;;;2543:116:2;;;;;;;;;;-1:-1:-1;2543:116:2;;;;;:::i;:::-;;:::i;3207:277::-;;;;;;:::i;:::-;;:::i;2239:101::-;;;;;;;;;;;;;:::i;4839:223:1:-;;;;;;;;;;;;;:::i;2664:100::-;;;;;;;;;;;;;:::i;:::-;;;3207:14:3;;3200:22;3182:41;;3170:2;3155:18;2664:100:1;3042:187:3;1390:589:2;;;;;;:::i;:::-;;:::i;4491:194:1:-;;;;;;;;;;-1:-1:-1;4491:194:1;;;;;:::i;:::-;;:::i;5211:103:2:-;5278:28;5288:17;-1:-1:-1;;;;;;;;;;;5956:11:2;;5804:181;5288:17;5278:9;:28::i;:::-;5211:103::o;1674:87:1:-;1715:7;1742:11;-1:-1:-1;;;;;;;;;;;2006:15:1;;1845:194;1742:11;1735:18;;1674:87;:::o;2543:116:2:-;2510:12:1;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:1;;;;;;;:::i;:::-;;;;;;;;;2622:29:2::1;2633:17;2622:10;:29::i;:::-;2543:116:::0;:::o;3207:277::-;2510:12:1;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:1;;;;;;;:::i;:::-;3354:29:2::1;3365:17;3354:10;:29::i;:::-;3395:12;3413:17;-1:-1:-1::0;;;;;3413:30:2::1;3444:4;;3413:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3394:55;;;3468:7;3460:16;;;::::0;::::1;;3343:141;3207:277:::0;;;:::o;2239:101::-;2288:7;2315:17;-1:-1:-1;;;;;;;;;;;5956:11:2;;5804:181;4839:223:1;727:66;2338:15;-1:-1:-1;;;;;4908:32:1;:10;-1:-1:-1;;;;;4908:32:1;;4886:130;;;;-1:-1:-1;;;4886:130:1;;4929:2:3;4886:130:1;;;4911:21:3;4968:2;4948:18;;;4941:30;5007:34;4987:18;;;4980:62;-1:-1:-1;;;5058:18:3;;;5051:46;5114:19;;4886:130:1;4727:412:3;4886:130:1;5027:27;5043:10;5027:15;:27::i;2664:100::-;2707:4;2745:11;-1:-1:-1;;;;;;;;;;;2006:15:1;;1845:194;2745:11;-1:-1:-1;;;;;2731:25:1;:10;-1:-1:-1;;;;;2731:25:1;;2724:32;;2664:100;:::o;1390:589:2:-;2510:12:1;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:1;;;;;;;:::i;:::-;1579:1:2::1;1550:17;-1:-1:-1::0;;;;;;;;;;;5956:11:2;;5804:181;1550:17:::1;-1:-1:-1::0;;;;;1550:31:2::1;;1542:70;;;::::0;-1:-1:-1;;;1542:70:2;;3791:2:3;1542:70:2::1;::::0;::::1;3773:21:3::0;3830:2;3810:18;;;3803:30;3869:28;3849:18;;;3842:56;3915:18;;1542:70:2::1;3589:350:3::0;1542:70:2::1;1692:54;1745:1;1700:41;1692:54;:::i;:::-;-1:-1:-1::0;;;;;;;;;;;1644:103:2::1;1623:135;;;;:::i;:::-;1769:30;1785:13;1769:15;:30::i;:::-;1810:26;1829:6;1810:18;:26::i;:::-;1851:12:::0;;:16;1847:125:::1;;1885:12;1903:6;-1:-1:-1::0;;;;;1903:19:2::1;1923:5;1903:26;;;;;;:::i;1847:125::-;1390:589:::0;;;:::o;4491:194:1:-;2510:12;:10;:12::i;:::-;2502:51;;;;-1:-1:-1;;;2502:51:1;;;;;;;:::i;:::-;4574:33:::1;4594:12;727:66:::0;4189:29;4042:194;4574:33:::1;4664:12;-1:-1:-1::0;;;;;4623:54:1::1;4651:11;-1:-1:-1::0;;;;;;;;;;;2006:15:1;;1845:194;4651:11:::1;-1:-1:-1::0;;;;;4623:54:1::1;;;;;;;;;;;4491:194:::0;:::o;3944:892:2:-;4270:14;4267:1;4264;4251:34;4479:1;4476;4460:14;4457:1;4450:5;4443;4430:51;4558:16;4555:1;4552;4537:38;4598:6;4667:68;;;;4786:16;4783:1;4776:27;4667:68;4703:16;4700:1;4693:27;6136:155;6203:37;6222:17;6203:18;:37::i;:::-;6256:27;;-1:-1:-1;;;;;6256:27:2;;;;;;;;6136:155;:::o;5225:243:1:-;-1:-1:-1;;;;;5300:26:1;;5292:65;;;;-1:-1:-1;;;5292:65:1;;4146:2:3;5292:65:1;;;4128:21:3;4185:2;4165:18;;;4158:30;4224:28;4204:18;;;4197:56;4270:18;;5292:65:1;3944:350:3;5292:65:1;5410:12;-1:-1:-1;;;;;5373:50:1;5397:11;-1:-1:-1;;;;;;;;;;;2006:15:1;;1845:194;5397:11;-1:-1:-1;;;;;5373:50:1;;;;;;;;;;;5434:26;5447:12;-1:-1:-1;;;;;;;;;;;2905:29:1;2772:180;6444:354:2;-1:-1:-1;;;;;1465:19:0;;;6519:146:2;;;;-1:-1:-1;;;6519:146:2;;4501:2:3;6519:146:2;;;4483:21:3;4540:2;4520:18;;;4513:30;4579:34;4559:18;;;4552:62;4650:29;4630:18;;;4623:57;4697:19;;6519:146:2;4299:423:3;6519:146:2;-1:-1:-1;;;;;;;;;;;6749:31:2;6444:354::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:3:o;383:1069::-;469:6;477;485;538:2;526:9;517:7;513:23;509:32;506:52;;;554:1;551;544:12;506:52;577:29;596:9;577:29;:::i;:::-;567:39;;625:38;659:2;648:9;644:18;625:38;:::i;:::-;615:48;;714:2;703:9;699:18;686:32;737:18;778:2;770:6;767:14;764:34;;;794:1;791;784:12;764:34;832:6;821:9;817:22;807:32;;877:7;870:4;866:2;862:13;858:27;848:55;;899:1;896;889:12;848:55;935:2;922:16;957:2;953;950:10;947:36;;;963:18;;:::i;:::-;1038:2;1032:9;1006:2;1092:13;;-1:-1:-1;;1088:22:3;;;1112:2;1084:31;1080:40;1068:53;;;1136:18;;;1156:22;;;1133:46;1130:72;;;1182:18;;:::i;:::-;1222:10;1218:2;1211:22;1257:2;1249:6;1242:18;1297:7;1292:2;1287;1283;1279:11;1275:20;1272:33;1269:53;;;1318:1;1315;1308:12;1269:53;1374:2;1369;1365;1361:11;1356:2;1348:6;1344:15;1331:46;1419:1;1414:2;1409;1401:6;1397:15;1393:24;1386:35;1440:6;1430:16;;;;;;;383:1069;;;;;:::o;1457:665::-;1536:6;1544;1552;1605:2;1593:9;1584:7;1580:23;1576:32;1573:52;;;1621:1;1618;1611:12;1573:52;1644:29;1663:9;1644:29;:::i;:::-;1634:39;;1724:2;1713:9;1709:18;1696:32;1747:18;1788:2;1780:6;1777:14;1774:34;;;1804:1;1801;1794:12;1774:34;1842:6;1831:9;1827:22;1817:32;;1887:7;1880:4;1876:2;1872:13;1868:27;1858:55;;1909:1;1906;1899:12;1858:55;1949:2;1936:16;1975:2;1967:6;1964:14;1961:34;;;1991:1;1988;1981:12;1961:34;2036:7;2031:2;2022:6;2018:2;2014:15;2010:24;2007:37;2004:57;;;2057:1;2054;2047:12;2004:57;2088:2;2084;2080:11;2070:21;;2110:6;2100:16;;;;;1457:665;;;;;:::o;2127:271::-;2310:6;2302;2297:3;2284:33;2266:3;2336:16;;2361:13;;;2336:16;2127:271;-1:-1:-1;2127:271:3:o;2403:426::-;2532:3;2570:6;2564:13;2595:1;2605:129;2619:6;2616:1;2613:13;2605:129;;;2717:4;2701:14;;;2697:25;;2691:32;2678:11;;;2671:53;2634:12;2605:129;;;2752:6;2749:1;2746:13;2743:48;;;2787:1;2778:6;2773:3;2769:16;2762:27;2743:48;-1:-1:-1;2807:16:3;;;;;2403:426;-1:-1:-1;;2403:426:3:o;3234:350::-;3436:2;3418:21;;;3475:2;3455:18;;;3448:30;3514:28;3509:2;3494:18;;3487:56;3575:2;3560:18;;3234:350::o;5144:222::-;5184:4;5212:1;5209;5206:8;5203:131;;;5256:10;5251:3;5247:20;5244:1;5237:31;5291:4;5288:1;5281:15;5319:4;5316:1;5309:15;5203:131;-1:-1:-1;5351:9:3;;5144:222::o;5371:127::-;5432:10;5427:3;5423:20;5420:1;5413:31;5463:4;5460:1;5453:15;5487:4;5484:1;5477:15;5503:127;5564:10;5559:3;5555:20;5552:1;5545:31;5595:4;5592:1;5585:15;5619:4;5616:1;5609:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "498400",
								"executionCost": "26367",
								"totalCost": "524767"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"claimGovernance()": "28233",
								"governor()": "infinite",
								"implementation()": "infinite",
								"initialize(address,address,bytes)": "infinite",
								"isGovernor()": "infinite",
								"transferGovernance(address)": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_delegate(address)": "infinite",
								"_fallback()": "infinite",
								"_implementation()": "infinite",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite",
								"_willFallback()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1507,
									"end": 1517,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2905,
									"end": 2934,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2772,
									"end": 2952,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1494,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2006,
									"end": 2021,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "PUSH",
									"source": 1,
									"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1534,
									"end": 1582,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 469,
									"end": 6801,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200955d8d5d169546bd126b39b667e9518eb12a47803b48a36f91fb7dda8dcd9ae64736f6c63430008070033",
									".code": [
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "5D36B190"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "5D36B190"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "C7AF3352"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "CF7A1D77"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "D38BFFF4"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "F851A440"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "C340A24"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "3659CFE6"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "4F1EF286"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH",
											"source": 2,
											"value": "5C60DA1B"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 6801,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2998,
											"end": 3030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3030,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3031,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3031,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3207,
											"end": 3221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3207,
											"end": 3221,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3222,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3229,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5314,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5211,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5278,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5288,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5956,
											"end": 5967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5985,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5288,
											"end": 5305,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5288,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5278,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5278,
											"end": 5306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5278,
											"end": 5306,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5278,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5211,
											"end": 5314,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1742,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1761,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2633,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2622,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2659,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3365,
											"end": 3382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3354,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3354,
											"end": 3383,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3354,
											"end": 3383,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3354,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3430,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3444,
											"end": 3448,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3413,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3207,
											"end": 3484,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2239,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5956,
											"end": 5967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5985,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4839,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 2338,
											"end": 2353,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4918,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4940,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4931,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 4970,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4971,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5041,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C79207468652070656E64696E6720476F7665726E6F722063616E20636F"
										},
										{
											"begin": 4987,
											"end": 5005,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4987,
											"end": 5005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4987,
											"end": 5005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D706C6574652074686520636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5076,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5058,
											"end": 5076,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5058,
											"end": 5076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5051,
											"end": 5097,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5133,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5114,
											"end": 5133,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4727,
											"end": 5139,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4886,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5043,
											"end": 5053,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5027,
											"end": 5054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2745,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2741,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2756,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2764,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5956,
											"end": 5967,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5956,
											"end": 5967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5985,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1550,
											"end": 1581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1581,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3791,
											"end": 3793,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3832,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3833,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3869,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "696D706C656D656E746174696F6E20616C726561647920736574000000000000"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3915,
											"end": 3933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3589,
											"end": 3939,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1542,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1700,
											"end": 1741,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD"
										},
										{
											"begin": 1692,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1692,
											"end": 1746,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1746,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1692,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1644,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1623,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1785,
											"end": 1798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1769,
											"end": 1799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1769,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1769,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1863,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1867,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1847,
											"end": 1972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1903,
											"end": 1922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1903,
											"end": 1929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1847,
											"end": 1972,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1847,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1979,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2502,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4594,
											"end": 4606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "44C4D30B2EAAD5130AD70C3BA6972730566F3E6359AB83E800D905C61B1C51DB"
										},
										{
											"begin": 4189,
											"end": 4218,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4236,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4574,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4651,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "A39CC5EB22D0F34D8BEAEFEE8A3F17CC229C1A1D1EF87A5AD47313487B1C4F0D"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4677,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3944,
											"end": 4836,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3944,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4284,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4285,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4460,
											"end": 4474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4455,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4443,
											"end": 4448,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4481,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 4558,
											"end": 4574,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4575,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4735,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4667,
											"end": 4735,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4802,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4803,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4667,
											"end": 4735,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4667,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4703,
											"end": 4719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4693,
											"end": 4720,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6136,
											"end": 6291,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6136,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6222,
											"end": 6239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6203,
											"end": 6240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6203,
											"end": 6240,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6203,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 6283,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 6136,
											"end": 6291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6136,
											"end": 6291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5225,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4252,
											"name": "PUSH",
											"source": 3,
											"value": "4E657720476F7665726E6F722069732061646472657373283029000000000000"
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3944,
											"end": 4294,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5292,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 2039,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "C7C0C772ADD429241571AFB3805861FB3CFA2AF374534088B76CDB4325A87E9A"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5423,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2934,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 2952,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6798,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6444,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4483,
											"end": 4504,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 3,
											"value": "3B"
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4613,
											"name": "PUSH",
											"source": 3,
											"value": "43616E6E6F742073657420612070726F787920696D706C656D656E746174696F"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4614,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4679,
											"name": "PUSH",
											"source": 3,
											"value": "6E20746F2061206E6F6E2D636F6E747261637420616464726573730000000000"
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4680,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4299,
											"end": 4722,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6519,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6749,
											"end": 6780,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6444,
											"end": 6798,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 469,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 483,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 485,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 540,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 526,
											"end": 535,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 517,
											"end": 524,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 513,
											"end": 536,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 509,
											"end": 541,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 506,
											"end": 558,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 506,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 544,
											"end": 556,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 506,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 577,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 577,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 577,
											"end": 606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 606,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 577,
											"end": 606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 567,
											"end": 606,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 567,
											"end": 606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 625,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 659,
											"end": 661,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 644,
											"end": 662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 625,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 625,
											"end": 663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 663,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 625,
											"end": 663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 615,
											"end": 663,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 615,
											"end": 663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 712,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 699,
											"end": 717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 686,
											"end": 718,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 737,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 770,
											"end": 776,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 767,
											"end": 781,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 764,
											"end": 798,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 764,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 764,
											"end": 798,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 784,
											"end": 796,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 764,
											"end": 798,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 764,
											"end": 798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 817,
											"end": 839,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 807,
											"end": 839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 866,
											"end": 868,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 862,
											"end": 875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 858,
											"end": 885,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 848,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 848,
											"end": 903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 899,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 889,
											"end": 901,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 848,
											"end": 903,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 848,
											"end": 903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 922,
											"end": 938,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 957,
											"end": 959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 953,
											"end": 955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 950,
											"end": 960,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 947,
											"end": 983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 947,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 947,
											"end": 983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1110,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1084,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1068,
											"end": 1121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1178,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1179,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1202,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1130,
											"end": 1202,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1249,
											"end": 1255,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1292,
											"end": 1294,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1285,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1275,
											"end": 1295,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1305,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1269,
											"end": 1322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1322,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 1269,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1344,
											"end": 1359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1377,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1412,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1421,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 383,
											"end": 1452,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1602,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1591,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1603,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1608,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1663,
											"end": 1672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1644,
											"end": 1673,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1673,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1644,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1634,
											"end": 1673,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1634,
											"end": 1673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1724,
											"end": 1726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1713,
											"end": 1722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1728,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1765,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1788,
											"end": 1790,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1777,
											"end": 1791,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1806,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1774,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1840,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1894,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1876,
											"end": 1878,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1895,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1858,
											"end": 1913,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 1911,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1913,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1858,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1978,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1961,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2020,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2044,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2059,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2004,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2091,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2091,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2116,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 2122,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2127,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2127,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2317,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2374,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2361,
											"end": 2374,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2398,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2403,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2403,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2577,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2626,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2721,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2701,
											"end": 2715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2722,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2722,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2689,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2689,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2671,
											"end": 2724,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2605,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2759,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2743,
											"end": 2791,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2743,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2743,
											"end": 2791,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2787,
											"end": 2788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2776,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2743,
											"end": 2791,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2743,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2823,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2403,
											"end": 2829,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3234,
											"end": 3584,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3234,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3473,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3542,
											"name": "PUSH",
											"source": 3,
											"value": "43616C6C6572206973206E6F742074686520476F7665726E6F72000000000000"
										},
										{
											"begin": 3509,
											"end": 3511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3577,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3584,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5144,
											"end": 5366,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5144,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5213,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5214,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5334,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5203,
											"end": 5334,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5266,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5251,
											"end": 5254,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5247,
											"end": 5267,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5244,
											"end": 5245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5268,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5281,
											"end": 5296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5324,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5334,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5203,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5360,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5144,
											"end": 5366,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5371,
											"end": 5498,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5371,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5432,
											"end": 5442,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5427,
											"end": 5430,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5444,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5463,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5484,
											"end": 5485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5492,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5630,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5503,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5564,
											"end": 5574,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5559,
											"end": 5562,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5555,
											"end": 5575,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5599,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5592,
											"end": 5593,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5585,
											"end": 5600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5624,
											"name": "REVERT",
											"source": 3
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
									}
								},
								"B21729280315B05B5209E280F80ABC0024D9412A0BCFD98DA242C4E2094FAAD4": "7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"claimGovernance()": "5d36b190",
							"governor()": "0c340a24",
							"implementation()": "5c60da1b",
							"initialize(address,address,bytes)": "cf7a1d77",
							"isGovernor()": "c7af3352",
							"transferGovernance(address)": "d38bfff4",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorshipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initGovernor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origin Protocol Inc\",\"details\":\"This contract combines an upgradeability proxy with our governor system. It is based on an older version of OpenZeppelins BaseUpgradeabilityProxy with Solidity ^0.8.0.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin/it's also the governor.\"}},\"claimGovernance()\":{\"details\":\"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.\"},\"governor()\":{\"details\":\"Returns the address of the current Governor.\"},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"initialize(address,address,bytes)\":{\"details\":\"Contract initializer with Governor enforcement\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_initGovernor\":\"Address of the initial Governor.\",\"_logic\":\"Address of the initial implementation.\"}},\"isGovernor()\":{\"details\":\"Returns true if the caller is the current Governor.\"},\"transferGovernance(address)\":{\"details\":\"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete\",\"params\":{\"_newGovernor\":\"Address of the new Governor\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"stateVariables\":{\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"title\":\"BaseGovernedUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":\"InitializeGovernedUpgradeabilityProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/contracts/governance/Governable.sol\":{\"keccak256\":\"0xe5e82e9c9b2611b9cc82e2a047cb7fed850133eecc5a070ee61093c348bcc976\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://752df48fe4a3578b2a08f7518a261eb340bc7940ecb3d24929d7c2af1ed24c91\",\"dweb:/ipfs/QmbHseRzFZqTuoKzavEgWSZveBMPT5hjgcZP2xWUUgaTTU\"]},\"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol\":{\"keccak256\":\"0xde4e06400d0b9c7790d842c699b6a3e29f3533f65305b4614774848e98c26bd4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://ccfe203153680eb39c8027ac4a453e357c9db1facd2420d72efa75d1ac2d6c5a\",\"dweb:/ipfs/QmT2z2jfKyViyWA498f4fRZKtYD9p7ZqBjUGSKZozchEYJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol:15:1:\n   |\n15 | contract InitializeGovernedUpgradeabilityProxy is Governable {\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol:98:5:\n   |\n98 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3645,
						"file": "contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 3587
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 6801,
					"file": "contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol",
					"start": 469
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1241:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1458:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:0"
									},
									"scope": 294,
									"src": "1175:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2483:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2526:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2578:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2596:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2618:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2431:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 294,
									"src": "2412:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3555:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3572:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3565:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3541:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:0"
									},
									"scope": 294,
									"src": "3466:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4008:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4064:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4025:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4018:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3916:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3943:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3994:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:0"
									},
									"scope": 294,
									"src": "3861:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4589:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4642:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4606:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4599:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4510:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4575:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:0"
									},
									"scope": 294,
									"src": "4446:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5127:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5300:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5314:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5341:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5427:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5389:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5382:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5012:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5062:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5113:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:0"
									},
									"scope": 294,
									"src": "4948:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5724:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5741:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5734:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5668:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5710:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:0"
									},
									"scope": 294,
									"src": "5624:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6163:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6192:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6252:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6266:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6371:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6333:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6326:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6066:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6093:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6149:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:0"
									},
									"scope": 294,
									"src": "6005:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6667:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6684:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6677:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6616:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6653:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:0"
									},
									"scope": 294,
									"src": "6570:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7109:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7138:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7127:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7200:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7214:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7321:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7283:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7276:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7017:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7044:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7095:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:0"
									},
									"scope": 294,
									"src": "6954:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7721:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7792:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7876:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8184:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8209:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7872:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7899:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7731:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7744:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7758:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7618:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7707:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:0"
									},
									"scope": 294,
									"src": "7561:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "194:8061:0",
							"usedErrors": []
						}
					],
					"src": "101:8155:0"
				},
				"id": 0
			},
			"contracts/contracts/governance/Governable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/governance/Governable.sol",
					"exportedSymbols": {
						"Governable": [
							511
						]
					},
					"id": 512,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "65:294:1",
								"text": " @title OUSD Governable Contract\n @dev Copy of the openzeppelin Ownable.sol contract with nomenclature change\n      from owner to governor and renounce methods removed. Does not use\n      Context.sol like Ownable.sol does for simplification.\n @author Origin Protocol Inc"
							},
							"fullyImplemented": true,
							"id": 511,
							"linearizedBaseContracts": [
								511
							],
							"name": "Governable",
							"nameLocation": "370:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 300,
									"mutability": "constant",
									"name": "governorPosition",
									"nameLocation": "520:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "495:119:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 298,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307837626561313338393566613739643238333165306139653238656465646533303039393030356135306436353264383935376366386136303765653663613461",
										"id": 299,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "548:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_56048057425666810188752082616944818219155651917637142059693061807260393982538_by_1",
											"typeString": "int_const 5604...(69 digits omitted)...2538"
										},
										"value": "0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 303,
									"mutability": "constant",
									"name": "pendingGovernorPosition",
									"nameLocation": "692:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "667:126:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 301,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "667:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834346334643330623265616164353133306164373063336261363937323733303536366633653633353961623833653830306439303563363162316335316462",
										"id": 302,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "727:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31105032298311905643374494432355501752964520468510919922994212410675129242075_by_1",
											"typeString": "int_const 3110...(69 digits omitted)...2075"
										},
										"value": "0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 306,
									"mutability": "constant",
									"name": "reentryStatusPosition",
									"nameLocation": "869:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "844:124:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 304,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "844:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835336266343233653438656439306539376430326162306562616231336232613233356136626662653963333231383437643563313735333333616334353335",
										"id": 305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "902:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37879891416239577192351676265510261015593290603114627883703428043940859495733_by_1",
											"typeString": "int_const 3787...(69 digits omitted)...5733"
										},
										"value": "0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 309,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1050:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "1033:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 307,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1033:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 308,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1065:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 312,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1090:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 511,
									"src": "1073:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 310,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1073:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1101:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 318,
									"name": "PendingGovernorshipTransfer",
									"nameLocation": "1117:27:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousGovernor",
												"nameLocation": "1171:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1155:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "1214:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1198:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:88:1"
									},
									"src": "1111:122:1"
								},
								{
									"anonymous": false,
									"id": 324,
									"name": "GovernorshipTransferred",
									"nameLocation": "1247:23:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousGovernor",
												"nameLocation": "1297:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1281:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "1340:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1324:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:88:1"
									},
									"src": "1241:118:1"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "1483:107:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1507:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1507:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "_setGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1494:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1494:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "1494:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 334,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1558:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 338,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1570:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1570:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 333,
														"name": "GovernorshipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1534:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "EmitStatement",
												"src": "1529:53:1"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1367:96:1",
										"text": " @dev Initializes the contract setting the deployer as the initial Governor."
									},
									"id": 343,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:2:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1483:0:1"
									},
									"scope": 511,
									"src": "1469:121:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "1724:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 349,
														"name": "_governor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1742:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "1735:18:1"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1598:70:1",
										"text": " @dev Returns the address of the current Governor."
									},
									"functionSelector": "0c340a24",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "governor",
									"nameLocation": "1683:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1715:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:9:1"
									},
									"scope": 511,
									"src": "1674:87:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1910:129:1",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1929:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "1921:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 359,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"id": 361,
													"name": "governorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "1940:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:35:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1976:56:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1991:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2012:8:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2006:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2006:15:1"
															},
															"variableNames": [
																{
																	"name": "governorOut",
																	"nodeType": "YulIdentifier",
																	"src": "1991:11:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 357,
														"isOffset": false,
														"isSlot": false,
														"src": "1991:11:1",
														"valueSize": 1
													},
													{
														"declaration": 360,
														"isOffset": false,
														"isSlot": false,
														"src": "2012:8:1",
														"valueSize": 1
													}
												],
												"id": 363,
												"nodeType": "InlineAssembly",
												"src": "1967:65:1"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1769:70:1",
										"text": " @dev Returns the address of the current Governor."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_governor",
									"nameLocation": "1854:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1863:2:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "governorOut",
												"nameLocation": "1897:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1889:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:21:1"
									},
									"scope": 511,
									"src": "1845:194:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "2231:140:1",
										"statements": [
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2250:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "2242:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 371,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2242:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"id": 373,
													"name": "pendingGovernorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "2261:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:42:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2304:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2319:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2344:8:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2338:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:15:1"
															},
															"variableNames": [
																{
																	"name": "pendingGovernor",
																	"nodeType": "YulIdentifier",
																	"src": "2319:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 369,
														"isOffset": false,
														"isSlot": false,
														"src": "2319:15:1",
														"valueSize": 1
													},
													{
														"declaration": 372,
														"isOffset": false,
														"isSlot": false,
														"src": "2344:8:1",
														"valueSize": 1
													}
												],
												"id": 375,
												"nodeType": "InlineAssembly",
												"src": "2295:69:1"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2047:70:1",
										"text": " @dev Returns the address of the pending Governor."
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_pendingGovernor",
									"nameLocation": "2132:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:2:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "pendingGovernor",
												"nameLocation": "2209:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2201:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:25:1"
									},
									"scope": 511,
									"src": "2123:248:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "2491:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 381,
																"name": "isGovernor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2510:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2510:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742074686520476f7665726e6f72",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2524:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b",
																"typeString": "literal_string \"Caller is not the Governor\""
															},
															"value": "Caller is not the Governor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31bd1faa207590bf969568dc3322257d5a8ad162739b8373516fd1eb369efa3b",
																"typeString": "literal_string \"Caller is not the Governor\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2502:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2502:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "2502:51:1"
											},
											{
												"id": 386,
												"nodeType": "PlaceholderStatement",
												"src": "2564:1:1"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "2379:82:1",
										"text": " @dev Throws if called by any account other than the Governor."
									},
									"id": 388,
									"name": "onlyGovernor",
									"nameLocation": "2476:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2488:2:1"
									},
									"src": "2467:106:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "2713:51:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 394,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2731:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 396,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "2745:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2745:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2731:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 393,
												"id": 399,
												"nodeType": "Return",
												"src": "2724:32:1"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "2581:77:1",
										"text": " @dev Returns true if the caller is the current Governor."
									},
									"functionSelector": "c7af3352",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGovernor",
									"nameLocation": "2673:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:2:1"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2707:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2707:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:6:1"
									},
									"scope": 511,
									"src": "2664:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2824:128:1",
										"statements": [
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2843:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "2835:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 406,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2835:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"id": 408,
													"name": "governorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "2854:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2835:35:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2890:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2912:8:1"
																	},
																	{
																		"name": "newGovernor",
																		"nodeType": "YulIdentifier",
																		"src": "2922:11:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2905:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2905:29:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 403,
														"isOffset": false,
														"isSlot": false,
														"src": "2922:11:1",
														"valueSize": 1
													},
													{
														"declaration": 407,
														"isOffset": false,
														"isSlot": false,
														"src": "2912:8:1",
														"valueSize": 1
													}
												],
												"id": 410,
												"nodeType": "InlineAssembly",
												"src": "2881:64:1"
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setGovernor",
									"nameLocation": "2781:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "2802:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2794:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2793:21:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2824:0:1"
									},
									"scope": 511,
									"src": "2772:180:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3360:674:1",
										"statements": [
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "3379:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3371:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 415,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3371:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"id": 417,
													"name": "reentryStatusPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 306,
													"src": "3390:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3371:40:1"
											},
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "_reentry_status",
														"nameLocation": "3430:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3422:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3422:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"nodeType": "VariableDeclarationStatement",
												"src": "3422:23:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3465:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3480:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "3505:8:1"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "3499:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3499:15:1"
															},
															"variableNames": [
																{
																	"name": "_reentry_status",
																	"nodeType": "YulIdentifier",
																	"src": "3480:15:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 420,
														"isOffset": false,
														"isSlot": false,
														"src": "3480:15:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "3505:8:1",
														"valueSize": 1
													}
												],
												"id": 422,
												"nodeType": "InlineAssembly",
												"src": "3456:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 424,
																"name": "_reentry_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "3617:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 425,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "3636:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3617:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e742063616c6c",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3646:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb",
																"typeString": "literal_string \"Reentrant call\""
															},
															"value": "Reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b958b17628fb24ecc7d6ab15f85e64e4b96569ce6bb6771328606ab81a75daeb",
																"typeString": "literal_string \"Reentrant call\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3609:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "3609:54:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "3772:8:1"
																	},
																	{
																		"name": "_ENTERED",
																		"nodeType": "YulIdentifier",
																		"src": "3782:8:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3765:26:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 312,
														"isOffset": false,
														"isSlot": false,
														"src": "3782:8:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "3772:8:1",
														"valueSize": 1
													}
												],
												"id": 430,
												"nodeType": "InlineAssembly",
												"src": "3741:61:1"
											},
											{
												"id": 431,
												"nodeType": "PlaceholderStatement",
												"src": "3814:1:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3971:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "3993:8:1"
																	},
																	{
																		"name": "_NOT_ENTERED",
																		"nodeType": "YulIdentifier",
																		"src": "4003:12:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3986:30:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 309,
														"isOffset": false,
														"isSlot": false,
														"src": "4003:12:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "3993:8:1",
														"valueSize": 1
													}
												],
												"id": 432,
												"nodeType": "InlineAssembly",
												"src": "3962:65:1"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2960:370:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 434,
									"name": "nonReentrant",
									"nameLocation": "3345:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3357:2:1"
									},
									"src": "3336:698:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "4101:135:1",
										"statements": [
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "4120:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "4112:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 439,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4112:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"id": 441,
													"name": "pendingGovernorPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "4131:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4112:42:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4174:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "4196:8:1"
																	},
																	{
																		"name": "newGovernor",
																		"nodeType": "YulIdentifier",
																		"src": "4206:11:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4189:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4189:29:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 436,
														"isOffset": false,
														"isSlot": false,
														"src": "4206:11:1",
														"valueSize": 1
													},
													{
														"declaration": 440,
														"isOffset": false,
														"isSlot": false,
														"src": "4196:8:1",
														"valueSize": 1
													}
												],
												"id": 443,
												"nodeType": "InlineAssembly",
												"src": "4165:64:1"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPendingGovernor",
									"nameLocation": "4051:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "newGovernor",
												"nameLocation": "4079:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4071:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:21:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4101:0:1"
									},
									"scope": 511,
									"src": "4042:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4563:122:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4594:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 453,
														"name": "_setPendingGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "4574:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4574:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "4574:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 458,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "4651:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4651:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4664:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 457,
														"name": "PendingGovernorshipTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "4623:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4623:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "EmitStatement",
												"src": "4618:59:1"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "4244:241:1",
										"text": " @dev Transfers Governance of the contract to a new account (`newGovernor`).\n Can only be called by the current Governor. Must be claimed for this to complete\n @param _newGovernor Address of the new Governor"
									},
									"functionSelector": "d38bfff4",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 450,
												"name": "onlyGovernor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "4550:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4550:12:1"
										}
									],
									"name": "transferGovernance",
									"nameLocation": "4500:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "4527:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4519:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4518:22:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4563:0:1"
									},
									"scope": 511,
									"src": "4491:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "4875:187:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 469,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4908:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4908:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 471,
																	"name": "_pendingGovernor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "4922:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4922:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4908:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f6d706c6574652074686520636c61696d",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4955:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a",
																"typeString": "literal_string \"Only the pending Governor can complete the claim\""
															},
															"value": "Only the pending Governor can complete the claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5bb317c428552e33104c71de401213b0ec0a0005e431925ac43c7f0078fba2a",
																"typeString": "literal_string \"Only the pending Governor can complete the claim\""
															}
														],
														"id": 468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4886:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:130:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "4886:130:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 478,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5043:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5043:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 477,
														"name": "_changeGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "5027:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5027:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "5027:27:1"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "4693:140:1",
										"text": " @dev Claim Governance of the contract to a new account (`newGovernor`).\n Can only be called by the new Governor."
									},
									"functionSelector": "5d36b190",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimGovernance",
									"nameLocation": "4848:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:2:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4875:0:1"
									},
									"scope": 511,
									"src": "4839:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5281:187:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "_newGovernor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5300:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5324:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5316:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 491,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5316:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5316:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5300:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720476f7665726e6f722069732061646472657373283029",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5328:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62",
																"typeString": "literal_string \"New Governor is address(0)\""
															},
															"value": "New Governor is address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72d9b7a425fccf6cb174468d07ad1e90656701b4c01d8d3c4a7a963bebba3d62",
																"typeString": "literal_string \"New Governor is address(0)\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5292:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5292:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "5292:65:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "5397:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5397:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "5410:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 499,
														"name": "GovernorshipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "5373:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "EmitStatement",
												"src": "5368:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "_newGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "5447:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 505,
														"name": "_setGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "5434:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5434:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5434:26:1"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "5070:149:1",
										"text": " @dev Change Governance of the contract to a new account (`newGovernor`).\n @param _newGovernor Address of the new Governor"
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeGovernor",
									"nameLocation": "5234:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "_newGovernor",
												"nameLocation": "5258:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5250:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:22:1"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5281:0:1"
									},
									"scope": 511,
									"src": "5225:243:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 512,
							"src": "361:5110:1",
							"usedErrors": []
						}
					],
					"src": "38:5435:1"
				},
				"id": 1
			},
			"contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/proxies/InitializeGovernedUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Governable": [
							511
						],
						"InitializeGovernedUpgradeabilityProxy": [
							735
						]
					},
					"id": 736,
					"license": "agpl-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 736,
							"sourceUnit": 295,
							"src": "65:68:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 514,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "74:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/governance/Governable.sol",
							"file": "../governance/Governable.sol",
							"id": 517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 736,
							"sourceUnit": 512,
							"src": "137:58:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 516,
										"name": "Governable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "146:10:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 519,
										"name": "Governable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 511,
										"src": "519:10:2"
									},
									"id": 520,
									"nodeType": "InheritanceSpecifier",
									"src": "519:10:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "199:268:2",
								"text": " @title BaseGovernedUpgradeabilityProxy\n @dev This contract combines an upgradeability proxy with our governor system.\n It is based on an older version of OpenZeppelins BaseUpgradeabilityProxy\n with Solidity ^0.8.0.\n @author Origin Protocol Inc"
							},
							"fullyImplemented": true,
							"id": 735,
							"linearizedBaseContracts": [
								735,
								511
							],
							"name": "InitializeGovernedUpgradeabilityProxy",
							"nameLocation": "478:37:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "537:135:2",
										"text": " @dev Emitted when the implementation is upgraded.\n @param implementation Address of the new implementation."
									},
									"id": 525,
									"name": "Upgraded",
									"nameLocation": "684:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "709:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "693:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:32:2"
									},
									"src": "678:47:2"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1531:448:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 538,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "1550:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1550:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1571:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 540,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1571:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1571:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1550:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696d706c656d656e746174696f6e20616c726561647920736574",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1583:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44b666870f7297022b4ffea50218b9ff77211d5280e86bcb20acf4c17ec37506",
																"typeString": "literal_string \"implementation already set\""
															},
															"value": "implementation already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44b666870f7297022b4ffea50218b9ff77211d5280e86bcb20acf4c17ec37506",
																"typeString": "literal_string \"implementation already set\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1542:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "1644:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 555,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1710:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 554,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "1700:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1700:41:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1692:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 552,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1692:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1692:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1745:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1692:54:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1684:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1684:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1684:63:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1644:103:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 548,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1623:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:135:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "1623:135:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "_initGovernor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "1785:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 564,
														"name": "_changeGovernor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1769:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "1769:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "1829:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 568,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "1810:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1810:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1810:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 572,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "1851:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1851:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1866:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1851:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "1847:125:2",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "1869:103:2",
													"statements": [
														{
															"assignments": [
																577,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 577,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1890:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 587,
																	"src": "1885:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 576,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1885:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 582,
															"initialValue": {
																"arguments": [
																	{
																		"id": 580,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "1923:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 578,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "1903:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "1903:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1903:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1884:45:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 584,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "1952:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 583,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1944:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1944:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "1944:16:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "733:651:2",
										"text": " @dev Contract initializer with Governor enforcement\n @param _logic Address of the initial implementation.\n @param _initGovernor Address of the initial Governor.\n @param _data Data to send as msg.data to the implementation to initialize\n the proxied contract.\n It should include the signature and the parameters of the function to be\n called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call\n to proxied contract will be skipped."
									},
									"functionSelector": "cf7a1d77",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 535,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 534,
												"name": "onlyGovernor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "1518:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1518:12:2"
										}
									],
									"name": "initialize",
									"nameLocation": "1399:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "1428:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1420:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "_initGovernor",
												"nameLocation": "1453:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1445:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1490:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1477:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1477:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:93:2"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1531:0:2"
									},
									"scope": 735,
									"src": "1390:589:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "2125:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 596,
														"name": "_governor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2143:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 595,
												"id": 598,
												"nodeType": "Return",
												"src": "2136:18:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1987:83:2",
										"text": " @return The address of the proxy admin/it's also the governor."
									},
									"functionSelector": "f851a440",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "2085:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2116:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:9:2"
									},
									"scope": 735,
									"src": "2076:86:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "2297:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 606,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "2315:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 605,
												"id": 608,
												"nodeType": "Return",
												"src": "2308:24:2"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "2170:63:2",
										"text": " @return The address of the implementation."
									},
									"functionSelector": "5c60da1b",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "2248:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:2:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2288:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:9:2"
									},
									"scope": 735,
									"src": "2239:101:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "2611:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2633:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 618,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "2622:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "2622:29:2"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "2348:189:2",
										"text": " @dev Upgrade the backing implementation of the proxy.\n Only the admin can call this function.\n @param newImplementation Address of the new implementation."
									},
									"functionSelector": "3659cfe6",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 615,
												"name": "onlyGovernor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "2598:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2598:12:2"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "2552:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2570:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2562:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:27:2"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:0:2"
									},
									"scope": 735,
									"src": "2543:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "3343:141:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3365:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 633,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3354:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3354:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3354:29:2"
											},
											{
												"assignments": [
													638,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3400:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "3395:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 637,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3395:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3444:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 639,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "3413:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "3413:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3413:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "3468:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "3460:16:2"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "2667:534:2",
										"text": " @dev Upgrade the backing implementation of the proxy and call a function\n on the new implementation.\n This is useful to initialize the proxied contract.\n @param newImplementation Address of the new implementation.\n @param data Data to send as msg.data in the low level call.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding."
									},
									"functionSelector": "4f1ef286",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 630,
												"name": "onlyGovernor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 388,
												"src": "3325:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3325:12:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3216:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3241:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3233:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3275:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3260:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3260:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:48:2"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3343:0:2"
									},
									"scope": 735,
									"src": "3207:277:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3615:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 653,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "3626:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3626:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "3626:11:2"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "3492:89:2",
										"text": " @dev Fallback function.\n Implemented entirely in `_fallback`."
									},
									"id": 657,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3595:2:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3615:0:2"
									},
									"scope": 735,
									"src": "3587:58:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "3987:849:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4007:822:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4264:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4270:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4270:14:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4251:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4251:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4416:65:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4443:5:2"
																	},
																	{
																		"name": "_impl",
																		"nodeType": "YulIdentifier",
																		"src": "4450:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4457:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4460:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4479:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "4430:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:51:2"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "4420:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4552:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4555:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "4558:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:16:2"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4537:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4537:38:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4674:61:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4700:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "4703:14:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4703:16:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4693:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4693:27:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4693:27:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4667:68:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4672:1:2",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4757:61:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4783:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "4786:14:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4786:16:2"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "4776:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4776:27:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4776:27:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4749:69:2",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "4598:6:2"
															},
															"nodeType": "YulSwitch",
															"src": "4591:227:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "4450:5:2",
														"valueSize": 1
													}
												],
												"id": 663,
												"nodeType": "InlineAssembly",
												"src": "3998:831:2"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3653:285:2",
										"text": " @dev Delegates execution to an implementation contract.\n This is a low level function that doesn't return to its internal call site.\n It will return to the external caller whatever the implementation returns.\n @param _impl Address to delegate."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "3953:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_impl",
												"nameLocation": "3971:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3963:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3962:15:2"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3987:0:2"
									},
									"scope": 735,
									"src": "3944:892:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "5098:2:2",
										"statements": []
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4844:214:2",
										"text": " @dev Function that is run as the first thing in the fallback function.\n Can be redefined in derived contracts to add functionality.\n Redefinitions must call super._willFallback()."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nameLocation": "5073:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5086:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5098:0:2"
									},
									"scope": 735,
									"src": "5064:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "5241:73:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 674,
														"name": "_willFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "5252:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5252:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "5252:15:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 678,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "5288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5288:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 677,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "5278:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5278:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "5278:28:2"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "5108:97:2",
										"text": " @dev fallback implementation.\n Extracted to enable manual triggering."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "5220:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5229:2:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5241:0:2"
									},
									"scope": 735,
									"src": "5211:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "5322:218:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 687,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "5572:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "5546:123:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 685,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5546:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 686,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5603:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "5868:117:2",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "5887:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "5879:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 693,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5879:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"id": 695,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "5894:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5879:34:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5933:45:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5948:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5962:4:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5956:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:11:2"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "5948:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 691,
														"isOffset": false,
														"isSlot": false,
														"src": "5948:4:2",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:4:2",
														"valueSize": 1
													}
												],
												"id": 697,
												"nodeType": "InlineAssembly",
												"src": "5924:54:2"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "5678:120:2",
										"text": " @dev Returns the current implementation.\n @return impl Address of the current implementation"
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "5813:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5828:2:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "5862:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "5854:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5853:14:2"
									},
									"scope": 735,
									"src": "5804:181:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6192:99:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "6222:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 705,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "6203:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6203:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "6203:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 710,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "6265:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 709,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "6256:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6256:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "6251:32:2"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "5993:137:2",
										"text": " @dev Upgrades the proxy to a new implementation.\n @param newImplementation Address of the new implementation."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "6145:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6164:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6156:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6155:27:2"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6192:0:2"
									},
									"scope": 735,
									"src": "6136:155:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "6508:290:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 723,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "6560:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 721,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "6541:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$294_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 17,
																"src": "6541:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6541:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6593:61:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															},
															"value": "Cannot set a proxy implementation to a non-contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6519:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6519:146:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "6519:146:2"
											},
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "6686:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "6678:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 728,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6678:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"id": 730,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "6693:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6678:34:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6734:57:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6756:4:2"
																	},
																	{
																		"name": "newImplementation",
																		"nodeType": "YulIdentifier",
																		"src": "6762:17:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "6749:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6749:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6749:31:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 717,
														"isOffset": false,
														"isSlot": false,
														"src": "6762:17:2",
														"valueSize": 1
													},
													{
														"declaration": 729,
														"isOffset": false,
														"isSlot": false,
														"src": "6756:4:2",
														"valueSize": 1
													}
												],
												"id": 732,
												"nodeType": "InlineAssembly",
												"src": "6725:66:2"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "6299:139:2",
										"text": " @dev Sets the implementation address of the proxy.\n @param newImplementation Address of the new implementation."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "6453:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6480:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "6472:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:27:2"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6508:0:2"
									},
									"scope": 735,
									"src": "6444:354:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 736,
							"src": "469:6332:2",
							"usedErrors": []
						}
					],
					"src": "38:6765:2"
				},
				"id": 2
			}
		}
	}
}